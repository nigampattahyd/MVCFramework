@model CRMHub.ViewModel.ActivityModel

@{ ViewBag.Title = "Index";
 Layout = "~/Views/Shared/_Layout1.cshtml";
}

<div class="widget">
    <div class="widget-header bordered-bottom bordered-themesecondary">
        <i class="widget-icon fa fa-tags themesecondary"></i>
        <span class="widget-caption themesecondary">Notifications List</span>
    </div><!--Widget Header-->
    <div class="widget-body  no-padding">
        <div class="tickets-container">
            <div class="row">
                <!-- col-sm-6 -->
                <div id="pnlSrchCriteria">
                    <div class="col-sm-3">
                        <div class="input-group" style="margin-bottom:10px;">
                            @*<input type="text" class="form-control" placeholder="Search these ventures">*@

                            @Html.TextBoxFor(m => m.activity.Keyword, new { @id = "txtNotifications", @class = "form-control", @placeholder = "Search these Notifications", @maxlength = "100" })
                            <span class="input-group-btn">
                                <span id="searchclear" class="glyphicon glyphicon-remove-circle" title="Clear Search"></span>
                                <button class="btn btn-default" type="button" id="btnSearchNotifications"><i class="glyphicon glyphicon-search"></i></button>
                            </span>
                        </div>
                    </div>
                  
                </div>
                <div class="col-sm-12 col-xs-12">
                    <div class="table-primary table-striped">
                        <table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered" id="tblNotifications" width="100%">
                            <thead>
                                <tr>
                                    @*<th><input class="fa fa-square-o" type="checkbox" id="chkHeader" /></th>
                                        <th>&nbsp;</th>*@
                                    <th data-class="expand">History Type</th>
                                    <th data-hide="phone">Due Date</th>
                                    <th data-hide="tablet,tabletlandscape,phone">Remind Date</th>
                                    <th data-hide="phone">Priority</th>
                                    <th data-hide="tablet,tabletlandscape,phone">Status</th>
                                    <th data-hide="tablet,tabletlandscape,phone">Module</th>
                                    <th data-hide="tablet,tabletlandscape,phone">Assigned User</th>
                                </tr>
                            </thead>
                            <tbody> </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>





@*----------------------------------------------------------------------------*@




<script type="text/javascript">


    $(document).ready(function () {
        //alert("Hello");
        $('html').keyup(function (e) {
            
            if (e.keyCode == 8) {

                $('#btnSearchNotifications').click();
                if ($("#txtNotifications").val() == "") {
                    $('#searchclear').hide();
                }
            }
        });
        $("#Notifications").addClass("active");

        BindNotificationsLists();

        $('#tblNotifications').on('length.dt', function (e, settings, len) {

            $('#loading').css('display', 'block');
        });

        $('#tblNotifications').on('page.dt', function () {

            $('#loading').css('display', 'block');
        });
    });



    
    $('#btnSearchNotifications').click(function () {
        
        $('#searchclear').show();
        $('#loading').css('display', 'block');
        $("#tblNotifications").dataTable().fnDestroy();
        BindNotificationsLists();

        $('#tblNotifications').on('length.dt', function (e, settings, len) {

            $('#loading').css('display', 'block');
        });

        $('#tblNotifications').on('page.dt', function () {

            $('#loading').css('display', 'block');
        });

        $("#searchclear").click(function () {
            $("#txtNotifications").val('');
            $('#btnSearchNotifications').click();
            $('#searchclear').hide();
        });

    });

    function BindNotificationsLists() {
        // alert("BindActivities");
        // $('#loading').css('display', 'block');
        var responsiveHelper = undefined;
        var breakpointDefinition = {
            desktop: Infinity,
            tablet: 1024,
            tabletlandscape: 768,
            phone: 480
        };
        var tableElement = $('#tblNotifications');
        tableElement.dataTable({
            autoWidth: false,
            preDrawCallback: function () {
                if (!responsiveHelper) {
                    responsiveHelper = new ResponsiveDatatablesHelper(tableElement, breakpointDefinition);
                }
            },
            rowCallback: function (nRow) {
                responsiveHelper.createExpandIcon(nRow);
            },
            drawCallback: function (oSettings) {
                responsiveHelper.respond();
            },

            "aLengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
            "pagingType": "full_numbers",
            "serverSide": true,
            "bFilter": false,
            "sAjaxSource": "../Notifications/getNotifications",
            "fnServerParams": function (aoData) {
                aoData.push(

                    { "name": "Keyword_Notification", "value": "" + $("#txtNotifications").val() + "" }
                    );
            },
            "fnServerData": function (sSource, aoData, fnCallback) {
                $.ajax({
                    "dataType": 'json',
                    "contentType": "application/json; charset=utf-8",
                    "type": "GET",
                    "url": sSource,
                    "data": aoData,
                    "success":
                                function (msg) {
                                    $('#loading').css('display', 'none');
                                    fnCallback(msg);
                                }
                });
            },
            "asStripeClasses": ['odd gradeX', 'even gradeC'],
            "aoColumnDefs": [
           
                {
                    "targets": [0], "visible": true, "bSortable": true, "mDataProp": "ActivityName",
                    "render": function (data, type, row) {
                        if (row["daysdiff"] <= 0) {
                            return "<span class=\"label label-danger  inline-block\">" + row["ActivityName"] + "</span>";
                        }
                        else if (row["daysdiff"] > 0) {
                            return "<span class=\"label label-success  inline-block\">" + row["ActivityName"] + "</span>";

                        }
                        else if (row["daysdiff"] == 0) {
                            return "<span class=\"label label-warning  inline-block\">" + row["ActivityName"] + "</span>";

                        }
                    }

                },

                 {
                     "targets": [1], "visible": true, "bSortable": true, "mDataProp": "DueDate",
                     "render": function (data, type, row) {
                         var jsDate1 = data;
                         if (jsDate1 == null) {
                             return jsDate1 = "";
                         }
                         else if (jsDate1.value != "") {
                             var jsDate = new Date(parseInt(row["DueDate"].substr(6)));
                             return (jsDate.getMonth() + 1) + '/' + jsDate.getDate() + '/' + jsDate.getFullYear();
                         }

                     }
                 },

              {
                  "targets": [2], "visible": true, "bSortable": true, "mDataProp": "RemindDate",
                  "render": function (data, type, row) {
                      var jsDate1 = data;
                      if (jsDate1 == null) {
                          return jsDate1 = "";
                      }
                      else if (jsDate1.value != "") {
                          var jsDate = new Date(parseInt(row["RemindDate"].substr(6)));
                          return (jsDate.getMonth() + 1) + '/' + jsDate.getDate() + '/' + jsDate.getFullYear();
                      }

                  }
              },


                 { "targets": [3], "visible": true, "bSortable": true, "mDataProp": "Priority" },
                 { "targets": [4], "visible": true, "bSortable": true, "mDataProp": "Status" },
                 { "targets": [5], "visible": true, "bSortable": true, "mDataProp": "AccountTypeName" },
            { "targets": [6], "visible": true, "bSortable": true, "mDataProp": "AssignedName" }

            ],
            "fnDrawCallback": function (oSettings) {


                $('#loading').css('display', 'none');
            }
        }).api();
    }


</script>
