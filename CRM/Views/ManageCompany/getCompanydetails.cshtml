@model CRMHub.ViewModel.CompanyViewModel
@*@model CRMHub.EntityFramework.Company*@
@{
    ViewBag.Title = "getCompanydetails";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<link href="~/Content/assets/css/DateTimePicker/bootstrap-datetimepicker.min.css" rel="stylesheet" />
@using (Html.BeginForm("", "", FormMethod.Post))
{
    <div id="content-wrapper">
        <div id="CustomBootstrapAlertBox">
        </div>
        <div class="row">

            <script>
                init.push(function () {
                    $('ul.bs-tabdrop-example').tabdrop();
                });
            </script>
            <div class="panel">
                <div class="panel-heading">
                    <div class="row">
                        <!-- Page header, center on small screens -->
                        <h1 class="col-xs-6 col-sm-4 text-left text-left-sm panel-title"><i class="fa fa-user page-header-icon"></i>&nbsp;Edit&nbsp;@Html.DisplayFor(m => m.CompanyObj.Name)</h1>
                        <div class="col-xs-6 col-sm-8">
                            <div class="row">
                                <div class="pull-right">
                                    @*<a href="#" class="btn btn-flat btn-labeled btn-primary" tabindex="-1"
                                        data-toggle="modal" data-target="#uidemo-modals-alerts-info"><span class="btn-label icon fa fa-question-circle"></span>Help</a>*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @*<span id="errorsymbol" style="color:red;display:none;margin-left:5px;" class="fa fa-exclamation-circle"></span>
                    <div id="ErrorMessages" style="margin-left:20px;color:red;font-size:15px; ">

                    </div>*@


                <div class="panel-body">
                    <span id="errorsymbol" style="color:red;display:none;margin-left:5px;" class="fa fa-exclamation-circle"></span>
                    <div id="ErrorMessages" style="margin-left:20px;color:red;font-size:15px; ">

                    </div>
                    <div class="row">

                        <!-- Tabs -->

                        <ul class="nav nav-tabs bs-tabdrop-example" id="TabMenu" style="margin-top:20px;">
                            <li id="TabStripAccountDetail" class="active"><a href="#TabStripAccountDetail_View" data-toggle="tab">Company Detail</a></li>
                            <li id="TabStripContacts"><a href="#TabStripContacts_View" data-toggle="tab">Contacts</a></li>
                            <li id="TabStripDocument"><a href="#TabStripDocument_View" data-toggle="tab" class="cssbuttongo">Opportunities</a></li>
                            <li id="TabStripOpenActivity"><a href="#TabStripOpenActivity_View" data-toggle="tab">Activity</a></li>
                            <li id="TabStripInvoice"><a href="#TabStripOpenInvoice_View" data-toggle="tab">Invoice</a></li>
                        </ul>



                        <div class="tab-pane active" id="TabStripAccountDetail_View">

                            <div id="Getleads">
                                <div class="row">

                                    <div class="col-sm-12">



                                        <div class="col-xs-12 col-sm-12 text-right text-right-sm" id="white_bg">
                                            <ul class="table-nav-item">
                                                <li class="btn btn-flat btn-labeled btn-primary" id="btnmargin_top">

                                                    <a class="sear_btn1" id="btnLead" onclick="EditCompanydetails()">
                                                        <span class="btn-label icon  fa fa-pencil-square-o" style="margin-right:6px;"> </span>
                                                        Edit
                                                    </a>


                                                </li>




                                                <li class="btn btn-flat btn-labeled btn-primary" id="btnmargin_top">
                                                    <a style="color: #fff; text-decoration: none; padding: 0px; font-weight: normal" href="@Url.Action("Index", "ManageCompany" )">
                                                        <span class="btn-label icon fa fa-backward" style="margin-right:6px;"> </span>
                                                        Back
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>


                                </div>
                                <div class="row">
                                    <div class="col-sm-12">

                                        <!-- / .panel -->

                                        <div class="panel">
                                            <div class="panel-heading">

                                                <div class="row">
                                                    <!-- Page header, center on small screens -->
                                                    <h4 class="col-xs-12 col-sm-12 text-left text-left-sm panel-title">
                                                        @Html.DisplayFor(m => m.CompanyObj.Name)
                                                    </h4>

                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="row">
                                                            <div class="pull-right">

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                            <!-- / .panel-heading -->


                                            <div class="panel-body">
                                                <div class="col-sm-12 no-padding-hr">

                                                    <div class="row">


                                                        <div class="row form-group">
                                                            <label class="col-sm-2 control-label">Company&nbsp;Owner :</label>
                                                            <div class="col-sm-3">
                                                                <label>
                                                                    @Html.DisplayFor(m => m.CompanyObj.Ownership, new { @class = "form-control input-sm", @id = "txtOwnerShip" })
                                                                </label>
                                                            </div>
                                                        </div>


                                                        <div class="row form-group">
                                                            <label class="col-sm-2 control-label">Company&nbsp;Industry&nbsp;:</label>
                                                            <div class="col-sm-3">

                                                                <label>
                                                                    @Html.DropDownListFor(m => m.CompanyObj.CompanyIndustryID, new List<SelectListItem>
                                                                            {
                                                                            new SelectListItem{Text="None",Value=""},
                                                                    new SelectListItem{Text="ASP",Value="1"},
                                                                    new SelectListItem{Text="Data/Telecom OEM",Value="2"},
                                                                    new SelectListItem{Text="ERP",Value="3"},
                                                                    new SelectListItem{Text="Government/Military",Value="4"},
                                                                    new SelectListItem{Text="Large Enterprise",Value="5"},
                                                                    new SelectListItem{Text="ManagementISV",Value="6"},
                                                                    new SelectListItem{Text="MSP (Management Service Provider)",Value="7"},
                                                                    new SelectListItem{Text="Network Equipment (Enterprise)",Value="8"},
                                                                    new SelectListItem{Text="Non-management ISV",Value="9"},
                                                                    new SelectListItem{Text="Optical Networking",Value="10"},

                                                                     new SelectListItem{Text="Service Provider",Value="11"},
                                                                    new SelectListItem{Text="Small/Medium Enterprise",Value="12"},
                                                                    new SelectListItem{Text="Storage Equipment",Value="13"},
                                                                    new SelectListItem{Text="Storage Service Provider",Value="14"},
                                                                    new SelectListItem{Text="Systems Integrator",Value="15"},
                                                                    new SelectListItem{Text="Wireless Industry",Value="16"},


                                                                    new SelectListItem{Text="Other",Value="17"}
                                                                            }, new { @id = "ddlCompanyIndustry", @class = "form-control input-sm", @disabled = "disabled" })
                                                                </label>
                                                            </div>
                                                        </div>


                                                        <div class="row form-group">
                                                            <label class="col-sm-2 control-label">Employees&nbsp;:</label>
                                                            <div class="col-sm-3">

                                                                <label>
                                                                    @Html.DisplayFor(m => m.CompanyObj.Employees, new { @id = "txtEmployees", @class = "form-control input-sm" })
                                                                </label>
                                                            </div>
                                                        </div>


                                                        <div class="row form-group">
                                                            <label class="col-sm-2 control-label">Annual&nbsp;Revenue&nbsp;($)&nbsp;:</label>
                                                            <div class="col-sm-3">

                                                                <label>
                                                                    @Html.DisplayFor(m => m.CompanyObj.AnnualRevenue, new { @id = "txtAnnualRevenue", @class = "form-control input-sm" })
                                                                </label>
                                                            </div>
                                                        </div>


                                                        <div class="row form-group">
                                                            <label class="col-sm-2 control-label">Phone&nbsp;:</label>
                                                            <div class="col-sm-3">

                                                                <label>
                                                                    @Html.DisplayFor(m => m.CompanyObj.Phone, new { @id = "txtPhone", @class = "form-control input-sm", onkeypress = "return onlynumbers(event,this);", @MaxLength = "20" })
                                                                </label>
                                                            </div>
                                                        </div>

                                                    </div>

                                                </div>
                                            </div>

                                        </div>



                                        <div class="panel">
                                            <div class="panel-heading">

                                                <div class="row">
                                                    <!-- Page header, center on small screens -->
                                                    <h4 class="col-xs-12 col-sm-12 text-left text-left-sm panel-title">
                                                        Company&nbsp;Detail
                                                    </h4>

                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="row">
                                                            <div class="pull-right">

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>



                                            <!-- / .panel-heading -->

                                            <div class="panel-body">
                                                <div class="col-sm-12 no-padding-hr">
                                                    <div class="row">
                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">Company&nbsp;Owner&nbsp;:</label>
                                                                <div class="input-group">
                                                                    @Html.TextBoxFor(m => m.CompanyObj.Ownership, new { @class = "form-control input-sm", @id = "txtOwnerShip", @disabled = "disabled" })
                                                                    <span class="input-group-addon" type=" button" style="cursor:pointer;" onclick="return show_UsersPopUp(750, 450);">
                                                                        <i class="fa fa-search"></i>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>


                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">Company Name :<span style="color: red">*</span></label>
                                                                @Html.TextBoxFor(m => m.CompanyObj.Name, new { @class = "form-control input-sm", @id = "txtCompanyName", @validate = "Required", @data_val_required = "Company Name", @disabled = "disabled" })

                                                            </div>
                                                        </div>

                                                        @Html.HiddenFor(m => m.CompanyObj.ID, new { @id = "txtcmpID" })

                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">Phone&nbsp;:</label>

                                                                @Html.TextBoxFor(m => m.CompanyObj.Phone, new { @id = "txtPhone", @class = "form-control input-sm", onkeypress = "return onlynumbers(event,this);", @MaxLength = "20", @disabled = "disabled" })
                                                            </div>
                                                        </div>

                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">Website&nbsp;:</label>
                                                                @Html.TextBoxFor(m => m.CompanyObj.Website, new { @class = "form-control input-sm", @id = "txtWebSite", @disabled = "disabled" })
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">Fax&nbsp;:</label>

                                                                @Html.TextBoxFor(m => m.CompanyObj.Fax, new { @id = "txtFaxNo", @class = "form-control input-sm", @onKeyPress = "return onlynumbers(event,this);", @MaxLength = "20", @disabled = "disabled" })
                                                            </div>
                                                        </div>

                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">Parent&nbsp;Company&nbsp;:</label>
                                                                @Html.TextBoxFor(m => m.CompanyObj.ParentCompanyName, new { @class = "form-control input-sm", @id = "txtParentCompanyName", @disabled = "disabled" })
                                                                @Html.HiddenFor(m => m.CompanyObj.ParentCompanyID, new { @id = "txtParentCompanyID" })
                                                                @*<div class="input-group">
                                                                        @Html.TextBoxFor(m => m.ParentCompanyName, new { @class = "form-control input-sm", @id = "txtParentCompanyName", @disabled = "disabled" })
                                                                        <span class="input-group-addon" type=" button" style="cursor:pointer;" onclick="return show_NewAccountPopUp(750, 450);">
                                                                            <i class="fa fa-search"></i>
                                                                        </span>
                                                                        @Html.HiddenFor(m => m.ParentCompanyID, new { @id = "txtParentCompanyID" })
                                                                    </div>*@
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">Tricker&nbsp;Symbol&nbsp;:</label>

                                                                @Html.TextBoxFor(m => m.CompanyObj.TrickerSymbol, new { @id = "txtTricker", @class = "form-control input-sm", @disabled = "disabled" })
                                                            </div>
                                                        </div>

                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">Company&nbsp;Type&nbsp;:</label>

                                                                @Html.DropDownListFor(m => m.CompanyObj.CompanytypeID, new List<SelectListItem>
                                                                            {
                                                                            new SelectListItem{Text="None",Value=""},
                                                                    new SelectListItem{Text="Analyst",Value="1"},
                                                                    new SelectListItem{Text="Competitor",Value="2"},
                                                                    new SelectListItem{Text="Customer",Value="3"},
                                                                    new SelectListItem{Text="Integrator",Value="4"},
                                                                    new SelectListItem{Text="Investor",Value="5"},
                                                                    new SelectListItem{Text="Partner",Value="6"},
                                                                    new SelectListItem{Text="Press",Value="7"},
                                                                    new SelectListItem{Text="Prospect",Value="8"},
                                                                    new SelectListItem{Text="Reseller",Value="9"},
                                                                    new SelectListItem{Text="Recruiting Resource",Value="10"},
                                                                    new SelectListItem{Text="Other",Value="Other"}
                                                                            }, new { @id = "ddlCompanytype", @class = "form-control input-sm", @disabled = "disabled" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">

                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">Company&nbsp;Industry&nbsp;:</label>

                                                                @Html.DropDownListFor(m => m.CompanyObj.CompanyIndustryID, new List<SelectListItem>
                                                                            {
                                                                            new SelectListItem{Text="None",Value=""},
                                                                    new SelectListItem{Text="ASP",Value="1"},
                                                                    new SelectListItem{Text="Data/Telecom OEM",Value="2"},
                                                                    new SelectListItem{Text="ERP",Value="3"},
                                                                    new SelectListItem{Text="Government/Military",Value="4"},
                                                                    new SelectListItem{Text="Large Enterprise",Value="5"},
                                                                    new SelectListItem{Text="ManagementISV",Value="6"},
                                                                    new SelectListItem{Text="MSP (Management Service Provider)",Value="7"},
                                                                    new SelectListItem{Text="Network Equipment (Enterprise)",Value="8"},
                                                                    new SelectListItem{Text="Non-management ISV",Value="9"},
                                                                    new SelectListItem{Text="Optical Networking",Value="10"},

                                                                     new SelectListItem{Text="Service Provider",Value="11"},
                                                                    new SelectListItem{Text="Small/Medium Enterprise",Value="12"},
                                                                    new SelectListItem{Text="Storage Equipment",Value="13"},
                                                                    new SelectListItem{Text="Storage Service Provider",Value="14"},
                                                                    new SelectListItem{Text="Systems Integrator",Value="15"},
                                                                    new SelectListItem{Text="Wireless Industry",Value="16"},


                                                                    new SelectListItem{Text="Other",Value="17"}
                                                                            }, new { @id = "ddlCompanyIndustry", @class = "form-control input-sm", @disabled = "disabled" })
                                                            </div>
                                                        </div>



                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">Company&nbsp;Ownership&nbsp;Type&nbsp;:</label>

                                                                @Html.DropDownListFor(m => m.CompanyObj.CompanyStatusID, new List<SelectListItem>
                                                                            {
                                                                            new SelectListItem{Text="None",Value=""},
                                                                    new SelectListItem{Text="Others",Value="1"},
                                                                    new SelectListItem{Text="Private",Value="2"},
                                                                    new SelectListItem{Text="Public",Value="3"},
                                                                    new SelectListItem{Text="Subsidiary",Value="4"}

                                                                            }, new { @id = "ddlOwnershipType", @class = "form-control input-sm", @disabled = "disabled" })
                                                            </div>
                                                        </div>


                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">Employees&nbsp;:</label>

                                                                @Html.TextBoxFor(m => m.CompanyObj.Employees, new { @id = "txtEmployees", @class = "form-control input-sm", @disabled = "disabled" })
                                                            </div>
                                                        </div>

                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">Annual&nbsp;Revenue&nbsp;($)&nbsp;:</label>

                                                                @Html.TextBoxFor(m => m.CompanyObj.AnnualRevenue, new { @id = "txtAnnualRevenue", @class = "form-control input-sm", @disabled = "disabled" })
                                                            </div>
                                                        </div>

                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">SIC&nbsp;Code&nbsp;:</label>

                                                                @Html.TextBoxFor(m => m.CompanyObj.SicCode, new { @id = "txtSicCode", @class = "form-control input-sm", @disabled = "disabled" })
                                                            </div>
                                                        </div>


                                                    </div>
                                                </div>
                                            </div>

                                        </div>


                                        <div class="panel">
                                            <div class="panel-heading">
                                                <div class="row">
                                                    <!-- Page header, center on small screens -->
                                                    <h6 class="col-xs-12 col-sm-12 text-left text-left-sm panel-title">
                                                        Address Detail
                                                    </h6>
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="row">
                                                            <div class="pull-right">

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                            <!-- / .panel-heading -->

                                            <div class="panel-body">
                                                <div class="col-sm-12 no-padding-hr">
                                                    <div class="row">
                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <span class="label label-primary label-tag">MAILING</span>
                                                            </div>
                                                        </div>
                                                    </div>


                                                    <div class="row">
                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">Address&nbsp;1 :</label>

                                                                @Html.TextBoxFor(m => m.CompanyObj.BillingAddress, new { @id = "txtAddressBilling", @class = "form-control input-sm", @maxlength = "50", @disabled = "disabled" })
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">Address&nbsp;2 :</label>

                                                                @Html.TextBoxFor(m => m.CompanyObj.Billingstreet, new { @id = "txtBillingStreet", @class = "form-control input-sm", @maxlength = "50", @disabled = "disabled" })
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">
                                                                    City :
                                                                </label>

                                                                @Html.TextBoxFor(m => m.CompanyObj.Billingcity, new { @id = "txtBillingCity", @class = "form-control input-sm", @maxlength = "50", @disabled = "disabled" })
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label" id="lblStateProvince">
                                                                    State :
                                                                </label>

                                                                @*Dropdown list for State*@

                                                                @Html.DropDownListFor(m => m.CompanyObj.BillingstateID, ViewBag.StateList as List<SelectListItem>, new { @id = "ddlBillingstate", @class = "form-control input-sm", @maxlength = "50", @disabled = "disabled" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label" id="lblPostalCode" runat="server">ZipCode:</label>

                                                                @Html.TextBoxFor(m => m.CompanyObj.Billingzip, new { @id = "txtBillingZip", @class = "form-control zipmask", @maxlength = "9", onKeyPress = "return onKeyPressOnlyZip(event,this);", @onblur = "return ValidateZip(this);", @onfocus = "return ClickZip(this);", @disabled = "disabled" })
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">
                                                                    <asp:Label ID="lblMailingCountry" runat="server"></asp:Label>
                                                                    Country
                                                                </label>
                                                                @*Dropdown list for Country*@

                                                                @Html.DropDownListFor(m => m.CompanyObj.BillingcountryID, ViewBag.CountryList as List<SelectListItem>, new { @id = "ddlBillingCountry", @class = "form-control input-sm", @maxlength = "50", @disabled = "disabled" })
                                                            </div>
                                                        </div>
                                                    </div>



                                                    <div class="row">
                                                        <div class="col-sm-6">
                                                            <div class="form-group no-margin-hr">
                                                                @Html.CheckBox("CopyMailing", new { @id = "chkcopyadd" })
                                                                @Html.Label("Copy Mailing to Billing ")
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <span class="label label-primary label-tag">BILLING</span>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="row">
                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">Address&nbsp;1 :</label>

                                                                @Html.TextBoxFor(m => m.CompanyObj.MailingAddress, new { @id = "txtAddressMailing", @class = "form-control input-sm", @maxlength = "50", @disabled = "disabled" })
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">Address&nbsp;2 :</label>

                                                                @Html.TextBoxFor(m => m.CompanyObj.Shippingstreet, new { @id = "txtShippingstreet", @class = "form-control input-sm", @maxlength = "50", @disabled = "disabled" })
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">
                                                                    City :
                                                                </label>

                                                                @Html.TextBoxFor(m => m.CompanyObj.Shippingcity, new { @id = "txtShippingcity", @class = "form-control input-sm", @maxlength = "50", @disabled = "disabled" })
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label" id="lblStateProvince">
                                                                    State :
                                                                </label>

                                                                @*Dropdown list for State*@
                                                                @Html.DropDownListFor(m => m.CompanyObj.ShippingstateID, ViewBag.StateList as List<SelectListItem>, new { @id = "ddlShippingstate", @class = "form-control input-sm", @maxlength = "50", @disabled = "disabled" })

                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label" id="lblPostalCode" runat="server">ZipCode:</label>

                                                                @Html.TextBoxFor(m => m.CompanyObj.Shippingzip, new { @id = "txtShippingZip", @class = "form-control zipmask", @maxlength = "9", onKeyPress = "return onKeyPressOnlyZip(event,this);", @onblur = "return ValidateZip(this);", @onfocus = "return ClickZip(this);", @disabled = "disabled" })
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">
                                                                    <asp:Label ID="lblMailingCountry" runat="server"></asp:Label>
                                                                    Country
                                                                </label>
                                                                @*Dropdown list for Country*@

                                                                @Html.DropDownListFor(m => m.CompanyObj.ShippingcountryID, ViewBag.CountryList as List<SelectListItem>, new { @id = "ddlShippingCountry", @class = "form-control input-sm", @maxlength = "50", @disabled = "disabled" })
                                                            </div>
                                                        </div>
                                                    </div>


                                                </div>
                                            </div>

                                        </div>


                                        <div class="panel">
                                            <div class="panel-heading">
                                                <div class="row">
                                                    <!-- Page header, center on small screens -->
                                                    <h6 class="col-xs-12 col-sm-12 text-left text-left-sm panel-title">
                                                        Description
                                                    </h6>
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="row">
                                                            <div class="pull-right">

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>


                                            <!-- / .panel-heading -->

                                            <div class="panel-body">

                                                @Html.TextAreaFor(m => m.CompanyObj.Description, new { @id = "txtDescription", @class = "textEditor", @disabled = "disabled" })
                                            </div>
                                            <!-- / .panel-body -->


                                        </div>

                                        @*Binding Custom Fields*@
                                        <div class="panel">
                                            <div class="panel-heading">
                                                <div class="row">
                                                    <!-- Page header, center on small screens -->
                                                    <h6 class="col-xs-12 col-sm-12 text-left text-left-sm panel-title">
                                                        Custom Fields
                                                    </h6>
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="row">
                                                            <div class="pull-right">

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                @*<a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion-example"
                                                    href="#collapse1c">Custom Fields</a>*@
                                            </div>
                                            <!-- / .panel-heading -->

                                            <div class="panel-body">
                                                <div class="col-sm-12 no-padding-hr">
                                                    <div class="row">
                                                        @for (int i = 0; i < Model.lstcustomVM.Count; i++)
                                                        {
                                                            <div class="col-sm-4">
                                                                <div class="form-group no-margin-hr">
                                                                    @Html.HiddenFor(m => m.lstcustomVM[i].Column_Type)
                                                                    @Html.HiddenFor(m => m.lstcustomVM[i].FieldId)
                                                                    @Html.HiddenFor(m => m.lstcustomVM[i].CValueId)
                                                                    @if (Model.lstcustomVM[i].Column_Type == "textbox")
                                                                    {
                                                                        @Html.DisplayFor(m => m.lstcustomVM[i].Column_Label)
                                                                        if (@Model.lstcustomVM[i].RequiredField == true)
                                                                        {
                                                                            <span style="color: red">*</span>
                                                                            @Html.TextBoxFor(m => m.lstcustomVM[i].CustomFieldvalue, new { @class = "form-control input-sm", @MaxLength = @Model.lstcustomVM[i].MaxLength, @TabIndex = "37", rows = "1", cols = "1", @validate = "Required", @data_val_required = @Model.lstcustomVM[i].Column_Label, @title = @Model.lstcustomVM[i].HoverText, @disabled = "disabled" })
                                                                        }
                                                                        else
                                                                        {
                                                                            @*@Html.TextBoxFor(m => m.lstcustomVM[i].CustomFieldvalue, new { @class = "form-control input-sm", @MaxLength = @Model.lstcustomVM[i].MaxLength, @TabIndex = "37", rows = "1", cols = "1", @validate = "Required", @data_val_required = @Model.lstcustomVM[i].Column_Label, @title = @Model.lstcustomVM[i].HoverText, })*@
                                                                            @Html.TextBoxFor(m => m.lstcustomVM[i].CustomFieldvalue, new { @class = "form-control input-sm", @MaxLength = @Model.lstcustomVM[i].MaxLength, @TabIndex = "37", rows = "1", cols = "1", @disabled = "disabled" })
                                                                        }

                                                                    }


                                                                    @if (Model.lstcustomVM[i].Column_Type == "textarea")
                                                                    {
                                                                        @Html.DisplayFor(m => m.lstcustomVM[i].Column_Label)
                                                                        if (@Model.lstcustomVM[i].RequiredField == true)
                                                                        {
                                                                            <span style="color: red">*</span>
                                                                            @Html.TextAreaFor(m => m.lstcustomVM[i].CustomFieldvalue, new { @class = "form-control input-sm", @MaxLength = @Model.lstcustomVM[i].MaxLength, @TabIndex = "37", rows = "1", cols = "1", @validate = "Required", @data_val_required = @Model.lstcustomVM[i].Column_Label, @title = @Model.lstcustomVM[i].HoverText, @disabled = "disabled" })
                                                                        }
                                                                        else
                                                                        {
                                                                            @Html.TextAreaFor(m => m.lstcustomVM[i].CustomFieldvalue, new { @class = "form-control input-sm", @MaxLength = @Model.lstcustomVM[i].MaxLength, @TabIndex = "37", rows = "1", cols = "1", @title = @Model.lstcustomVM[i].HoverText, @disabled = "disabled" })
                                                                        }

                                                                    }
                                                                    @if (Model.lstcustomVM[i].Column_Type == "textfield")
                                                                    {


                                                                        @Html.DisplayFor(m => m.lstcustomVM[i].Column_Label)
                                                                        if (@Model.lstcustomVM[i].RequiredField == true)
                                                                        {
                                                                            <span style="color: red">*</span>
                                                                            @Html.TextBoxFor(m => m.lstcustomVM[i].CustomFieldvalue, new { @id = "TAActualColumnName1", @class = "form-control input-sm ", @title = @Model.lstcustomVM[i].HoverText, @MaxLength = @Model.lstcustomVM[i].MaxLength, @TabIndex = "37", rows = "1", cols = "1", @validate = "Required", @data_val_required = @Model.lstcustomVM[i].Column_Label, @disabled = "disabled" })
                                                                        }
                                                                        else
                                                                        {
                                                                            @Html.TextBoxFor(m => m.lstcustomVM[i].CustomFieldvalue, new { @id = "TAActualColumnName1", @class = "form-control input-sm ", @title = @Model.lstcustomVM[i].HoverText, @MaxLength = @Model.lstcustomVM[i].MaxLength, @TabIndex = "37", rows = "1", cols = "1", @disabled = "disabled" })
                                                                        }


                                                                    }
                                                                    @if (Model.lstcustomVM[i].Column_Type == "date")
                                                                    {

                                                                        @Html.DisplayFor(m => m.lstcustomVM[i].Column_Label)
                                                                        if (@Model.lstcustomVM[i].RequiredField == true)
                                                                        {
                                                                            <span style="color: red">*</span>
                                                                            @Html.TextBoxFor(m => m.lstcustomVM[i].CustomFieldvalue, new { @id = "TAActualDate", @class = "form-control input-sm DateP ", @placeholder = "Select Date", @title = @Model.lstcustomVM[i].HoverText, @MaxLength = @Model.lstcustomVM[i].MaxLength, @TabIndex = "37", rows = "1", cols = "1", @validate = "Required", @data_val_required = @Model.lstcustomVM[i].Column_Label, @disabled = "disabled" })
                                                                        }
                                                                        else
                                                                        {
                                                                            @Html.TextBoxFor(m => m.lstcustomVM[i].CustomFieldvalue, new { @id = "TAActualDate", @class = "form-control input-sm DateP ", @placeholder = "Select Date", @title = @Model.lstcustomVM[i].HoverText, @MaxLength = @Model.lstcustomVM[i].MaxLength, @TabIndex = "37", rows = "1", cols = "1", @disabled = "disabled" })
                                                                        }

                                                                    }
                                                                    @if (Model.lstcustomVM[i].Column_Type == "numeric")
                                                                    {

                                                                        @Html.DisplayFor(m => m.lstcustomVM[i].Column_Label)

                                                                        if (@Model.lstcustomVM[i].RequiredField == true)
                                                                        {
                                                                            <span style="color: red">*</span>
                                                                            @Html.TextBoxFor(m => m.lstcustomVM[i].CustomFieldvalue, new { @id = "TAActualColumnName", @class = "form-control input-sm", @title = @Model.lstcustomVM[i].HoverText, @MaxLength = @Model.lstcustomVM[i].MaxLength, @TabIndex = "37", rows = "1", cols = "1", @validate = "Required", @data_val_required = @Model.lstcustomVM[i].Column_Label, @disabled = "disabled" })

                                                                        }
                                                                        else
                                                                        {
                                                                            @Html.TextBoxFor(m => m.lstcustomVM[i].CustomFieldvalue, new { @id = "TAActualColumnName", @class = "form-control input-sm ", @title = @Model.lstcustomVM[i].HoverText, @MaxLength = @Model.lstcustomVM[i].MaxLength, @TabIndex = "37", rows = "1", cols = "1", @disabled = "disabled" })
                                                                        }
                                                                    }

                                                                    @if (Model.lstcustomVM[i].Column_Type == "dropdown")
                                                                    {

                                                                        @Html.DisplayFor(m => m.lstcustomVM[i].Column_Label)
                                                                        if (@Model.lstcustomVM[i].RequiredField == true)
                                                                        {
                                                                            <span style="color: red">*</span>
                                                                            @Html.DropDownListFor(m => m.lstcustomVM[i].DefaultValue, new SelectList(Model.lstcustomVM[i].lstCustomOptionsVal, "DrpValueId", "DrpValue", Model.lstcustomVM[i].DefaultValue), "Select", new { @class = "form-control input-sm", @id = "dpOptions", @validate = "Required", @data_val_required = @Model.lstcustomVM[i].Column_Label, @title = @Model.lstcustomVM[i].HoverText, @disabled = "disabled" })
                                                                        }
                                                                        else
                                                                        {
                                                                            @Html.DropDownListFor(m => m.lstcustomVM[i].DefaultValue, new SelectList(Model.lstcustomVM[i].lstCustomOptionsVal, "DrpValueId", "DrpValue", Model.lstcustomVM[i].DefaultValue), "Select", new { @class = "form-control input-sm", @id = "dpOptions", @title = @Model.lstcustomVM[i].HoverText, @disabled = "disabled" })
                                                                            @*@Html.DropDownListFor(m => m.lstcustomVM[i].CustomFieldvalue, new SelectList(Model.lstcustomVM[i].lstCustomOptionsVal, "DrpValueId", "DrpValue", Model.lstcustomVM[i].CustomFieldvalue), new { @class = "form-control input-sm", @id = "dpOptionsEdit" })*@
                                                                        }

                                                                    }

                                                                    @if (Model.lstcustomVM[i].Column_Type == "radiobutton")
                                                                    {
                                                                        @Html.DisplayFor(m => m.lstcustomVM[i].Column_Label)
                                                                        if (@Model.lstcustomVM[i].RequiredField == true)
                                                                        {

                                                                            <span style="color: red">*</span>
                                                                            <div>

                                                                                @for (int a = 0; a < Model.lstcustomVM[i].lstCustomOptionsVal.Count; a++)
                                                                                {
                                                                                    @Html.HiddenFor(m => m.lstcustomVM[i].lstCustomOptionsVal[a].DrpValueId)
                                                                                    @Html.HiddenFor(m => m.lstcustomVM[i].lstCustomOptionsVal[a].FieldId)
                                                                                    @*@Html.RadioButtonFor(m => m.lstcustomVM[i].CustomFieldvalue, Model.lstcustomVM[i].lstCustomOptionsVal[a].DrpValueId, new { isChecked = Model.lstcustomVM[i].lstCustomOptionsVal[a].IsDefault, @validate = "Required", @data_val_required = @Model.lstcustomVM[i].Column_Label })*@
                                                                                    if (Model.lstcustomVM[i].lstCustomOptionsVal[a].IsDefault == true)
                                                                                    {
                                                                                        @Html.RadioButtonFor(m => m.lstcustomVM[i].DefaultValue, Model.lstcustomVM[i].lstCustomOptionsVal[a].DrpValueId, new { @checked = "checked", @title = @Model.lstcustomVM[i].HoverText, @validate = "Required", @data_val_required = @Model.lstcustomVM[i].Column_Label, @disabled = "disabled" })
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        @Html.RadioButtonFor(m => m.lstcustomVM[i].DefaultValue, Model.lstcustomVM[i].lstCustomOptionsVal[a].DrpValueId, new { @title = @Model.lstcustomVM[i].HoverText, @validate = "Required", @data_val_required = @Model.lstcustomVM[i].Column_Label, @disabled = "disabled" })
                                                                                    }
                                                                                    @Html.DisplayFor(m => m.lstcustomVM[i].lstCustomOptionsVal[a].DrpValue, new { @class = "checkbox-inline" })
                                                                                }
                                                                            </div>
                                                                        }

                                                                        else
                                                                        {
                                                                            <div>
                                                                                @for (int a = 0; a < Model.lstcustomVM[i].lstCustomOptionsVal.Count; a++)
                                                                                {
                                                                                    @Html.HiddenFor(m => m.lstcustomVM[i].lstCustomOptionsVal[a].DrpValueId)
                                                                                    @Html.HiddenFor(m => m.lstcustomVM[i].lstCustomOptionsVal[a].FieldId)
                                                                                    @*@Html.RadioButtonFor(m => m.lstcustomVM[i].CustomFieldvalue, Model.lstcustomVM[i].lstCustomOptionsVal[a].DrpValueId, new { isChecked = Model.lstcustomVM[i].lstCustomOptionsVal[a].IsDefault })*@
                                                                                    if (Model.lstcustomVM[i].lstCustomOptionsVal[a].IsDefault == true)
                                                                                    {
                                                                                        @Html.RadioButtonFor(m => m.lstcustomVM[i].DefaultValue, Model.lstcustomVM[i].lstCustomOptionsVal[a].DrpValueId, new { @checked = "checked", @title = @Model.lstcustomVM[i].HoverText, @disabled = "disabled" })
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        @Html.RadioButtonFor(m => m.lstcustomVM[i].DefaultValue, Model.lstcustomVM[i].lstCustomOptionsVal[a].DrpValueId, new { @title = @Model.lstcustomVM[i].HoverText, @disabled = "disabled" })
                                                                                    }
                                                                                    @Html.DisplayFor(m => m.lstcustomVM[i].lstCustomOptionsVal[a].DrpValue, new { @class = "checkbox-inline" })
                                                                                }
                                                                            </div>
                                                                        }
                                                                    }
                                                                </div>
                                                            </div>
                                                        }
                                                    </div>

                                                </div>
                                            </div>

                                        </div>
                                        @*End Of Binding Custom Fields*@

                                    </div>

                                </div>
                            </div>

                        </div>



                        <div class="tab-pane" id="TabStripContacts_View">

                            @*Bind Company related Contacts*@


                            <div class="row">
                                <div class="panel">

                                    @*<div class="panel-heading">
                                            <div class="row">

                                                <h1 class="col-xs-6 col-sm-4 text-left text-left-sm panel-title">
                                                    <i class="fa fa-user page-header-icon"></i>&nbsp; @Html.DisplayFor(m => m.CompanyObj.Name)
                                                </h1>
                                                <div class="col-xs-6 col-sm-8">


                                                    <div class="row">
                                                        <div class="pull-right">

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>*@

                                    <div class="panel-body">

                                        <div class="row">
                                            <div class="tab-pane" id="bs-tabdrop-tab3">




                                                <div class="clearfix"></div>
                                                <div class="col-sm-12" id="filter"></div>

                                                <!-- col-sm-6 -->
                                                <div class="col-sm-12">

                                                    <div class="col-sm-12" style="background-color: #f5f5f5; padding-top: 6px; padding-bottom: 6px; text-align: right;">
                                                        <ul class="table-nav-item">





                                                            <li class="btn btn-flat btn-labeled btn-primary" id="btnmargin_top">
                                                                <a style="color: #fff; text-decoration: none; padding: 0px; font-weight: normal" href="@Url.Action("CreateCompanyContact", "Contact", new { CompanyId = Model.CompanyObj.ID })">
                                                                    <span class="btn-label icon  fa  fa-plus-circle" style="margin-right:6px;"> </span>
                                                                    Add New
                                                                </a>
                                                            </li>



                                                            @*<li class="btn btn-flat btn-labeled btn-primary" id="btnmargin_top">

                                                                    <a style="color: #fff; text-decoration: none; padding: 0px; font-weight: normal" id="DeleteContacts" onclick="deleteSelectedContacts()">
                                                                        <span class="btn-label icon  fa   fa-trash-o" style="margin-right:6px;"> </span>
                                                                        Delete
                                                                    </a>
                                                                </li>*@



                                                        </ul>

                                                    </div>
                                                </div>
                                                <div class="col-sm-12 col-xs-12">

                                                    <div class="table-primary table-striped" id="divTable">

                                                        <table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered" id="tblCompContacts" width="100%">
                                                            <thead>
                                                                <tr>


                                                                    @*<th width="25px">
                                                                            <input class="fa fa-square-o" type="checkbox" id="chkContactHeader" />
                                                                        </th>
                                                                        <th>&nbsp;</th>*@
                                                                    <th data-hide="tablet,tabletlandscape,phone">Contact&nbsp;Name</th>

                                                                    <th data-class="expand">Company&nbsp;Name</th>

                                                                    <th data-hide="tablet,tabletlandscape,phone">Email</th>
                                                                    <th data-hide="tabletlandscape,phone">Phone</th>
                                                                    <th data-hide="tabletlandscape,phone">Contact&nbsp;Owner</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody></tbody>
                                                        </table>

                                                    </div>

                                                </div>
                                            </div>
                                            <!-- Tabs -->

                                        </div>




                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="tab-pane" id="TabStripDocument_View">
                            <div class="row">



                                <div class="panel">
                                    @*<div class="panel-heading">
                                            <div class="row">

                                                <h1 class="col-xs-6 col-sm-4 text-left text-left-sm panel-title"><i class="fa fa-users page-header-icon"></i>&nbsp;Opportunities</h1>
                                                <div class="col-xs-6 col-sm-8">
                                                    <div class="row">
                                                        <div class="pull-right">
                                                            </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>*@
                                    <div class="panel-body">




                                        <div class="row">




                                            <div class="clearfix"></div>
                                            <div class="col-sm-12" id="filter"></div>

                                            <div class="col-sm-12" id="white_bg">
                                                <div class="col-sm-4"> &nbsp; </div>
                                                <div class="col-sm-8" style="background-color: #f5f5f5;  text-align: right;">
                                                    <ul class="table-nav-item">



                                                        <li class="btn btn-flat btn-labeled btn-primary" id="btnmargin_top" style="float:left; margin-left:3px;">
                                                            <a style="color: #fff; text-decoration: none; padding: 0px; font-weight: normal" href="@Url.Action("CreateCompanyOpportunity", "Opportunities", new { CompanyId = Model.CompanyObj.ID })">
                                                                <span class="btn-label icon  fa  fa-plus-circle" style="margin-right:6px;"> </span>
                                                                Add New
                                                            </a>
                                                        </li>
                                                        @*<li class="btn btn-flat btn-labeled btn-primary" id="btnmargin_top">

                                                                <a style="color: #fff; text-decoration: none; padding: 0px; font-weight: normal" id="DeleteOpportunity" onclick="deleteSelectedOpportunity()">
                                                                    <span class="btn-label icon  fa fa-trash-o" style="margin-right:6px;"> </span>
                                                                    Delete
                                                                </a>
                                                            </li>*@




                                                    </ul>
                                                </div>
                                            </div>


                                        </div>

                                        <div class="row">


                                            <div class="table-primary table-striped" id="OpportunitiesGrid">

                                                <table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered" id="tblOpportunities" style="width:100%">
                                                    <thead>
                                                        <tr>

                                                            @*<th>
                                                                    <input type="checkbox" name="chkAll" id="selectall" />
                                                                </th>
                                                                <th>&nbsp;</th>*@

                                                            <th data-class="expand">Opportunity Name</th>

                                                            <th data-hide="tabletlandscape,phone ">Opportunity Stage</th>
                                                            <th data-hide="tablet,tabletlandscape,phone">Estimated Close Date</th>
                                                            <th data-hide="tabletlandscape,phone">Company Name</th>
                                                            <th data-hide="tabletlandscape,phone">Contact Name</th>
                                                            <th data-hide="tabletlandscape,phone">Opportunity Owner</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>

                                        </div>
                                    </div>
                                </div>

                            </div>

                        </div>

                        <div class="tab-pane" id="TabStripOpenActivity_View">

                            <div class="row">
                                <div class="panel">
                                    <div class="panel-body">




                                        <div class="row">
                                            <div class="clearfix"></div>
                                            <div class="col-sm-12" id="filter"></div>
                                            <div class="col-sm-12">
                                                <div class="row" style="float:right;">
                                                    <div class="col-sm-12">

                                                        <div class="btn btn-flat btn-labeled btn-primary" id="searbtn_margin">

                                                            <a style="color: #fff; text-decoration: none; padding: 0px; font-weight: normal" href="@Url.Action("NewCCompanyActivity", "ManageCompany", new { CompanyId = Model.CompanyObj.ID })">
                                                                <span class="btn-label icon  fa  fa-plus-circle" style="margin-right:6px;"> </span>
                                                                Add
                                                            </a>
                                                        </div>




                                                        @*<div class="btn btn-flat btn-labeled btn-primary" id="searbtn_margin3">

                                                                <a class="sear_btn1" id="btnDeleteactivity" onclick="deleteSelectedContactActivity()">
                                                                    <span class="btn-label icon  fa fa-trash-o" style="margin-right:6px;"> </span>
                                                                    Delete
                                                                </a>
                                                            </div>



                                                            <div class="btn btn-flat btn-labeled btn-primary" id="searbtn_margin4">
                                                                <a class="sear_btn1" id="btnComplete" onclick="completeActivity();">
                                                                    <span class="btn-label icon  fa fa-check-square-o" style="margin-right:6px;"> </span>
                                                                    Complete
                                                                </a>
                                                            </div>*@
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="col-sm-12 col-xs-12">
                                                <div class="table-primary table-striped">
                                                    <table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered" id="tblActivities" width="100%">
                                                        <thead>
                                                            <tr>
                                                                <th><input class="fa fa-square-o" type="checkbox" id="chkHeader" /></th>
                                                                <th>&nbsp;</th>
                                                                <th data-hide="phone">Type</th>
                                                                <th data-class="expand">Created Date</th>
                                                                <th data-hide="tablet,tabletlandscape,phone">Due Date</th>
                                                                <th data-hide="phone">Priority</th>
                                                                <th data-hide="tablet,tabletlandscape,phone">Status</th>
                                                                <th data-hide="tablet,tabletlandscape,phone">Module</th>

                                                            </tr>
                                                        </thead>
                                                        <tbody> </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane" id="TabStripOpenInvoice_View">

                            <div class="row">


                                <div class="panel">
                                    <div class="panel-heading">

                                    </div>
                                    <div class="panel-body">


                                        <div class="row">

                                            <div class="tab-pane" id="bs-tabdrop-tab3">
                                                <div class="row">

                                                    <div class="clearfix"></div>
                                                    <div class="col-sm-13" id="filter"></div>

                                                    <!-- col-sm-6 -->
                                                    <div class="col-sm-12">


                                                        <div class="col-sm-12" style="background-color: #f5f5f5; padding-top: 6px; padding-bottom: 6px; text-align: right;">
                                                            <ul class="table-nav-item">




                                                                <li class="btn btn-flat btn-labeled btn-primary" id="btnmargin_top">

                                                                    <a style="color: #fff; text-decoration: none; padding: 0px; font-weight: normal" id="btnAdd" href="@Url.Action("CreateInvoice","Invoice")">
                                                                        <span class="btn-label icon  fa fa-pencil-square-o" style="margin-right:6px;"> </span>
                                                                        Create Invoice
                                                                    </a>

                                                                </li>




                                                                <li class="btn btn-flat btn-labeled btn-primary" id="btnmargin_top">

                                                                    <a style="color: #fff; text-decoration: none; padding: 0px; font-weight: normal" id="DeleteContacts" onclick="deleteSelectedInvoice()">
                                                                        <span class="btn-label icon fa fa-trash-o" style="margin-right:6px;"> </span>
                                                                        Delete Invoice
                                                                    </a>

                                                                </li>


                                                            </ul>

                                                        </div>

                                                    </div>
                                                    <div class="col-sm-12 col-xs-12">
                                                        <div class="table-primary table-striped">
                                                            <table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered" id="tblInvoice" style="width:100%">
                                                                <thead>
                                                                    <tr>

                                                                        <th><input type="checkbox" id="chkHeader" /></th>
                                                                        <th></th>
                                                                        <th data-hide="tablet,tabletlandscape,phone">Invoice number</th>
                                                                        <th data-class="expand">Customer</th>
                                                                        <th data-hide="tablet,tabletlandscape,phone" class="amount">Amount&nbsp;($)</th>
                                                                        <th data-hide="tablet,tabletlandscape,phone">Due&nbsp;Date</th>
                                                                        <th data-hide="tablet,tabletlandscape,phone">Invoice Type</th>
                                                                        <th data-class="tablet,tabletlandscape,phone">Status</th>


                                                                    </tr>
                                                                </thead>
                                                                <tbody></tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>

                                <!-- /11. $BOOTSTRAP_TAB_DROP -->
                                <!-- / Info -->
                            </div>

                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>


}




<script src="~/Scripts/DateTimePicker/bootstrap-timepicker.min.js"></script>
<script src="~/Scripts/DateTimePicker/bootstrap-datetimepicker.min.js"></script>
<script>



    $(document).ready(function () {
        $('#TabStripContacts_View').css("display", "none");
        $('#TabStripDocument_View').css("display", "none");
        $('#TabStripOpenActivity_View').css("display", "none");
        $('#TabStripOpenInvoice_View').css("display", "none");
        var updateUsr = '@ViewBag.CompanyUpdate';
        if (updateUsr != "") {
            // $('#ErrorMessages').html('Company Details Updated Successfully.');
            $.growl.notice({ title: "Success", message: "Company Details Updated Successfully.", size: 'large' });
            EditCompanydetails();
        }

        $('#TabStripContacts').click(function () {

            bindContactGrid();
            $('#TabStripAccountDetail_View').css("display", "none");
            $('#TabStripContacts_View').css("display", "block");
            $('#TabStripDocument_View').css("display", "none");
            $('#TabStripOpenActivity_View').css("display", "none");
            $('#TabStripOpenInvoice_View').css("display", "none");

        });

        $('#TabStripAccountDetail').click(function () {
            $('#TabStripAccountDetail_View').css("display", "block");
            $('#TabStripContacts_View').css("display", "none");
            $('#TabStripDocument_View').css("display", "none");
            $('#TabStripOpenActivity_View').css("display", "none");
            $('#TabStripOpenInvoice_View').css("display", "none");
        });
        $('#TabStripDocument').click(function () {
            BindOpportunities();
            $('#TabStripAccountDetail_View').css("display", "none");
            $('#TabStripContacts_View').css("display", "none");
            $('#TabStripDocument_View').css("display", "block");
            $('#TabStripOpenActivity_View').css("display", "none");
            $('#TabStripOpenInvoice_View').css("display", "none");
        });

        $('#TabStripOpenActivity').click(function () {
            $('#TabStripAccountDetail_View').css("display", "none");
            $('#TabStripContacts_View').css("display", "none");
            $('#TabStripDocument_View').css("display", "none");
            $('#TabStripOpenActivity_View').css("display", "block");
            $('#TabStripOpenInvoice_View').css("display", "none");
            $("#jq-datatables-activity").dataTable().fnDestroy();
            BindCompaniesActivity();
        });

        $('#TabStripInvoice').click(function () {
            BindInvoiceList();
            $('#TabStripOpenInvoice_View').css("display", "block");
            $('#TabStripAccountDetail_View').css("display", "none");
            $('#TabStripContacts_View').css("display", "none");
            $('#TabStripDocument_View').css("display", "none");
            $('#TabStripOpenActivity_View').css("display", "none");
            /// $("#jq-datatables-activity").dataTable().fnDestroy();
            //$('#tblInvoice');
            BindInvoiceList();

        });

        $(".textEditor").jqte();


        $(".jqte_editor").prop('contenteditable', 'false');


        //$('.DateP').datepicker({
        //    format: 'mm/dd/yyyy'
        //});


        //$("#TAActualColumnName").keypress(function (e) {
        //    if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
        //        $("#errormsg").html("Digits Only").show().fadeOut("slow");
        //        return false;
        //    }
        //});
    });

    //function onlynumbers(evt) {
    //    var charCode = (evt.which) ? evt.which : event.keyCode
    //    if (charCode == 43 || charCode == 32 || charCode == 40 || charCode == 41)
    //        return true;
    //    else if (charCode > 31 && (charCode < 45 || charCode > 57 || charCode == 47 || charCode == 46))
    //        return false;

    //    return true;
    //}

    function EditCompanydetails() {
        var Companyid = $('#txtcmpID').val();
        $.ajax({
            url: "../ManageCompany/_EditCompanybyID",
            type: "GET",
            async: false,
            data: { CompanyId: Companyid },
            success: function (data) {

                if (data != null) {
                    $("#Getleads").empty().append(data);

                }
            },
            error: function () {

            }
        });
    }
    function deleteSelectedLead() {

        var leadid = $('#txtID').val();
        $.ajax({


            url: '@Url.Action("DeleteCompanybyId", "ManageCompany")',
            type: "POST",
            async: false,
            data: { leadid: leadid.toString() },
            success: function (data) {

                if (data == "True") {
                    $.growl.notice({ title: "Success", message: "Lead Deleted Successfully.", size: 'large' });
                    RedirectToindex();
                }
                else {
                    $.growl.notice({ title: "Fail", message: "Lead Not Deleted .", size: 'large' });
                }
            },
            error: function (request, status, error) {
            }
        });


    }

    function RedirectToindex() {
        window.location = "Index";
    }



    function bindContactGrid() {

        $("#tblCompContacts").dataTable().fnDestroy();
        var responsiveHelper = undefined;
        var breakpointDefinition = {
            desktop: Infinity,
            tablet: 1024,
            tabletlandscape: 768,
            phone: 480
        };

        var tableElement = $('#tblCompContacts').dataTable({
            // autoWidth: false,
            // "searching": true,
            preDrawCallback: function () {
                if (!responsiveHelper) {
                    responsiveHelper = new ResponsiveDatatablesHelper($('#tblCompContacts'), breakpointDefinition);
                }
            },
            rowCallback: function (nRow) {
                responsiveHelper.createExpandIcon(nRow);
            },
            drawCallback: function (oSettings) {
                responsiveHelper.respond();
            },

            "serverSide": true,

            "sAjaxSource": '@Url.Action("getCompanyContact", "ManageCompany")',


            "fnServerParams": function (aoData) {
                aoData.push(

                         { "name": "CompanyID", "value": +$('#txtcmpID').val() }


                    );
            },
            "fnServerData": function (sSource, aoData, fnCallback) {
                $.ajax({
                    "dataType": 'json',
                    "contentType": "application/json; charset=utf-8",
                    "type": "GET",
                    "url": sSource,
                    "data": aoData,
                    "success":
                                function (msg) {

                                    $('#loading').css('display', 'none');

                                    fnCallback(msg);

                                }
                });
            },
            "asStripeClasses": ['odd gradeX', 'even gradeC'],
            "aoColumnDefs": [
              //{
              //    "targets": [0], "visible": true, "bSortable": false, "mDataProp": "ID",
              //    "render": function (data, type, row) {
              //        return "<input name=\"chkContactItem\" class =\"Contactcase\" type=\"checkbox\"  id=\"chkRow_" + row["ID"] + "\"data-ContactId=\"" + row["ID"] + "\"  />";
              //    }
              //},
              //  {
              //      "targets": [1], "visible": true, "bSortable": true,
              //      "render": function (data, type, row) {
              //          return "<span class=\"fa fa-times\" onclick=\"DeleteContactsConfirmation('" + row["ID"] + "');\"></span>";
              //      }
              //  },
                {
                    "targets": [0], "visible": true, "bSortable": true, "mDataProp": "ContactName"
                    //"render": function (data, type, row) {
                    //    return "<a style=\"cursor:pointer\"  onclick=\"OpenContactDetail('" + row["ID"] + "')\">" + row["ContactName"] + "</a>";
                    //}
                },

                {
                    "targets": [1], "visible": true, "bSortable": true, "mDataProp": "CompanyName"

                },

                    { "targets": [2], "visible": true, "bSortable": true, "mDataProp": "Email" },

                { "targets": [3], "visible": true, "bSortable": true, "mDataProp": "Phone" },
                { "targets": [4], "visible": true, "bSortable": true, "mDataProp": "Ownership" },



            ],

        }).api();



    }



    // To get the Company Opportunities
    function BindOpportunities() {
        $("#tblOpportunities").dataTable().fnDestroy();
        var responsiveHelper = undefined;
        var breakpointDefinition = {
            desktop: Infinity,
            tablet: 1024,
            tabletlandscape: 768,
            phone: 480
        };
        var tableElement = $('#tblOpportunities');
        tableElement.dataTable({
            autoWidth: false,
            preDrawCallback: function () {
                if (!responsiveHelper) {
                    responsiveHelper = new ResponsiveDatatablesHelper(tableElement, breakpointDefinition);
                }
            },
            rowCallback: function (nRow) {

                responsiveHelper.createExpandIcon(nRow);
            },
            drawCallback: function (oSettings) {
                responsiveHelper.respond();
            },
            //"order": [[$("#HD_SortValue").val(), "" + $("#HD_SortDirection").val() + ""]],
            "aLengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
            //"iDisplayStart": parseInt($("#HD_PageIndex").val()),
            //"iDisplayLength": parseInt($("#HD_PageSize").val()),
            "pagingType": "full_numbers",
            //"processing": true,
            "serverSide": true,
            "bFilter": false,
            //"sAjaxSource": "getOpportunities",
            "sAjaxSource": '@Url.Action("getOpportunities", "Opportunities")',
            "fnServerParams": function (aoData) {
                aoData.push(
                    //{ "name": "OppKeyword", "value": "" + $("#txtKeyword").val() + "" },
                     { "name": "CompanyID", "value": +$('#txtcmpID').val() },
                     { "name": "Opportunitykeyword", "value": "" + "" + "" },
                       { "name": "CompanyName", "value": "" + "" + "" },
                         { "name": "OwnerName", "value": "" + "" + "" },

                    //{ "name": "BusinessType", "value": "" + $("#ddlbusinesstype").val() + "" },
                    //{ "name": "OpportunityStatus", "value": "" + $("#ddlOpportunityStatus").val() + "" },
                    { "name": "OpportunityStage", "value": "" + "0" + "" },
                    //{ "name": "Opportunityindustries", "value": "" + $("#ddlindustries ").val() + "" },
                    //{ "name": "OppEmail", "value": "" + $("#txtEmail").val() + "" },
                    //{ "name": "OppOwner", "value": "" + $("#ddlAdmins").val() + "" },
                    //{ "name": "OppBranch", "value": "" + $("#ddlBranches").val() + "" },
                    { "name": "OpportunityFilterString", "value": "" }
                    );
            },
            "fnServerData": function (sSource, aoData, fnCallback) {
                $.ajax({
                    "dataType": 'json',
                    "contentType": "application/json; charset=utf-8",
                    "type": "GET",
                    "url": sSource,
                    "data": aoData,
                    "success":
                                function (msg) {

                                    fnCallback(msg);
                                    $("#tblOpportunities").show();
                                }
                });
            },
            "asStripeClasses": ['odd gradeX', 'even gradeC'],
            "aoColumnDefs": [

                         //{
                         //    "targets": [0], "visible": true, "bSortable": false, "mDataProp": "ID",
                         //    "render": function (data, type, row) {
                         //        return "<input type=\"checkbox\"  data-LeadId=" + row["ID"] + " name=\"chkItem\" class =\"case\" id=\"chkRow_" + row["ID"] + "\"   />";
                         //    }
                         //},
                         //  {
                         //      "targets": [1], "visible": true, "bSortable": false, "mDataProp": "ID",
                         //      "render": function (data, type, row) {

                         //          return "<span class=\"fa fa-times\" onclick=\"deleteOpportunity('" + row["ID"] + "');\"></span>";
                         //      }
                         //  },
               {
                   "targets": [0], "visible": true, "bSortable": true, "mDataProp": "Name",
                   "render": function (data, type, row) {
                       return "<a style=\"cursor:pointer\"  onclick=\"OpenOpportunityDetail('" + row["ID"] + "')\">" + row["Name"] + "</a>";
                   }
               },

               { "targets": [1], "visible": true, "bSortable": true, "mDataProp": "Stage" },

               {
                   "targets": [2], "visible": true, "bSortable": true, "mDataProp": "CloseDate",
                   "render": function (data, type, row) {
                       var jsDate1 = data;
                       if (jsDate1 == null) {
                           return jsDate1 = "";
                       }
                       else if (jsDate1.value != "") {
                           var jsDate = new Date(parseInt(row["CloseDate"].substr(6)));
                           return (jsDate.getMonth() + 1) + '/' + jsDate.getDate() + '/' + jsDate.getFullYear();
                       }

                   }
               },

               { "targets": [3], "visible": true, "bSortable": true, "mDataProp": "CompanyName" },
               { "targets": [4], "visible": true, "bSortable": true, "mDataProp": "ContactName" },
               { "targets": [5], "visible": true, "bSortable": true, "mDataProp": "Owner" },
            ],
            "fnDrawCallback": function (oSettings) {

                $('#loading').css('display', 'none');
            },

        }).api();
    }

    // To Bind the Activities based on the company ID
    function BindCompaniesActivity() {
        $("#tblActivities").dataTable().fnDestroy();
        var responsiveHelper = undefined;
        var breakpointDefinition = {
            desktop: Infinity,
            tablet: 1024,
            tabletlandscape: 768,
            phone: 480
        };
        var tableElement = $('#tblActivities');
        tableElement.dataTable({
            autoWidth: false,
            preDrawCallback: function () {
                if (!responsiveHelper) {
                    responsiveHelper = new ResponsiveDatatablesHelper(tableElement, breakpointDefinition);
                }
            },
            rowCallback: function (nRow) {
                responsiveHelper.createExpandIcon(nRow);
            },
            drawCallback: function (oSettings) {
                responsiveHelper.respond();
            },

            "aLengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
            "pagingType": "full_numbers",
            "serverSide": true,
            "bFilter": false,
            "sAjaxSource": "getCompanyActivities",
            "fnServerParams": function (aoData) {

                aoData.push(
                    // { "name": "Keyword", "value": "" + $("#txtActivityKeyword").val() + "" },
                    //{ "name": "Type", "value": "" + $("#ddlActivityType").val() + "" },
                    //{ "name": "Priority", "value": "" + $("#ddlPriority").val() + "" },
                    //{ "name": "Status", "value": "" + $("#ddlStatus").val() + "" }
                    { "name": "CompanyID", "value": +$('#txtcmpID').val() },
                    { "name": "Keyword", "value": "" },
                    { "name": "Type", "value": "-1" },
                    { "name": "Priority", "value": "select" },
                    { "name": "Status", "value": "select" }

                    );
            },
            "fnServerData": function (sSource, aoData, fnCallback) {
                $.ajax({
                    "dataType": 'json',
                    "contentType": "application/json; charset=utf-8",
                    "type": "GET",
                    "url": sSource,
                    "data": aoData,
                    "success":
                                function (msg) {


                                    $('#loading').css('display', 'none');

                                    fnCallback(msg);

                                }
                });
            },
            "asStripeClasses": ['odd gradeX', 'even gradeC'],
            "aoColumnDefs": [
              {
                  "targets": [0], "visible": true, "bSortable": false, "mDataProp": "ID",
                  "render": function (data, type, row) {
                      return "<input name=\"chkItem\" class =\"case\" type=\"checkbox\"  id=\"chkRow_" + row["ID"] + "\"data-val-1=\"" + row["ID"] + "\"data-val-mt=\"" + row["AccountTypeName"] + "\"  />";
                  }
              },
                {
                    "targets": [1], "visible": true, "bSortable": false,
                    "render": function (data, type, row) {
                        return "<span class=\"fa fa-times\" onclick=\"deleteEachActivity('" + row["ID"] + "','" + row["AccountTypeName"] + "');\"></span>";
                        //return "<span class=\"fa fa-times\" onclick=\"deleteEachActivity('" + row["HistoryId"] + "');\"></span>";
                    }
                },


                 {
                     "targets": [2], "visible": true, "bSortable": true, "mDataProp": "ActivityName",
                     "render": function (data, type, row) {
                         return "<a style=\"cursor:pointer\"  onclick=\"OpenActivityDetail('" + row["ID"] + "','" + row["AccountTypeName"] + "')\">" + row["ActivityName"] + "</a>";
                         //return "<a href=\"#\" id=\"aParentContactId\" onclick=\"OpenContactDetail('" + row["ContactId"] + "','" + row["Mobile"] + "','" + row["Phone"] + "','" + row["Account_Name"] + "','" + row["AccountId"] + "','" + row["Fname"] + "')\">" + row["Fname"] + "</a>";
                     }
                 },


                //{ "targets": [2], "visible": true, "bSortable": true, "mDataProp": "HistoryType" },

                 {
                     "targets": [3], "visible": true, "bSortable": true, "mDataProp": "CreatedDate",
                     "render": function (data, type, row) {
                         var jsDate1 = data;
                         if (jsDate1 == null) {
                             return jsDate1 = "";
                         }
                         else if (jsDate1.value != "") {
                             var jsDate = new Date(parseInt(row["CreatedDate"].substr(6)));
                             return (jsDate.getMonth() + 1) + '/' + jsDate.getDate() + '/' + jsDate.getFullYear();
                         }

                     }
                 },

              {
                  "targets": [4], "visible": true, "bSortable": true, "mDataProp": "DueDate",
                  "render": function (data, type, row) {
                      var jsDate1 = data;
                      if (jsDate1 == null) {
                          return jsDate1 = "";
                      }
                      else if (jsDate1.value != "") {
                          var jsDate = new Date(parseInt(row["DueDate"].substr(6)));
                          return (jsDate.getMonth() + 1) + '/' + jsDate.getDate() + '/' + jsDate.getFullYear();
                      }

                  }
              },


                 { "targets": [5], "visible": true, "bSortable": true, "mDataProp": "Priority" },
                 { "targets": [6], "visible": true, "bSortable": true, "mDataProp": "Status" },
                 { "targets": [7], "visible": true, "bSortable": true, "mDataProp": "AccountTypeName" }

            ],
            "fnDrawCallback": function (oSettings) {


                $('#loading').css('display', 'none');
            }
        }).api();

    }




    function BindInvoiceList() {
        $("#tblInvoice").dataTable().fnDestroy();
        var responsiveHelper = undefined;
        var breakpointDefinition = {
            tablet: 1024,
            tabletlandscape: 768,
            phone: 480
        };
        var tableElement = $('#tblInvoice');

        tableElement.dataTable({
            autoWidth: false,
            preDrawCallback: function () {
                if (!responsiveHelper) {
                    responsiveHelper = new ResponsiveDatatablesHelper(tableElement, breakpointDefinition);
                }
            },
            rowCallback: function (nRow) {
                responsiveHelper.createExpandIcon(nRow);
            },
            drawCallback: function (oSettings) {
                responsiveHelper.respond();
            },
            // "order": [[$("#HD_SortValue").val(), "" + $("#HD_SortDirection").val() + ""]],
            "aLengthMenu": [[10, 25, 50], [10, 25, 50]],
            //"iDisplayStart": parseInt($("#HD_PageIndex").val()),
            //"iDisplayLength": parseInt($("#HD_PageSize").val()),
            //"oSearch": { "sSearch": $("#HD_SearchString").val() },

            "pagingType": "full_numbers",

            "bFilter": false,
            //"processing": true,
            "serverSide": true,

            "sAjaxSource": "getCompanyInvoicelist",
            "fnServerParams": function (aoData) {
                aoData.push(
                     { "name": "CompanyID", "value": +$('#txtcmpID').val() },
                    { "name": "b_invoice", "value": "Invoice" }
                    );

            },
            "fnServerData": function (sSource, aoData, fnCallback) {
                $.ajax({
                    "dataType": 'json',
                    "contentType": "application/json; charset=utf-8",
                    "type": "GET",
                    "url": sSource,
                    "data": aoData,
                    "success":
                                function (msg) {
                                    //var json = jQuery.parseJSON(msg.d);
                                    fnCallback(msg);
                                    //$("#jq-datatables-example").show();
                                }
                });
            },
            "asStripeClasses": ['odd gradeX', 'even gradeC'],
            "aoColumnDefs": [
                {
                    "targets": [0], "visible": true, "bSortable": false, "mDataProp": "InvoiceID",
                    "render": function (data, type, row) {
                        return "<input type=\"checkbox\" name=\"chkItem\" class=\"case\" id=\"chkRow_" + row["InvoiceID"] + "\"  data-invoiceid=\"" + row["InvoiceID"] + "\"    />";
                        //if (row["BranchId"] != 1) {
                        //    return "<input type=\"checkbox\" name=\"chkItem\" class=\"case\" id=\"chkRow_" + row["InvoiceID"] + "\"  data-invoiceid=\"" + row["InvoiceID"] + "\"    />";
                        //}
                        //else {
                        //    return "";
                        //}
                    }
                },
                 {
                     "targets": [1], "visible": true, "bSortable": false,
                     "render": function (data, type, row) {

                         // if (row["BranchId"] != 1) {
                         //return "<input type=\"checkbox\" name=\"chkitems\" class=\"case\" id=\"chkRow_" + row["UserId"] + "\"  data-UserId=\"" + row["UserId"] + "\" data-RoleName=\"" + row["roleName"] + "\"/>";
                         return "<span class=\"fa fa-edit\" onclick=\"OpeninvoiceDetail('" + row["InvoiceID"] + "');\"></span><span class=\"fa fa-times\" onclick=\"deleteEachinvoice('" + row["InvoiceID"] + "');\"></span>";
                         //}
                         //else {
                         //    return "<span class=\"fa fa-edit\" onclick=\"OpenBranchDetail('" + row["InvoiceId"] + "');\"></span>";
                         //}


                     }
                 },
                {
                    "targets": [2], "visible": true, "bSortable": true, "mDataProp": "InvoiceNo",

                },
                {

                    "targets": [3], "visible": true, "bSortable": true, "mDataProp": "Fname",

                },
                { "targets": [4], "visible": true, "bSortable": true, "mDataProp": "GrandTotal", "sClass": "alignRight" },
                 {
                     "targets": [5], "visible": true, "bSortable": true, "mDataProp": "DueDate",
                     "render": function (data, type, row) {
                         var jsDate1 = data;
                         if (jsDate1 == null) {
                             return jsDate1 = "";
                         }
                         else if (jsDate1.value != "") {
                             var jsDate = new Date(parseInt(row["DueDate"].substr(6)));
                             return (jsDate.getMonth() + 1) + '/' + jsDate.getDate() + '/' + jsDate.getFullYear();
                         }

                     }
                 },

                  { "targets": [6], "visible": true, "bSortable": true, "mDataProp": "InvoiceType" },

                   //{ "targets": [7], "visible": true, "bSortable": true, "mDataProp": "Status" },
                   {
                       "targets": [7], "visible": true, "bSortable": true, "mDataProp": "Status",
                       "render": function (data, type, row) {

                           if (row["Posted"] != 1) {

                               return "<a class=\"btn btn-flat btn-labeled btn-primary\" href=\"#\" onclick=\"ConverttoPost('" + row["InvoiceID"] + "');\"><span class=\"btn-label icon  fa fa-pencil-square-o\" style=\"margin-right:6px;\"> </span>" + "Post Invoice" + "</a>";


                           }
                           else {
                               return "Posted";
                           }


                       }

                   },


            ],
            "fnDrawCallback": function (oSettings) {

                $('#loading').css('display', 'none');

            }
        }).api();


        $('#tblInvoice_wrapper .table-caption').text('');

        // $('#tblOffice_wrapper .dataTables_filter input').attr('placeholder', 'Search...');


    }

</script>




