@model CRMHub.ViewModel.SalesModel
    @{
        ViewBag.Title = "Sales";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }


<style>
    .DT-search, .DT-search input {
        width: 0px !important; /**/
    }

    .DT-per-page {
        border-right: 0px solid #eee;
        margin-right: 0px;
        height: 23px;
        padding-right: 0px;
        white-space: nowrap;
    }
</style>
    

    @*@using (Html.BeginForm("ViewSales", "Sales", FormMethod.Post))
    {*@

        
           
            <div id="content-wrapper">
                <div id="CustomBootstrapAlertBox">
                </div>
                <div class="row">
                 


                        <div class="panel">
                            <div class="panel-heading">
                                <div class="row">
                                    <!-- Page header, center on small screens -->
                                    <h1 class="col-xs-6 col-sm-4 text-left text-left-sm panel-title"><i class="fa fa-users page-header-icon"></i>&nbsp; Sales</h1>
                                    <div class="col-xs-6 col-sm-8">
                                        <div class="row">
                                            <div class="pull-right">
                                                @*<a href="#" class="btn btn-flat btn-labeled btn-primary" tabindex="-1"
                                                   data-toggle="modal" data-target="#uidemo-modals-alerts-info"><span class="btn-label icon fa fa-question-circle"></span>Help</a>*@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="panel-body">

                                              
                                                 
                                <div class="row">
                                    
                                        <div class="col-sm-3">
                                            <div class="form-group no-margin-hr">
                                                <label class="control-label">Keyword:</label>
                                                @Html.TextBoxFor(m => m.SalesEntity.Keyword, new { @id = "txtKeyword", @class = "form-control input-sm" })
                                            </div>
                                        </div>
                                        <div class="col-sm-3">
                                            <div class="form-group no-margin-hr">
                                                <label class="control-label">Email:</label>
                                                @Html.TextBoxFor(m => m.SalesEntity.Email, new { @id = "txtEmail", @class = "form-control input-sm" })
                                            </div>
                                        </div>
                                        <div class="col-sm-3">
                                            <div class="form-group no-margin-hr">
                                                <label class="control-label">Sales Rep:</label>
                                                @Html.DropDownListFor(model => model.SalesEntity.SalesRep, new SelectList(Model.userList, "userId", "firstName"), new { @class = "form-control", @id = "ddlAdmins" })
                                            </div>
                                        </div>
                                        <div class="col-sm-3">
                                            <div class="form-group no-margin-hr">
                                                <label class="control-label">Office:</label>
                                                @Html.DropDownListFor(model => model.SalesEntity.Office, new SelectList(Model.branchList, "branchid", "branchName"), new { @class = "form-control", @id = "ddlBranches" })
                                            </div>
                                        </div>
                                    
                                </div>
                                <div class="row">
                                    <div class="col-xs-12 col-sm-12 text-right text-right-sm">

                                       

                                        <button class="btn btn-flat btn-labeled btn-primary" id="btnsearchsale" style="margin:0px  0px 15px 0px;">
                                            <span class="btn-label icon fa fa-search"></span>Search
                                        </button>


                                    </div>
                                </div>
                                <br />

                                <div class="row">
                                    


                                        <div class="col-sm-12" style="background-color: #f5f5f5; padding-top: 6px; padding-bottom: 6px; text-align: right;">
                                            <ul class="table-nav-item">
                                                 
                                                @*<li class="btn btn-flat btn-labeled btn-primary" id="btnmargin_top">
                                                    <span class="btn-label icon  fa  fa-plus-circle" style="margin-right:6px; "> </span>
                                                    @Html.ActionLink("Create", "CreateSales", "Sales", new { @id = "btnaddopportunity", @style = "color:#fff; text-decoration:none; font-weight:normal" })

                                                </li>*@
                                                <li class="btn btn-flat btn-labeled btn-primary" id="btnmargin_top" style="float:left; margin-left:3px;">
                                                    <a style="color: #fff; text-decoration: none; padding: 0px; font-weight: normal" href="@Url.Action("CreateSales", "Sales")">
                                                        <span class="btn-label icon  fa  fa-plus-circle" style="margin-right:6px;"> </span>
                                                        Create
                                                    </a>
                                                </li>
                                                 
                                                <li class="btn btn-flat btn-labeled btn-primary" id="btnmargin_top">
                                                    
                                                    <a style="color: #fff; text-decoration: none; padding: 0px; font-weight: normal" id="DeleteOpportunity" onclick="deleteSelectedSale()"> 
                                                        <span class="btn-label icon  fa fa-trash-o" style="margin-right:6px;"> </span>
                                                        Delete 
                                                    </a>
                                              
                                                </li>
                                                <li class="btn btn-flat btn-labeled btn-primary" id="btnmargin_top">
                                                    
                                                    <a style="color: #fff; text-decoration: none; padding: 0px; font-weight: normal" onclick="ClearSelection();"> 
                                                        <span class="btn-label icon  fa fa-eraser" style="margin-right:6px;"> </span>
                                                    Clear 
                                                    </a>
                                                </li>
                                                <li class="dropdown">
                                                    <button class="btn btn-flat btn-labeled btn-primary" data-toggle="dropdown" id="btnmargin_top" style=" vertical-align: super;">
                                                        <span class="btn-label icon fa   fa-chevron-down"></span>Export
                                                    </button>
                                                    <ul class="dropdown-menu dropdown-menu-right" role="menu" aria-labelledby="dropdownMenu1">
                                                        <li role="presentation"><a role="menuitem" style="cursor: pointer" tabindex="-1" onclick="ExportCsv(); return false;">Export Sales(CSV Format)</a></li>
                                                        <li role="presentation"><a role="menuitem" style="cursor: pointer" tabindex="-1" onclick="ExportExcel(); return false;">Export Sales(Excel Format)</a></li>
                                                    </ul>
                                                </li>

                                            </ul>
                                        </div>

                                    
                                </div>

                                <div class="row">
                                    

                                        <div class="table-primary table-striped" id="SMSGrid">

                                            <table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered" id="tblSales" width="100%">
                                                <thead>
                                                    <tr>
                                                        <th><input type="checkbox" name="chkAll" id="selectall" /></th>
                                                        <th>&nbsp</th>
                                                        <th data-hide="tablet,tabletlandscape,phone">Account Name</th>
                                                        <th data-class="expand">Sales Name</th>
                                                        <th data-hide="tablet,tabletlandscape,phone,desktop">Phone</th>
                                                        <th data-hide="tablet,tabletlandscape,phone,desktop">Email</th>
                                                        <th data-hide="tablet,tabletlandscape,phone,desktop">Date Created</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                   
                                                </tbody>
                                            </table>
                                        </div>
                                    
                                </div>
                            </div>
                        </div>
                    
                </div>
            </div>
      @*<div class="ExportSection" style="visibility:hidden">
          <a id="linkExportCsv" href="/CRM/Sales/ExportToCsv">Export to Csv</a>
          <a id="linkExportExcel" href="/CRM/Sales/ExportToExcel">Export to Excel</a>
</div>*@
  
<div class="ExportSection" style="visibility:hidden">

    <a id="linkExportCsv" href="@Url.Action("ExportToCsv", "Sales")"<span>Export to Csv</span></a>
    <a id="linkExportExcel" href="@Url.Action("ExportToExcel", "Sales")"<span>Export to Excel</span></a>
</div>
         
    @*}*@
 

<script language="javascript" type="text/javascript">
    
    $(document).ready(function () {
        $('#loading').css('display', 'block');

        BindSales();
        $('#tblSales').on('length.dt', function (e, settings, len) {

            $('#loading').css('display', 'block');

        });

        $('#tblSales').on('page.dt', function () {

            $('#loading').css('display', 'block');
        });

        $('#loading').css('display', 'none');

    });
    function BindSales() {
        var responsiveHelper = undefined;
        var breakpointDefinition = {
            tablet: 1024,
            tabletlandscape: 768,
            phone: 480
        };
        var tableElement = $('#tblSales');
        tableElement.dataTable({
            desktop:Infinity,
            autoWidth: false,
            preDrawCallback: function () {
                if (!responsiveHelper) {
                    responsiveHelper = new ResponsiveDatatablesHelper(tableElement, breakpointDefinition);
                }
            },
            rowCallback: function (nRow) {
                responsiveHelper.createExpandIcon(nRow);
            },
            drawCallback: function (oSettings) {
                responsiveHelper.respond();
            },
            //"order": [[$("#HD_SortValue").val(), "" + $("#HD_SortDirection").val() + ""]],
            "aLengthMenu": [[10, 25, 50], [10, 25, 50]],
            //"iDisplayStart": parseInt($("#HD_PageIndex").val()),
            //"iDisplayLength": parseInt($("#HD_PageSize").val()),
            "pagingType": "full_numbers",
            //"processing": true,
            "serverSide": true,
            "bFilter": false,
            "sAjaxSource": "getSales",
            "fnServerParams": function (aoData) {
                aoData.push(
                    { "name": "SaleKeyword", "value": "" + $("#txtKeyword").val() + "" },
                    { "name": "SaleEmail", "value": "" + $("#txtEmail").val() + "" },
                    { "name": "SaleSaleRep", "value": "" + $("#ddlAdmins").val() + "" },
                    { "name": "SaleBranch", "value": "" + $("#ddlBranches").val() + "" },
                    { "name": "SaleFilterString", "value": "" }                   
                    );
            },
            "fnServerData": function (sSource, aoData, fnCallback) {
                $.ajax({
                    "dataType": 'json',
                    "contentType": "application/json; charset=utf-8",
                    "type": "GET",
                    "url": sSource,
                    "data": aoData,
                    "success":
                                function (msg) {
                                    
                                    fnCallback(msg);
                                    $("#tblSales").show();
                                }
                });
            },
            "asStripeClasses": ['odd gradeX', 'even gradeC'],
            "aoColumnDefs": [

                         {
                             "targets": [0], "visible": true, "bSortable": false, "mDataProp": "SalesId",
                             "render": function (data, type, row) {
                                 return "<input type=\"checkbox\"  data-SalesId=" + row["SalesId"] + "  class =\"case\" name=\"chkItem\"  id=\"chkRow_" + row["SalesId"] + "\"   />";
                             }
                         },
                           {
                               "targets": [1], "visible": true, "bSortable": false, "mDataProp": "SalesId",
                               "render": function (data, type, row) {
                                   
                                   return "<span class=\"fa fa-times\" onclick=\"deleteSale('" + row["SalesId"] + "');\"></span>";
                               }
                           },
               {
                   "targets": [2], "visible": true, "bSortable": true, "mDataProp": "AccountName",
                   "render": function (data, type, row) {
                       return "<a style=\"cursor:pointer\" onclick=\"OpenSalesDetail('" + row["SalesId"] + "')\">" + row["AccountName"] + "</a>";
                   }
               },
               { "targets": [3], "visible": true, "bSortable": true, "mDataProp": "SalesName" },
               { "targets": [4], "visible": true, "bSortable": true, "mDataProp": "BillingContact" },
               { "targets": [5], "visible": true, "bSortable": true, "mDataProp": "Email" },
              
               {
                   "targets": [6], "visible": true, "bSortable": true, "mDataProp": "SaleCreatedOn",
                   "render": function (data, type, row) {
                       var jsDate1 = data;
                       if (jsDate1 == null) {
                           return jsDate1 = "";
                       }
                       else if (jsDate1.value != "")
                       {                         
                           var jsDate = new Date(parseInt(row["SaleCreatedOn"].substr(6)));
                           return (jsDate.getMonth()+1) + '/' + jsDate.getDate() + '/' + jsDate.getFullYear();                          
                       }
                       
                   }
               },
               
            ],        
            "fnDrawCallback": function (oSettings) {
               
                $('#loading').css('display', 'none');
            }
        }).api();
    }
    
    $("#selectall").click(function () {

        $('.case').prop("checked", this.checked);
    });
    // if all checkbox are selected, check the selectall checkbox
    // and viceversa
    $('#tblSales tbody').click(function () {

        if ($('#tblSales input[name="chkItem"]:checked').length == $('#tblSales input[name="chkItem"]').length) {
            $("#selectall").prop("checked", true);
        } else {
            $("#selectall").prop("checked", false);
        }
    });

    $('#btnsearchsale').click(function () {
       
        $('#loading').css('display', 'block');
        $("#tblSales").dataTable().fnDestroy();
        BindSales();

        $('#tblSales').on('length.dt', function (e, settings, len) {

            $('#loading').css('display', 'block');
        });

        $('#tblSales').on('page.dt', function () {

            $('#loading').css('display', 'block');
        });

    });

    function ClearSelection() {

        $('#drpOffice option:first-child').attr("selected", "selected");
        $('#drpSalesRep option:first-child').attr("selected", "selected");
        // $('#jq-datatables-example_wrapper .dataTables_filter input').val('');
        $('#txtEmail').val('');
        $('#txtKeyWord').val('');
        //$("#filter").html('');
        //Get_LeadFilterString();
        $('#tblSales').dataTable().fnDestroy();
        BindSales();
    }
    function OpenSalesDetail(SalesId) {
        
        
        window.location = "RetrieveSale?SalesId=" + SalesId;
        
    }

    </script>
<script type="text/javascript">
  
    

    function deleteSale(SalesId) {
        
        var flag = confirm('You are about to delete permanently.Are you sure you want to delete this record?');
        if (flag) {
            deleteEachSale(SalesId);
            document.location.href = document.location.href;
            alert("Deleted Successfully!!!");
        }
    }

    function deleteEachSale(SalesId) {
        
        $.ajax({
            url: "DeleteSales",
            type: "POST",
            async: false,
            data: { delSales: SalesId },
            success: function (data) {
            },
            error: function () {

            }
        });
    }

    function deleteSelectedSale() {
        if ($('#tblSales input[name="chkItem"]:checked').length > 0)
        {
            var flag = confirm('You are about to delete permanently.Are you sure you want to delete these records?');
            if (flag) {
                $('#tblSales input[name="chkItem"]:checked').each(function () {
                    var id = $(this).attr('data-SalesId');
                    deleteEachSale(id);
                });
                document.location.href = document.location.href;
                alert("Deleted Successfully");
            }
        }
        else {
            alert("Please select item(s) to delete.");
        }
    }
    
    function ExportCsv() {
      
        $('#loading').css('display', 'block');
        $("#linkExportCsv")[0].click();
        alert("Sales Exported succesfully");
        $('#loading').css('display', 'none');
    }

    function ExportExcel() {

        $('#loading').css('display', 'block');
        $("#linkExportExcel")[0].click();
        alert("Sales Exported succesfully");
        $('#loading').css('display', 'none');

    }

    //function ExportCsv() {
        
    //    var array = new Array();
    //    if ($('#tblSales input[name="chkItem"]:checked').length > 0) {
    //        $('#tblSales input[name="chkItem"]:checked').each(function () {
                

    //            if ($("#tblSales tr:has(:checked)")) {
                    
    //                var AccountName = $(this).closest("tr").find('td:eq(2)').text();
    //                var SalesName = $(this).closest("tr").find('td:eq(3)').text();
    //                var BillingContact = $(this).closest("tr").find('td:eq(4)').text();
    //                var Email = $(this).closest("tr").find('td:eq(5)').text();
    //                var SaleCreatedOn = $(this).closest("tr").find('td:eq(6)').text();
                   
    //                item = {}
    //                item["AccountName"] = AccountName;
    //                item["SalesName"] = SalesName;
    //                item["BillingContact"] = BillingContact;
    //                item["Email"] = Email;
    //                item["SaleCreatedOn"] = SaleCreatedOn;
                    
    //            }
    //            array.push(item);
    //        });

    //        $.ajax({
    //            url: 'ExportToCsv',
    //            type: 'POST',
    //            data: JSON.stringify(array),
    //            cache: false,
    //            contentType: "application/json;charset=utf-8",
    //            dataType: "json",
    //            success: function (data) {
    //                window.location.href = "DownloadSalesExportCSV";
    //            },
    //            error: function () {

    //            }
    //        });
    //        alert("Sales Exported Successfully");
    //    }
    //    else {
    //        alert("Please select item(s) to Export.");
    //    }
    //}

    //function ExportExcel() {
        
    //    var array = new Array();
    //    if ($('#tblSales input[name="chkItem"]:checked').length > 0) {
    //        $('#tblSales input[name="chkItem"]:checked').each(function () {
                

    //            if ($("#tblSales tr:has(:checked)")) {
                    
    //                var AccountName = $(this).closest("tr").find('td:eq(2)').text();
    //                var SalesName = $(this).closest("tr").find('td:eq(3)').text();
    //                var BillingContact = $(this).closest("tr").find('td:eq(4)').text();
    //                var Email = $(this).closest("tr").find('td:eq(5)').text();
    //                var SaleCreatedOn = $(this).closest("tr").find('td:eq(6)').text();

    //                item = {}
    //                item["AccountName"] = AccountName;
    //                item["SalesName"] = SalesName;
    //                item["BillingContact"] = BillingContact;
    //                item["Email"] = Email;
    //                item["SaleCreatedOn"] = SaleCreatedOn;
    //            }
    //            array.push(item);
    //        });

    //        $.ajax({
    //            url: 'ExportToExcel',
    //            type: 'POST',
    //            data: JSON.stringify(array),
    //            cache: false,
    //            contentType: "application/json;charset=utf-8",
    //            dataType: "json",
    //            success: function (data) {
    //                window.location.href = "DownloadSalesExportExcel";
    //            },
    //            error: function () {

    //            }
    //        });
    //        alert("Sales Exported Successfully");
    //    }
    //    else {
    //        alert("Please select item(s) to Export.");
    //    }
    //}
</script>

     



