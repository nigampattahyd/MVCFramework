@model CRMHub.ViewModel.CompanyModel
@{
    ViewBag.Title = "NewCompanyActivity";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/assets/css/pixel-admin.min.css" rel="stylesheet" />
<script type="text/javascript">
    $(document).ready(function () {
          
        //$("#txtReminder").datepicker({
        //    changeMonth: true,
        //    changeYear: true,
        //    yearRange: '1900:+15'
        //});
    });


</script>
<style type="text/css">
    .pfi-clear {
        display: none !important;
    }
</style>


<script type="text/javascript" language="javascript">
    $(document).ready(function () {
        var param1 = new Date();
        var param2 = param1.getDate() + '/' + (param1.getMonth() + 1) + '/' + param1.getFullYear() + ' ' + param1.getHours() + ':' + param1.getMinutes() + ':' + param1.getSeconds();
        $('#lblCreatedDate').text(param2)
    })


</script>

@using (Html.BeginForm("NewCompanyActivity", "ManageCompany", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div id="content-wrapper">
        <div id="CustomBootstrapAlertBox">
        </div>
        <div class="row">

            <div class="panel">

                <div class="panel-heading">
                    <div class="row">
                        <!-- Page header, center on small screens -->
                        <h1 class="col-xs-6 col-sm-4 text-left text-left-sm panel-title"><i class="fa fa-tasks page-header-icon"></i>&nbsp;  New Activity</h1>
                        <div class="col-xs-6 col-sm-8">
                            <div class="row">
                                <div class="pull-right">
                                    @*<a href="#" class="btn btn-flat btn-labeled btn-primary" tabindex="-1"
                                        data-toggle="modal" data-target="#uidemo-modals-alerts-info"><span class="btn-label icon fa fa-question-circle"></span>Help</a>*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="panel-body">




                    <div class="row">



                        <label class="control-label">
                            <asp:Label ID="lblMessage" runat="server" ForeColor="Red"></asp:Label>
                        </label>

                        <div class="table-nav-item" style="float: right; margin-bottom:15px;">
                            <ul class="table-nav-item" style="float: right; margin-bottom:5px;">


                                <li>

                                    <button class="btn btn-flat btn-labeled btn-primary" id="btnSave" style="margin:0px 3px 0px 10px;">
                                        <span class="btn-label icon fa fa-save"></span>Save
                                    </button>

                                </li>
                                <li>
                                    <a style="color: #fff; text-decoration: none; padding: 0px; font-weight: normal" class="btn btn-flat btn-labeled btn-primary" href="@Url.Action("RedirectActvtyGrid", "ManageCompany")">
                                        <span class="btn-label icon fa fa-backward" style="margin-right:6px;"> </span>
                                        Back
                                    </a>
                                </li>
                            </ul>
                            @*<div class="btn btn-flat btn-labeled btn-primary" style=" margin:0px 3px 0px 0px;">

                                    @Html.ActionLink("Back", "Index", "ManageCompany", new { @style = "color:#fff; text-decoration:none; float:right" })
                                    <span class="btn-label icon fa fa-backward" style="margin-right:6px; "> </span>

                                </div>*@

                        </div>

                    </div>


                    <span id="errorsymbol" style="color:red;display:none;margin-left:5px;" class="fa fa-exclamation-circle"></span>
                    <div id="ErrorMessages" style="margin-left:20px;color:red;font-size:15px;margin-top:-19px">

                    </div>


                    <div class="row">


                        <div class="panel">
                            <div class="panel-body">

                                <div class="row">


                                    <div class="row">
                                        <div class="col-sm-12 no-padding-hr">


                                            <div class=" col-sm-4">
                                                <div class="form-group no-margin-hr">
                                                    <label class="control-label">Type :<span style="color: red">*</span></label>

                                                    @Html.DropDownListFor(m => m.history.HistoryType, new SelectList(Model.TypeList, "name", "name"), new { @id = "ddlHistoryType", @class = "form-control input-sm", @validate = "dropdown", @data_val_required = "Type" })
                                                    @* @Html.DropDownListFor(m => m.history.HistoryType, ViewBag.HistoryList as List<SelectListItem>, new { @id = "ddlHistoryType", @class = "form-control input-sm", @validate = "dropdown", @data_val_required = "Type" })*@


                                                </div>

                                            </div>
                                            <div class="col-sm-4">
                                                <div class="form-group no-margin-hr">
                                                    <label class="control-label">Priority :<span style="color: red">*</span></label>
                                                    @Html.DropDownListFor(m => m.history.Priority, new List<SelectListItem>
                                                                          {
                                                                              new SelectListItem{ Text="Select",Value="Select"} ,
                                                                              new SelectListItem{Text="High",Value="High"},
                                                                              new SelectListItem{Text="Low",Value="Low"},
                                                                              new SelectListItem{Text="Medium",Value="Medium"},
                                                                          }, new { @class = "form-control input-sm", @id = "ddlPriority", @validate = "dropdown", @data_val_required = "Priority" })
                                                </div>
                                            </div>

                                            <div class="col-sm-4">
                                                <div class="form-group no-margin-hr">
                                                    <label class="control-label">Status :<span style="color: red">*</span></label>
                                                    @Html.DropDownListFor(m => m.history.Status, new List<SelectListItem>
                                                                          {
                                                                               new SelectListItem{ Text="Select",Value="Select"} ,
                                                                              new SelectListItem{Text="Open",Value="Open"},
                                                                              new SelectListItem{Text="Completed",Value="Completed"},
                                                                          }, new { @class = "form-control input-sm", @id = "ddlStatus", @validate = "dropdown", @data_val_required = "Status" })
                                                </div>
                                                @Html.HiddenFor(m => m.history.ModuleType, new { Value = "Company" })


                                            </div>






                                            <div class="col-sm-4">
                                                <div class="form-group no-margin-hr">
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <label class="control-label">Due Date :<span style="color: red">*</span></label>
                                                        </div>
                                                    </div>
                                                    <div class="row">

                                                        <div class="col-sm-12">
                                                            @Html.TextBoxFor(m => m.history.StartDate, new { @class = "form-control input-sm", @maxlength = 12, @id = "txtDate", @validate = "Required", @data_val_required = "Due Date" })
                                                            @*@onblur = "return duedateTimecheck(this);"*@


                                                        </div>

                                                        @*<div class="col-sm-4">

                                                            @Html.DropDownListFor(m => m.history.StartTime, new List<SelectListItem>
                                                                          {
                                                                              new SelectListItem{Text="12:00 AM",Value="12:00 AM"},
                                                                              new SelectListItem{Text="12:30 AM",Value="12:30 AM"},
                                                                              new SelectListItem{Text="1:00 AM",Value="1:00 AM"},
                                                                              new SelectListItem{Text="1:30 AM",Value="1:30 AM"},
                                                                              new SelectListItem{Text="2:00 AM",Value="2:00 AM"},
                                                                              new SelectListItem{Text="2:30 AM",Value="2:30 AM"},
                                                                              new SelectListItem{Text="3:00 AM",Value="3:00 AM"},
                                                                              new SelectListItem{Text="3:30 AM",Value="3:30 AM"},
                                                                              new SelectListItem{Text="4:00 AM",Value="4:00 AM"},
                                                                              new SelectListItem{Text="4:30 AM",Value="4:30 AM"},
                                                                              new SelectListItem{Text="5:00 AM",Value="5:00 AM"},
                                                                              new SelectListItem{Text="5:30 AM",Value="5:30 AM"},
                                                                              new SelectListItem{Text="6:00 AM",Value="6:00 AM"},
                                                                              new SelectListItem{Text="6:30 AM",Value="6:30 AM"},
                                                                              new SelectListItem{Text="7:00 AM",Value="7:00 AM"},
                                                                              new SelectListItem{Text="7:30 AM",Value="7:30 AM"},
                                                                              new SelectListItem{Text="8:00 AM",Value="8:00 AM"},
                                                                              new SelectListItem{Text="8:30 AM",Value="8:30 AM"},
                                                                              new SelectListItem{Text="9:00 AM",Value="9:00 AM"},
                                                                              new SelectListItem{Text="9:30 AM",Value="9:30 AM"},
                                                                              new SelectListItem{Text="10:00 AM",Value="10:00 AM"},
                                                                              new SelectListItem{Text="10:30 AM",Value="10:30 AM"},
                                                                              new SelectListItem{Text="11:00 AM",Value="11:00 AM"},
                                                                              new SelectListItem{Text="11:30 AM",Value="11:30 AM"},
                                                                              new SelectListItem{Text="12:00 PM",Value="12:00 PM"},
                                                                              new SelectListItem{Text="12:30 PM",Value="12:30 PM"},
                                                                              new SelectListItem{Text="1:00 PM",Value="1:00 PM"},
                                                                              new SelectListItem{Text="1:30 PM",Value="1:30 PM"},
                                                                              new SelectListItem{Text="2:00 PM",Value="2:00 PM"},
                                                                              new SelectListItem{Text="2:30 PM",Value="2:30 PM"},
                                                                              new SelectListItem{Text="3:00 PM",Value="3:00 PM"},
                                                                              new SelectListItem{Text="3:30 PM",Value="3:30 PM"},
                                                                              new SelectListItem{Text="4:00 PM",Value="4:00 PM"},
                                                                              new SelectListItem{Text="4:30 PM",Value="4:30 PM"},
                                                                              new SelectListItem{Text="5:00 PM",Value="5:00 PM"},
                                                                              new SelectListItem{Text="5:30 PM",Value="5:30 PM"},
                                                                              new SelectListItem{Text="6:00 PM",Value="6:00 PM"},
                                                                              new SelectListItem{Text="6:30 PM",Value="6:30 PM"},
                                                                              new SelectListItem{Text="7:00 PM",Value="7:00 PM"},
                                                                              new SelectListItem{Text="7:30 PM",Value="7:30 PM"},
                                                                              new SelectListItem{Text="8:00 PM",Value="8:00 PM"},
                                                                              new SelectListItem{Text="8:30 PM",Value="8:30 PM"},
                                                                              new SelectListItem{Text="9:00 PM",Value="9:00 PM"},
                                                                              new SelectListItem{Text="9:30 PM",Value="9:30 PM"},
                                                                              new SelectListItem{Text="10:00 PM",Value="10:00 PM"},
                                                                              new SelectListItem{Text="10:30 PM",Value="10:30 PM"},
                                                                              new SelectListItem{Text="11:00 PM",Value="11:00 PM"},
                                                                              new SelectListItem{Text="11:30 PM",Value="11:30 PM"},
                                                                          }, new { @class = "form-control input-sm", @id = "ddlStartTime" })
                                                        </div>*@


                                                    </div>

                                                </div>
                                            </div>

                                            <div class="col-sm-4">
                                                <div class="form-group no-margin-hr">
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <label class="control-label">Reminder :<span style="color: red">*</span></label>
                                                        </div>
                                                    </div>

                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            @Html.TextBoxFor(m => m.history.RemindDate, new { @class = "form-control input-sm", @id = "txtReminder", @validate = "Required", @data_val_required = "Remind Date" })

                                                        </div>

                                                        @*<div class="col-sm-4">
                                                            @Html.DropDownListFor(m => m.history.RemindTime, new List<SelectListItem>
                                                                          {
                                                                              new SelectListItem{Text="12:00 AM",Value="12:00 AM"},
                                                                              new SelectListItem{Text="12:30 AM",Value="12:30 AM"},
                                                                              new SelectListItem{Text="1:00 AM",Value="1:00 AM"},
                                                                              new SelectListItem{Text="1:30 AM",Value="1:30 AM"},
                                                                              new SelectListItem{Text="2:00 AM",Value="2:00 AM"},
                                                                              new SelectListItem{Text="2:30 AM",Value="2:30 AM"},
                                                                              new SelectListItem{Text="3:00 AM",Value="3:00 AM"},
                                                                              new SelectListItem{Text="3:30 AM",Value="3:30 AM"},
                                                                              new SelectListItem{Text="4:00 AM",Value="4:00 AM"},
                                                                              new SelectListItem{Text="4:30 AM",Value="4:30 AM"},
                                                                              new SelectListItem{Text="5:00 AM",Value="5:00 AM"},
                                                                              new SelectListItem{Text="5:30 AM",Value="5:30 AM"},
                                                                              new SelectListItem{Text="6:00 AM",Value="6:00 AM"},
                                                                              new SelectListItem{Text="6:30 AM",Value="6:30 AM"},
                                                                              new SelectListItem{Text="7:00 AM",Value="7:00 AM"},
                                                                              new SelectListItem{Text="7:30 AM",Value="7:30 AM"},
                                                                              new SelectListItem{Text="8:00 AM",Value="8:00 AM"},
                                                                              new SelectListItem{Text="8:30 AM",Value="8:30 AM"},
                                                                              new SelectListItem{Text="9:00 AM",Value="9:00 AM"},
                                                                              new SelectListItem{Text="9:30 AM",Value="9:30 AM"},
                                                                              new SelectListItem{Text="10:00 AM",Value="10:00 AM"},
                                                                              new SelectListItem{Text="10:30 AM",Value="10:30 AM"},
                                                                              new SelectListItem{Text="11:00 AM",Value="11:00 AM"},
                                                                              new SelectListItem{Text="11:30 AM",Value="11:30 AM"},
                                                                              new SelectListItem{Text="12:00 PM",Value="12:00 PM"},
                                                                              new SelectListItem{Text="12:30 PM",Value="12:30 PM"},
                                                                              new SelectListItem{Text="1:00 PM",Value="1:00 PM"},
                                                                              new SelectListItem{Text="1:30 PM",Value="1:30 PM"},
                                                                              new SelectListItem{Text="2:00 PM",Value="2:00 PM"},
                                                                              new SelectListItem{Text="2:30 PM",Value="2:30 PM"},
                                                                              new SelectListItem{Text="3:00 PM",Value="3:00 PM"},
                                                                              new SelectListItem{Text="3:30 PM",Value="3:30 PM"},
                                                                              new SelectListItem{Text="4:00 PM",Value="4:00 PM"},
                                                                              new SelectListItem{Text="4:30 PM",Value="4:30 PM"},
                                                                              new SelectListItem{Text="5:00 PM",Value="5:00 PM"},
                                                                              new SelectListItem{Text="5:30 PM",Value="5:30 PM"},
                                                                              new SelectListItem{Text="6:00 PM",Value="6:00 PM"},
                                                                              new SelectListItem{Text="6:30 PM",Value="6:30 PM"},
                                                                              new SelectListItem{Text="7:00 PM",Value="7:00 PM"},
                                                                              new SelectListItem{Text="7:30 PM",Value="7:30 PM"},
                                                                              new SelectListItem{Text="8:00 PM",Value="8:00 PM"},
                                                                              new SelectListItem{Text="8:30 PM",Value="8:30 PM"},
                                                                              new SelectListItem{Text="9:00 PM",Value="9:00 PM"},
                                                                              new SelectListItem{Text="9:30 PM",Value="9:30 PM"},
                                                                              new SelectListItem{Text="10:00 PM",Value="10:00 PM"},
                                                                              new SelectListItem{Text="10:30 PM",Value="10:30 PM"},
                                                                              new SelectListItem{Text="11:00 PM",Value="11:00 PM"},
                                                                              new SelectListItem{Text="11:30 PM",Value="11:30 PM"},
                                                                          }, new { @class = "form-control input-sm", @id = "ddlReminderTime", @onblur = "return Timecheck(this);" })
                                                        </div>*@
                                                    </div>



                                                </div>

                                            </div>
                                            <div class="col-sm-4">
                                                <div class="form-group no-margin-hr" id="Td12">
                                                    <label class="control-label" id="lblAssignTo">Assigned to :</label>
                                                    @Html.DropDownListFor(m => m.history.AssignedTo, new SelectList(Model.salesList, "userId", "first_Name"), new { @class = "form-control input-sm", @id = "ddlAssignedTo" })

                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="row">


                                        <div class="col-sm-4">
                                            <div class="form-group no-margin-hr">
                                                <label class="control-label">Company Name :</label>

                                                <div id="Table1">
                                                    @Html.TextBoxFor(m => m.compnay.Account_Name, new { @id = "HyperAccountList", @class = "form-control input-sm", @maxlength = "50", @disabled = "disabled" })
                                                </div>
                                                @Html.HiddenFor(m => m.compnay.AccountId )
                                                <!--   <span class="input-group-btn">
                                                    <a class="btn" href="#" id="ImageButton1" title="Select Contact" style="visibility: hidden"
                                                       onclick="return show_NewAccountPopUp(750, 450);"><i class="fa fa-search"></i></a>


                                                </span>-->


                                            </div>
                                        </div>

                                        <div class="col-sm-4">
                                            <div class="form-group no-margin-hr">
                                                <label class="control-label">Contact Name :</label>
                                                <div class="input-group" id="tblContact">
                                                    @Html.TextBoxFor(m => m.history.ContactName, new { @id = "HyperContact", @class = "form-control", @readonly = false })
                                                    @Html.HiddenFor(m => m.history.Contactid, new { @id = "hdParentContactId" })
                                                    <span class="input-group-btn">
                                                        <button class="btn fa fa-search inputTextButton" type="button" id="ImageButton4" title="Select Contact"
                                                                onclick="return show_NewContactPopUp(580, 420);"></button>
                                                    </span>
                                                    @*<input name="hdParentContactId" type="hidden" id="hdParentContactId" value="0" />*@
                                                </div>
                                            </div>
                                        </div>


                                        @*<div class="col-sm-4">
                                                <div class="form-group no-margin-hr">
                                                    <label class="control-label">Contact Name :</label>
                                                    <div class="input-group" id="tblContact">
                                                        @Html.TextBoxFor(m => m.history.Contactid, new { @id = "HyperContact", @class = "form-control", @readonly = false })

                                                        <span class="input-group-btn">
                                                            <button class="btn fa fa-search inputTextButton" type="button" id="ImageButton4" title="Select Contact"
                                                                    onclick="return show_NewContactPopUp(580, 420);"></button>
                                                        </span>

                                                    </div>
                                                </div>
                                            </div>*@
                                        @*<input name="hdParentContactId" type="hidden" id="hdParentContactId" value="0" />*@


                                        <!--   <div class="col-sm-4">
                                            <div class="form-group no-margin-hr">
                                                <label class="control-label">Contact Name :</label>

                                                <div class="input-group" id="tblContact">
                                                   @* @Html.TextBoxFor(m => m.history.Contactid, new { @id = "HyperContact", @class = "form-control", @readonly = false })*@

                                                    <span class="input-group-btn">
                                                        <a class="btn" href="#" id="ImageButton4" title="Select Contact"
                                                           onclick="return show_NewContactPopUp(580, 420);" style="cursor: pointer"><i class="fa fa-search"></i></a>

                                                        <input name="hdParentAccountId" type="hidden" id="hdParentAccountId" value="0">
                                                    </span>

                                                </div>



                                            </div>
                                        </div>
                                         -->
                                        <div class="col-sm-4">
                                            <div class="form-group no-margin-hr">
                                                <label class="control-label">Contact Phone :</label>
                                                @Html.TextBoxFor(m => m.history.contactPhone, new { @id = "txtContactPhone", @class = "form-control input-sm", @readonly = false })

                                            </div>
                                        </div>





                                        <div class="col-sm-4">
                                            <div class="form-group no-margin-hr">
                                                <label class="control-label">Contact Mobile :</label>
                                                @Html.TextBoxFor(m => m.history.contactMobile, new { @id = "txtContactMobile", @class = "form-control input-sm", @readonly = false })

                                            </div>
                                        </div>


                                        <div class="col-sm-4">
                                            <div class="form-group no-margin-hr">
                                                <label class="control-label">Attachments :</label>

                                                <input type="file" id="uploadFile" name="file" class="styled-finputs-example" />
                                                <script>
                                                    init.push(function () {
                                                        $('.styled-finputs-example').pixelFileInput({ placeholder: 'No file selected...' });
                                                    })
                                                </script>
                                            </div>
                                        </div>

                                    </div>


                                    <div class="row">

                                        <div class="col-sm-8">
                                            <div class="form-group no-margin-hr">
                                                <label class="control-label">Comment :</label>
                                                @Html.TextAreaFor(m => m.history.Details, new { @id = "txtHistoryDetail", @class = "form-control", @maxlength = "5000" })

                                            </div>
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="col-sm-12 ">
                                            <div class="pull-right">Date:&nbsp;@Html.LabelFor(m => m.history.CreatedDate, new { @id = "lblCreatedDate" })</div>

                                        </div>
                                    </div>

                                </div>

                            </div>

                        </div>

                    </div>
                </div>
            </div>


            <a id="aCopyEmail" class="form-control input-sm" style="color: Blue; display: none; cursor: pointer">Click here to copy sent email content into Comment. </a>
            <!-- / Info -->

        </div>
    </div>
}



<div class="modal fade" id="myModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>

                <h4 class="modal-title">Contact List</h4>
            </div>
            <div class="modal-body">

                <div class="row">
                    <div style="text-align:left;font-size:12px;padding:5px">Note : Click Contact Name To Select Record.</div>
                    <div class="col-sm-12">

                        <div class="table-primary table-striped" id="tblContactList">

                        </div>

                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

    <script type="text/javascript">
        $("#txtDate").datepicker({
            changeMonth: true,
            changeYear: true,
            yearRange: '1900:+15',
            autoclose: true,
            onSelect: function () {
                var Isvalid = true;
                var duedate = $("#txtDate").val();
                var reminderdate = $("#txtReminder").val();
                var startDay = new Date(duedate);
                var endDay = new Date(reminderdate);
                var millisecondsPerDay = 1000 * 60 * 60 * 24;
                var millisBetween = startDay.getTime() - endDay.getTime();
                var days = millisBetween / millisecondsPerDay;
                var diffdate = Math.floor(days);
                //if (startDay < endDay) {
                if (duedate < reminderdate) {
                    $.growl.error({ title: "Error", message: "Due Date Must be greater than Reminder date.", size: 'large' });
                    $("#txtDate").val('');
                    Isvalid = false;
                }

                if (diffdate > 15) {
                    $.growl.error({ title: "Error", message: "Due Date should be 15 day Prior to Reminder Date.", size: 'large' });
                    $("#txtDate").val('');
                    Isvalid = false;
                }

                if (new Date(duedate) <= new Date()) {

                    $.growl.error({ title: "Error", message: "DueDate Should be greaterthan the CurrentDate.", size: 'large' });
                    $("#txtDate").val('');
                    Isvalid = false;
                }
                // if (diffdate == 0) {
                if (duedate == reminderdate) {
                    $.growl.error({ title: "Error", message: "Due Date should be 24hours greater Reminder Date.", size: 'large' });
                    $("#txtDate").val('');
                    Isvalid = false;
                }
                else {
                    Isvalid = true;
                }
                return Isvalid;
            }
        });
        $("#txtReminder").datepicker({
            changeMonth: true,
            changeYear: true,
            yearRange: '1900:+15',
            autoclose: true,
            onSelect: function (date) {
                var reminderdate1 = date;
                var Isvalid = true;
                var duedate = $("#txtDate").val();
                var reminderdate = reminderdate1;
                var startDay = new Date(duedate);
                var endDay = new Date(reminderdate);
                var millisecondsPerDay = 1000 * 60 * 60 * 24;
                var millisBetween = startDay.getTime() - endDay.getTime();
                var days = millisBetween / millisecondsPerDay;
                var diffdate = Math.floor(days);
                if (reminderdate > duedate) {
                    $.growl.error({ title: "Error", message: "Reminder Date Must be less than Due date.", size: 'large' });
                    $("#txtReminder").val('');
                    return Isvalid = false;
                }
                if (diffdate <= 0 || diffdate > 15) {
                    $.growl.error({ title: "Error", message: "Reminder Date should be 15 day Prior to DueDate.", size: 'large' });
                    $("#txtReminder").val('');
                    return Isvalid = false;
                }
                else {
                    return Isvalid = true;
                }
                return Isvalid;
            }
        });

        //$("#txtDate").datepicker({
        //    changeMonth: true,
        //    changeYear: true,
        //    yearRange: '1900:+15',
        //    //autoclose: true,
        //    onSelect: function (DueDate) {
                
        //        if (new Date(DueDate) <= new Date()) {
        //            alert("DueDate Should be greaterthan the CurrentDate");                    
        //            $("#txtDate").val('');
        //        }

        //    }
        //});
            
      
        //function duedateTimecheck(control) {
        //   
        //    var duedate = $("#txtDate").val();
        //    var param1 = new Date();
        //    var param2 = (param1.getMonth() + 1) + '/' + param1.getDate() + '/' + param1.getFullYear() + ' ' + param1.getHours() + ':' + param1.getMinutes() + ':' + param1.getSeconds();
        //    var curdate = param2;
        //    var Isvalid = true;
        //    if (duedate != "") {
        //        if (duedate < curdate) {
        //            alert("End date should be greater than Start date");
        //            $("#txtDate").focus();
        //            $("#txtDate").val('');
        //            return Isvalid = false;
        //        }
        //        else {
        //            return Isvalid = true;
        //        }
        //    }
        //    return Isvalid;
        //}
       
        //function remaindertimeCheck(control) {
        //   
        //    var remainderdate = $("#txtReminder").val();
        //    var duedate = $("#txtDate").val();
        //    var Isvalid = true;
        //    if (duedate != "") {
        //        if (remainderdate > duedate) {
        //            alert("Remainder Date Must be less than Due date");
        //            $("#txtReminder").focus();
        //            $("#txtReminder").val('');
        //            return Isvalid = false;
        //        }
        //        else {
        //            return Isvalid = true;
        //        }
        //    }
        //    return Isvalid;
        //}


        function Timecheck(control) {

            var remainderdate = $("#txtReminder").val();
            var duedate = $("#txtDate").val();

            var Isvalid = true;
            //getHour24(control);
            var starttime = ($("#ddlStartTime").val());
            var remaindertime = ($("#ddlReminderTime").val());

            //var time = document.getElementById('txttime').value;
            var hrs = Number(remaindertime.match(/^(\d+)/)[1]);
            var mnts = Number(remaindertime.match(/:(\d+)/)[1]);
            var format = remaindertime.match(/\s(.*)$/)[1];
            if (format == "PM" && hrs < 12) hrs = hrs + 12;
            if (format == "AM" && hrs == 12) hrs = hrs - 12;
            var hours = hrs.toString();
            var minutes = mnts.toString();
            if (hrs < 10) hours = "0" + hours;
            if (mnts < 10) minutes = "0" + minutes;
            if (duedate != "" && remainderdate != "") {
                if (duedate == remainderdate) {

                    if (starttime < hours) {
                        alert("Remainder time must be less than start time");
                        $("#ddlReminderTime").focus();
                        return Isvalid = false;
                    }
                }
            }
            else {
                return Isvalid = true;
            }
            return Isvalid;
        }
        $("#btnSave").click(function (e) {
            //if ($("#ddlStatus").val() == "SelectAll") {
            //    alert("Please Select Status");
            //    e.preventDefault();
            //}
            //if ($("#ddlPriority").val() == "SelectAll") {
            //    alert("Please Select Priority");
            //    e.preventDefault();
            //}
            //var duedate = $("#txtDate").val();
            //var reminderdate = $("#txtReminder").val();
            //if (duedate == "") {
            //    $("#txtReminder").val('');
            //}
            //if (duedate != "" && reminderdate == "") {
            //    //alert("please set reminder date");
            //    $.growl.error({ title: "Error", message: "Please Set Reminder Date.", size: 'large' });
            //    e.preventDefault();
            //}
            //if (duedate == "" && reminderdate != "") {
            //    // alert("please set due date");
            //    $.growl.error({ title: "Error", message: "Please Set Due Date.", size: 'large' });
            //    e.preventDefault();
            //}
            Isvalid = true;
            return Validate(this.form);
        });


        $("#ddlReminderTime").prop("disabled", true);
        $("#ddlStartTime").prop("disabled", true);

    </script>
    <script>
        function show_NewContactPopUp() {

            $('#loading').css('display', 'block');
            $.ajax({
                url: "ListContact",
                type: "GET",
                async: false,
                success: function (data) {
                    if (data != null) {
                        $('#tblContactList').empty();
                        $('#tblContactList').empty().append(data);
                    }
                },
                error: function (n, y, p) {
                    alert("error");
                }
            });
            $('#myModal').modal("show");
        }





    </script>

    @*<div class="modal fade" id="myModal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>

                        <h4 class="modal-title">Contact List</h4>
                    </div>
                    <div class="modal-body">

                        <div class="row">
                            <div style="text-align:left;font-size:12px;padding:5px">Note : Click Contact Name To Select Record.</div>
                            <div class="col-sm-12">

                                <div class="table-primary table-striped" id="tblContactList">

                                </div>

                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="modal fade" id="myModal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>

                        <h4 class="modal-title">Contact List</h4>
                    </div>
                    <div class="modal-body">

                        <div class="row">
                            <div style="text-align:left;font-size:12px;padding:5px">Note : Click Contact Name To Select Record.</div>
                            <div class="col-sm-12">

                                <div class="table-primary table-striped" id="tblContactList">

                                </div>

                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>*@


