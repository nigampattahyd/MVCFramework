@model CRMHub.ViewModel.CompanyModel
@{
    ViewBag.Title = "EditCompanyActivity";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/assets/css/pixel-admin.min.css" rel="stylesheet" />
<script type="text/javascript">
    $(document).ready(function () {
        
        //$("#txtRemindDate").datepicker({
        //    changeMonth: true,
        //    changeYear: true,
        //    yearRange: '1900:+15'
        //});
    });

</script>
<style type="text/css">
    .pfi-clear {
        display: none !important;
    }
</style>

<script type="text/javascript" language="javascript">
    $(document).ready(function () {
        var param1 = new Date();
        var param2 = param1.getDate() + '/' + (param1.getMonth() + 1) + '/' + param1.getFullYear() + ' ' + param1.getHours() + ':' + param1.getMinutes() + ':' + param1.getSeconds();
        $('#lblCreatedDate').text(param2)
    })
</script>

@using (Html.BeginForm("UpdateCompanyActivity", "ManageCompany", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div id="content-wrapper">
        <div id="CustomBootstrapAlertBox">
        </div>
        <div class="row">


            <div class="panel">
                <div class="panel-heading">
                    <div class="row">
                        <!-- Page header, center on small screens -->
                        <h1 class="col-xs-6 col-sm-4 text-left text-left-sm panel-title">
                            <i class="fa fa-user page-header-icon"></i>&nbsp; Edit&nbsp; @Html.DisplayFor(m => m.history.HistoryType) 
                        </h1>
                        <div class="col-xs-6 col-sm-8">


                            <div class="row">
                                <div class="pull-right">
                                    @*<a href="#" class="btn btn-flat btn-labeled btn-primary" tabindex="-1"
                                        data-toggle="modal" data-target="#uidemo-modals-alerts-info"><span class="btn-label icon fa fa-question-circle"></span>Help</a>*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel-body">


                    <div class="row">
                        <div class="col-sm-12 col-xs-12 text-right text-right-xs">
                            <div class="row">
                                <label class="control-label">
                                    <span id="lblMessage" style="color: Red;"></span>
                                </label>



                                <button class="btn btn-flat btn-labeled btn-primary" id="btnSave">
                                    <span class="btn-label icon fa fa-save"></span>Save
                                </button>


                                <span>
                                    <asp:LinkButton ID="btnCreateFollowup" Text="Follow Up" runat="server"
                                                    OnClick="btnFollowUp1_Click" />
                                </span>

                                <a style="color: #fff; text-decoration: none; padding: 0px; font-weight: normal" class="btn btn-flat btn-labeled btn-primary" href="@Url.Action("RedirectActvtyGrid", "ManageCompany")">
                                    <span class="btn-label icon fa fa-backward" style="margin-right:6px;"> </span>
                                    Back
                                </a>


                                @*<span class="btn btn-flat btn-labeled btn-primary" style=" margin:0px 3px 0px 0px;">
                                        @Html.ActionLink("Back", "Index", "ManageCompany", new { @style = "color:#fff; text-decoration:none; float:right" })
                                        <span class="btn-label icon fa fa-backward" style="margin-right:6px; "> </span>
                                    </span>*@





                            </div>

                        </div>
                    </div>

                    <span id="errorsymbol" style="color:red;display:none;margin-left:5px;" class="fa fa-exclamation-circle"></span><div id="ErrorMessages" style="margin-left:20px;color:red;font-size:15px;margin-top:-19px">

                    </div>
                    <div class="row">


                        <div class="panel-group">



                            <div class="panel">
                                <div id="collapse2" class="panel-collapse collapse in" style="height: auto;">
                                    <div class="panel-body">
                                        <div class="row">
                                            <div class="col=sm-12">
                                                <div class="row">
                                                    @Html.HiddenFor(m => m.history.HistoryId)
                                                    @Html.HiddenFor(m => m.history.AccountId)
                                                    <div class="col-sm-4">
                                                        <div class="form-group no-margin-hr">
                                                            <label class="control-label">Type :<span style="color: red">*</span></label>
                                                            @*@Html.TextBoxFor(m => m.history.HistoryType, new { @class = "form-control input-sm", @id = "txtType", @validate = "dropdown", @data_val_required = "Type",@readonly = true })*@
                                                            @Html.DropDownListFor(m => m.history.HistoryType, new SelectList(Model.TypeList, "name", "name"), new { @id = "ddlHistoryType", @class = "form-control input-sm", @validate = "dropdown", @data_val_required = "Type" })

                                                        </div>
                                                    </div>
                                                    <div class="col-sm-4">
                                                        <div class="form-group no-margin-hr">
                                                            <label class="control-label">Priority :<span style="color: red">*</span></label>
                                                            @*@Html.TextBoxFor(m => m.history.Priority, new { @class = "form-control input-sm", @id = "txtPriority" })*@
                                                            @Html.DropDownListFor(m => m.history.Priority, new List<SelectListItem>
                                                                          {
                                                                              new SelectListItem{ Text="Select",Value="Select"} ,
                                                                              new SelectListItem{Text="High",Value="High"},
                                                                              new SelectListItem{Text="Low",Value="Low"},
                                                                              new SelectListItem{Text="Medium",Value="Medium"},
                                                                          }, new { @class = "form-control input-sm", @id = "ddlPriority", @validate = "dropdown", @data_val_required = "Priority" })

                                                        </div>
                                                    </div>

                                                    <div class="col-sm-4">
                                                        <div class="form-group no-margin-hr">
                                                            <div class="col-sm-12">
                                                                <label class="control-label">Due Date :<span style="color: red">*</span></label>
                                                            </div>
                                                            <div class="row">
                                                                <div class="col-sm-12">
                                                                    @Html.TextBoxFor(m => m.history.StartDate, "{0:MM/dd/yyyy}", new { @class = "form-control input-sm", @id = "txtDueDate", @validate = "Required", @data_val_required = "Due Date" })

                                                                </div>
                                                               
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-4">
                                                        <div class="form-group no-margin-hr">
                                                            <div class="col-sm-12">
                                                                <label class="control-label">Reminder :<span style="color: red">*</span></label>
                                                            </div>
                                                            <div class="row">
                                                                <div class="col-sm-12">
                                                                    @Html.TextBoxFor(m => m.history.RemindDate, "{0:MM/dd/yyyy}", new { @class = "form-control input-sm", @id = "txtRemindDate", @validate = "Required", @data_val_required = "Remind Date" })
                                                                </div>
                                                               
                                                            </div>
                                                        </div>
                                                    </div>



                                                    <div class="col-sm-4">
                                                        <div class="form-group no-margin-hr">
                                                            <label class="control-label">Company&nbsp;Name :</label>
                                                            @Html.TextBoxFor(m => m.compnay.Account_Name, new { @id = "txtAccountName", @class = "form-control input-sm" , @disabled = "disabled"  })
                                                            @Html.HiddenFor(m => m.compnay.AccountId)
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-4">
                                                        <div class="form-group no-margin-hr">
                                                            <label class="control-label">Contact Name :</label>
                                                            @Html.TextBoxFor(m => m.history.ContactName, new { @id = "txtContact", @class = "form-control input-sm", @readonly = false })

                                                        </div>
                                                    </div>

                                                    <div class="col-sm-4">
                                                        <div class="form-group no-margin-hr">
                                                            <label class="control-label">Status :<span style="color: red">*</span></label>
                                                            @*@Html.TextBoxFor(m => m.history.Status, new { @id = "txtStatus", @class = "form-control input-sm" })*@
                                                            @Html.DropDownListFor(m => m.history.Status, new List<SelectListItem>
                                                                          {
                                                                               new SelectListItem{ Text="Select",Value="Select"} ,
                                                                              new SelectListItem{Text="Open",Value="Open"},
                                                                              new SelectListItem{Text="Completed",Value="Completed"},
                                                                          }, new { @class = "form-control input-sm", @id = "ddlStatus", @validate = "dropdown", @data_val_required = "Status" })

                                                        </div>
                                                    </div>


                                                    <div class="col-sm-4">
                                                        <div class="form-group no-margin-hr" id="Td12">
                                                            <label class="control-label" id="lblAssignTo">Assigned to :</label>
                                                            @Html.DropDownListFor(m => m.history.AssignedTo, new SelectList(Model.salesList, "userId", "first_Name"), new { @class = "form-control input-sm", @id = "ddlAssignedTo" })

                                                        </div>
                                                    </div>



                                                    
                                                    <div class="col-sm-4">
                                                        <div class="form-group no-margin-hr">
                                                            <label class="control-label">Contact Phone :</label>
                                                            @Html.TextBoxFor(m => m.history.contactPhone, new { @id = "txtContactPhone", @class = "form-control input-sm", @readonly = false })

                                                        </div>
                                                    </div>

                                                    <div class="col-sm-4">
                                                        <div class="form-group no-margin-hr">
                                                            <label class="control-label">Contact Mobile :</label>
                                                            @Html.TextBoxFor(m => m.history.contactMobile, new { @id = "txtContactMobile", @class = "form-control input-sm", @readonly = false })

                                                        </div>
                                                    </div>
                                                    <div class="col-sm-4">
                                                        <div class="form-group no-margin-hr">
                                                            <label class="control-label">Attachments :</label>

                                                            <input type="file" id="uploadFile" name="file" class="styled-finputs-example" />
                                                            <script>
                                                                init.push(function () {
                                                                    $('.styled-finputs-example').pixelFileInput({ placeholder: 'No file selected...' });
                                                                })
                                                            </script>
                                                            @if (ViewBag.DownloadAttachment != null)
                                                            {
                                                                @Html.ActionLink((string)ViewBag.Message, "DownloadAttachmentActivity")
                                                            }
                                                            @*@Html.ActionLink((string)ViewBag.Message, "DownloadAttachmentActivity")*@
                                                        </div>
                                                    </div>

                                                    </div>
                                                    <div class="row">

                                                        <div class="col-sm-8">
                                                            <div class="form-group no-margin-hr">
                                                                <label class="control-label">Comment :</label>
                                                                @*@Html.TextBoxFor(m => m.history.Details, new { @id = "txtHistoryDetail", @maxlength = "5000", @class = "form-control input-sm" })*@
                                                                @Html.TextAreaFor(m => m.history.Details, new { @id = "txtHistoryDetail", @class = "form-control", @maxlength = "5000" })
                                                            </div>
                                                        </div>
                                                     </div>

                                                        <div class="row">
                                                            <div class="col-sm-12 ">
                                                                <div class="col-sm-12">
                                                                    <div class="pull-right">
                                                                        Date:&nbsp;<asp:Label ID="lblCreatedDate" runat="server">
                                                                            @Html.LabelFor(m => m.history.CreatedDate, new { @id = "lblCreatedDate" })
                                                                        </asp:Label>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                    </div>
                                            </div>
                                        </div>
                                    </div>


                                </div>
                            </div>
                        </div>


                    </div>
                </div>
            </div>
            <!-- /11. $BOOTSTRAP_TAB_DROP -->
            <!-- / Info -->

        </div>
    @*</div>*@
}

<script type="text/javascript">

    $(document).ready(function () {

        $("#Activities").addClass("active");
    });
    $("#ddlReminderTime").prop("disabled", true);
    $("#ddlStartTime").prop("disabled", true);

    $("#txtDueDate").datepicker({
        changeMonth: true,
        changeYear: true,
        yearRange: '1900:+15',
        autoclose: true,
        onSelect: function () {
            var Isvalid = true;
            var duedate = $("#txtDueDate").val();
            var reminderdate = $("#txtRemindDate").val();
            var startDay = new Date(duedate);
            var endDay = new Date(reminderdate);
            var millisecondsPerDay = 1000 * 60 * 60 * 24;
            var millisBetween = startDay.getTime() - endDay.getTime();
            var days = millisBetween / millisecondsPerDay;
            var diffdate = Math.floor(days);
            if (duedate < reminderdate) {
                $.growl.error({ title: "Error", message: "Due Date Must be greater than Reminder date.", size: 'large' });
                Isvalid = false;
            }
            if (diffdate > 15) {
                $.growl.error({ title: "Error", message: "Due Date should be 15 day Prior to Reminder Date.", size: 'large' });
                Isvalid = false;
            }
            //if (new Date(duedate) <= new Date()) {
                                       
            //            $.growl.error({ title: "Error", message: "DueDate Should be greaterthan the CurrentDate.", size: 'large' });
            //            Isvalid = false;
            //        }
            if (duedate == reminderdate) {
                $.growl.error({ title: "Error", message: "Due Date should be 24hours greater Reminder Date.", size: 'large' });
                Isvalid = false;
            }
            else {
                Isvalid = true;
            }
            return Isvalid;
        }
    });

    function deleteCompany(historyId) {

        var flag = confirm('You are about to delete permanently.Are you sure you want to delete this record?');
        if (flag) {
            deleteEachCompany(historyId);
            document.location.href = document.location.href;
            alert("Deleted Successfully!!!");
        }
    }

    function deleteEachCompany(historyId) {

        $.ajax({
            url: "ManageCompany/DeleteCompanyActivity",
            type: "GET",
            async: false,
            data: { historyId: historyId },
            success: function (data) {
            },
            error: function () {

            }
        });
    }

    $("#btnSave").click(function (e) {
        if ($("#ddlStatus").val() == "SelectAll") {
            alert("Please Select Status");
            e.preventDefault();
        }
        if ($("#ddlPriority").val() == "SelectAll") {
            alert("Please Select Priority");
            e.preventDefault();
        }
        var duedate = $("#txtDueDate").val();
        var reminderdate = $("#txtRemindDate").val();
        if (duedate == "") {
            $("#txtRemindDate").val('');
        }
        if (duedate != "" && reminderdate == "") {
            //alert("please set reminder date");
            $.growl.error({ title: "Error", message: "Please Set Reminder Date.", size: 'large' });
            e.preventDefault();
        }
        if (duedate == "" && reminderdate != "") {
            // alert("please set due date");
            $.growl.error({ title: "Error", message: "Please Set Due Date.", size: 'large' });
            e.preventDefault();
        }
        Isvalid = true;
        return Validate(this.form);


    });
    $("#txtRemindDate").datepicker({
        changeMonth: true,
        changeYear: true,
        yearRange: '1900:+15',
        autoclose: true,
        onSelect: function (date) {
            var reminderdate1 = date;
            var Isvalid = true;
            var duedate = $("#txtDueDate").val();
            var reminderdate = reminderdate1;
            var startDay = new Date(duedate);
            var endDay = new Date(reminderdate);
            var millisecondsPerDay = 1000 * 60 * 60 * 24;
            var millisBetween = startDay.getTime() - endDay.getTime();
            var days = millisBetween / millisecondsPerDay;
            var diffdate = Math.floor(days);
            if (reminderdate > duedate) {
                $.growl.error({ title: "Error", message: "Reminder Date Must be less than Due date.", size: 'large' });
                $("#txtRemindDate").val('');
                return Isvalid = false;
            }
            if (diffdate <= 0 || diffdate > 15) {
                $.growl.error({ title: "Error", message: "Reminder Date should be 15 day Prior to DueDate.", size: 'large' });
                $("#txtRemindDate").val('');
                return Isvalid = false;
            }
            else {
                return Isvalid = true;
            }
            return Isvalid;
        }
    });

   

    function Timecheck(control) {

        var remainderdate = $("#txtReminder").val();
        var duedate = $("#txtDueDate").val();

        var Isvalid = true;
        //getHour24(control);
        var starttime = ($("#ddlStartTime").val());
        var remaindertime = ($("#ddlReminderTime").val());

        //var time = document.getElementById('txttime').value;
        var hrs = Number(remaindertime.match(/^(\d+)/)[1]);
        var mnts = Number(remaindertime.match(/:(\d+)/)[1]);
        var format = remaindertime.match(/\s(.*)$/)[1];
        if (format == "PM" && hrs < 12) hrs = hrs + 12;
        if (format == "AM" && hrs == 12) hrs = hrs - 12;
        var hours = hrs.toString();
        var minutes = mnts.toString();
        if (hrs < 10) hours = "0" + hours;
        if (mnts < 10) minutes = "0" + minutes;
        if (duedate != "" && remainderdate != "") {
            if (duedate == remainderdate) {

                if (starttime < hours) {
                    alert("Remainder time must be less than start time");
                    $("#ddlReminderTime").focus();
                    return Isvalid = false;
                }
            }
        }
        else {
            return Isvalid = true;
        }
        return Isvalid;
    }

    $("#btnSave").click(function () {
        return Validate(this.form);
    });

</script>