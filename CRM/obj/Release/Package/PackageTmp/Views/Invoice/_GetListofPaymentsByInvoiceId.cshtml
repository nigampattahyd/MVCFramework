@*@model IEnumerable<CRMHub.EntityFramework.tbl_Payments>*@
@*@model CRMHub.EntityFramework.tbl_Payments*@
@model CRMHub.ViewModel.InvoiceModel
<html>
<body>
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>

        <h5 class="modal-title">Payment&nbsp;Details&nbsp;of&nbsp;@TempData["InvoiceNo"]</h5>

        <h5 class="modal-title">Customer&nbsp;:&nbsp;@TempData["Customer"]</h5>
    </div>

    <div class="modal-body">

        <div class="row">

            <div class="col-sm-12">
                @Html.HiddenFor(m => m.PaymentObj.InvoiceID, new { @id = "hdInvoiceId" })

                @Html.Hidden("hdLocation", (string)ViewBag.location)
                <div style="width:100px;">
                    <div id="loading" style="display:none">
                        <img id="loading-image" src="~/Content/assets/images/loader.gif" />
                    </div>
                    @*<h4 class="modal-title">@ViewBag.MessageInvNo</h4>*@
                </div>
                @*<table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered" id="jq-datatables-ContactPopup" style="width:100%">*@
                <table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered" id="jq-datatables-PaymentPopup" style="width:100%">
                    <thead>
                        <tr>
                            <th data-hide="tablet,tabletlandscape,phone" style="text-align:left">Invoice&nbsp;Amount&nbsp;($)</th>
                            <th data-class="expand" style="text-align:left">Invoice&nbsp;Balance&nbsp;Amount&nbsp;($)</th>
                            <th data-hide="phone,smartphone">Payment&nbsp;Date</th>
                            <th data-hide="tabletlandscape,phone">Payment&nbsp;Mode</th>
                            <th data-hide="tabletlandscape,phone">Amount&nbsp;Paid&nbsp;($)</th>
                        </tr>
                    </thead>
                    <tbody></tbody>

                </table>

            </div>
        </div>
    </div>
</body>
</html>
<style type="text/css">
    .alignRight {
        text-align: right;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {
        var invoiceid = $('#hdInvoiceId').val();
       

        BindPaymentList(invoiceid);
        $('#jq-datatables-PaymentPopup').on('length.dt', function (e, settings, len) {

            $('#loading').css('display', 'block');

        });

        $('#jq-datatables-PaymentPopup').on('page.dt', function () {

            $('#loading').css('display', 'block');
        });

        $('#loading').css('display', 'none');

    });



    function BindPaymentList(invoiceid) {
        //  alert(invoiceid);
        var Controllerfunction = "";
        var loc = $('#hdLocation').val();
        if (loc == "Payment") {
            Controllerfunction = "getPaymentslistforInvoiceId";
        }
        else if (loc == "Contact") {
            Controllerfunction = '@Url.Action("getPaymentslistforInvoiceId", "Invoice")';
        }
        //var Controllerfunction = "getPaymentslistforInvoiceId";
        var responsiveHelper = undefined;
        var breakpointDefinition = {
            tablet: 1024,
            tabletlandscape: 768,
            phone: 480
        };
        var tableElement = $('#jq-datatables-PaymentPopup');

        tableElement.dataTable({
            autoWidth: false,
            preDrawCallback: function () {
                if (!responsiveHelper) {
                    responsiveHelper = new ResponsiveDatatablesHelper(tableElement, breakpointDefinition);
                }
            },
            rowCallback: function (nRow) {
                responsiveHelper.createExpandIcon(nRow);
            },
            drawCallback: function (oSettings) {
                responsiveHelper.respond();
            },
            // "order": [[$("#HD_SortValue").val(), "" + $("#HD_SortDirection").val() + ""]],
            "aLengthMenu": [[10, 25, 50], [10, 25, 50]],
            //"iDisplayStart": parseInt($("#HD_PageIndex").val()),
            //"iDisplayLength": parseInt($("#HD_PageSize").val()),
            //"oSearch": { "sSearch": $("#HD_SearchString").val() },

            "pagingType": "full_numbers",

            "bFilter": false,
            //"processing": true,
            "serverSide": true,
            "sAjaxSource": Controllerfunction,
            //"sAjaxSource": "getPaymentslistforInvoiceId",
            "fnServerParams": function (aoData) {
                aoData.push(
                     { "name": "InvoiceId", "value": +invoiceid }

                    );

            },
            "fnServerData": function (sSource, aoData, fnCallback) {

                $.ajax({
                    "dataType": 'json',
                    "contentType": "application/json; charset=utf-8",
                    "type": "GET",
                    "url": sSource,
                    "data": aoData,
                    "success":
                                function (msg) {
                                    //var json = jQuery.parseJSON(msg.d);
                                    fnCallback(msg);
                                    //$("#jq-datatables-example").show();
                                }
                });
            },
            "asStripeClasses": ['odd gradeX', 'even gradeC'],
            "aoColumnDefs": [

                {
                    "targets": [0], "visible": true, "bSortable": true, "mDataProp": "InvoiceAmount", "sClass": "alignRight"
                    //"render": function (data, type, row) {
                    //    return "<a href=\"#\" onclick=\"OpenPaymentDetail('" + row["InvoiceID"] + "')\">" + row["InvoiceNo"] + "</a>";

                    //}

                },
                {

                    "targets": [1], "visible": true, "bSortable": true, "mDataProp": "InvoiceBalance", "sClass": "alignRight",
                    "render": function (data, type, row) {
                        if (row["InvoiceBalance"] > 0) {
                            return row["InvoiceBalance"];
                        }
                        else {
                            // return "Invoice Cleared";
                            return "<span class=\"label label-success  inline-block\">-Nil-</span>";
                        }
                    }

                },
                //{ "targets": [2], "visible": true, "bSortable": true, "mDataProp": "GrandTotal", "sClass": "alignRight" },
                // { "targets": [3], "visible": true, "bSortable": true, "mDataProp": "BalanceAmount", "sClass": "alignRight" },
                 {
                     "targets": [2], "visible": true, "bSortable": true, "mDataProp": "CreatedDate",
                     "render": function (data, type, row) {
                         var jsDate1 = data;
                         if (jsDate1 == null) {
                             return jsDate1 = "";
                         }
                         else if (jsDate1.value != "") {
                             var jsDate = new Date(parseInt(row["CreatedDate"].substr(6)));
                             return (jsDate.getMonth() + 1) + '/' + jsDate.getDate() + '/' + jsDate.getFullYear();
                         }

                     }
                 },

                  { "targets": [3], "visible": true, "bSortable": true, "mDataProp": "PaymentType" },


                   {
                       "targets": [4], "visible": true, "bSortable": true, "mDataProp": "AmountPaid"


                   },


            ],
            "fnDrawCallback": function (oSettings) {

                $('#loading').css('display', 'none');

            }
        }).api();


        //$('#tblInvoice_wrapper .table-caption').text('');

        // $('#tblOffice_wrapper .dataTables_filter input').attr('placeholder', 'Search...');


    }


</script>
