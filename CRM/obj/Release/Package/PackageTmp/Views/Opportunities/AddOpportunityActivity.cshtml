@model CRMHub.ViewModel.ActivityModel
@{
    ViewBag.Title = "AddOpportunityActivity";
}
<style type="text/css">
    #ErrorMessages {
        display: inline-block;
    }
</style>

<link href="~/Content/assets/css/pixel-admin.min.css" rel="stylesheet" />
<style type="text/css">
    .pfi-clear {
        display: none !important;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {
        //$("#ddlModule").val("Opportunity");
        //$("#txtDate").datepicker({
        //    changeMonth: true,
        //    changeYear: true,
        //    yearRange: '1900:+15'
        //});
        //$("#txtReminder").datepicker({
        //    changeMonth: true,
        //    changeYear: true,
        //    yearRange: '1900:+15'
        //});
        @*$('#ddlModule').change(function () {
            var optionval = $(this).val();
            if (optionval == 'Company') {
                window.location.href = '@Url.Action("CompanyActivity", "ManageCompany")';
            }
            else if (optionval == 'Contact') {
                window.location.href = '@Url.Action("AddContactActivity", "Contact")';
            }
            else if (optionval == 'Leads') {
                window.location.href = '@Url.Action("CreateLeadActivityfromHome", "Leads")';
            }

        });*@
        $('#ddlModule').change(function () {
            var duedate = "";
            var optionval = $(this).val();
            var fuldate = $('#txtDate').val();
            if (fuldate != "") {
                var fullDate = new Date(fuldate);
                var twoDigitMonth = fullDate.getMonth() + 1;
                twoDigitMonth = twoDigitMonth + ""; if (twoDigitMonth.length == 1) twoDigitMonth = "0" + twoDigitMonth;
                var twoDigitDate = fullDate.getDate() + ""; if (twoDigitDate.length == 1) twoDigitDate = "0" + twoDigitDate;
                duedate = twoDigitDate + "/" + twoDigitMonth + "/" + fullDate.getFullYear();
            }

            if (optionval == 3) {
                var target = '@Url.Action("CompanyActivities", "ManageCompany")';
                @*window.location.href = '@Url.Action("CompanyActivity", "ManageCompany")';*@
            }
            else if (optionval == 2) {
                var target = '@Url.Action("AddContactActivity", "Contact")';
                @*window.location.href = '@Url.Action("AddContactActivity", "Contact")';*@
            }
            else if (optionval == 1) {
                var target = '@Url.Action("CreateLeadActivityfromHome", "Leads")';
                @*window.location.href = '@Url.Action("CreateLeadActivityfromHome", "Leads")';*@
            }
            window.location.href = target + '?dateField=' + duedate;

        });
    });

</script>
<script type="text/javascript" language="javascript">
    $(document).ready(function () {
        var param1 = new Date();
        var param2 = param1.getDate() + '/' + (param1.getMonth() + 1) + '/' + param1.getFullYear() + ' ' + param1.getHours() + ':' + param1.getMinutes() + ':' + param1.getSeconds();
        $('#lblCreatedDate').text(param2)
    })
</script>
@using (Html.BeginForm("AddOpportunityActivity", "Opportunities", FormMethod.Post, new { id = "PostOppActivityForm", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken();
    @Html.ValidationSummary(true)
    <div id="content-wrapper">
        <div id="CustomBootstrapAlertBox">
        </div>
        <div class="row">

            <script>
                init.push(function () {
                    $('ul.bs-tabdrop-example').tabdrop();
                });
            </script>
            <div class="panel">
                <div class="panel-heading">
                    <div class="row">
                        <!-- Page header, center on small screens -->
                        <h1 class="col-xs-6 col-sm-4 text-left text-left-sm panel-title"><i class="fa fa-tasks page-header-icon"></i>&nbsp;Create&nbsp;Opportunity&nbsp;Activity</h1>
                        <div class="col-xs-6 col-sm-8">
                            <div class="row">
                                <div class="pull-right">
                                    @*<a href="#" class="btn btn-flat btn-labeled btn-primary" tabindex="-1"
                                        data-toggle="modal" data-target="#uidemo-modals-alerts-info"><span class="btn-label icon fa fa-question-circle"></span>Help</a>*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-body">

                    <div class="row">


                        <div class="col-sm-8">
                            <label class="control-label">
                                <asp:Label ID="lblMessage" runat="server" ForeColor="Red"></asp:Label>
                            </label>
                        </div>
                        <div class="col-xs-12 col-sm-4 text-right text-right-sm">

                            <span id="liSaveContainer">
                                <button class="btn btn-flat btn-labeled btn-primary" id="btnSave" style="background:#1b80c2 !important; text-decoration:none; "> <span class="btn-label icon fa fa-save"></span> Save</button>

                            </span>
                            <a style="color: #fff; text-decoration: none; padding: 0px; font-weight: normal" class="btn btn-flat btn-labeled btn-primary" href="@Url.Action("ActivitygridBind", "ManageCompany")">
                                <span class="btn-label icon fa fa-backward" style="margin-right:6px;"> </span>
                                Back
                            </a>



                        </div>
                    </div>
                    <span id="errorsymbol" style="color:red;display:none;margin-left:5px;" class="fa fa-exclamation-circle"></span><div id="ErrorMessages" style="margin-left:20px;color:red;font-size:15px">

                    </div>
                    <div class="row">

                        <!-- Tabs -->
                        <div class="tab-content">
                            <div class="tab-pane active" id="pvAccounts">





                                <div class="row">
                                    <asp:Label ID="lblErrorMsg" runat="server" ForeColor="red"></asp:Label>
                                    <div class="col-sm-12">
                                        <div class="panel-group" id="accordion-example">
                                            <!-- / .panel -->
                                            <div class="panel">

                                                <!-- / .panel-heading -->
                                                <div id="collapse1" class="panel-collapse collapse in" style="height: auto;">
                                                    <div class="panel-body">
                                                        <div class="col-sm-12 no-padding-hr">

                                                            <div class="row">
                                                                <div class="row">

                                                                    <div class="col-sm-12 no-padding-hr">
                                                                        <div class="col-sm-3">
                                                                            <div class="form-group no-margin-hr">
                                                                                <label class="control-label">Module :<span style="color: red">*</span></label>

                                                                                @Html.DropDownListFor(m => m.activity.AccountTypeID, new SelectList(Model.ListAccounttype, "ID", "AccountTypeName"), new { @id = "ddlModule", @class = "form-control input-sm", @validate = "dropdown", @data_val_required = "Module Type" })
                                                                            </div>
                                                                        </div>

                                                                        <div class="col-sm-3">&nbsp;</div>
                                                                        <div class="col-sm-3">&nbsp;</div>
                                                                        <div class="col-sm-3 ">
                                                                            <div class="pull-right">
                                                                                Date:&nbsp;<asp:Label ID="lblCreatedDate" runat="server">
                                                                                    @Html.LabelFor(m => m.activity.CreatedDate, new { @id = "lblCreatedDate" })
                                                                                </asp:Label>
                                                                            </div>

                                                                        </div>


                                                                    </div>

                                                                </div>

                                                                <div class="row">

                                                                    <div class="col-sm-3">
                                                                        <div class="form-group no-margin-hr">
                                                                            <label class="control-label">Owner :<span style="color: red">*</span></label>

                                                                            <div id="Table1" class="input-group">

                                                                                @Html.TextBoxFor(m => m.activity.OwnerName, new { @id = "txtCOwnername", @class = "form-control input-sm", @maxlength = "50", @disabled = "disabled", @validate = "Required", @data_val_required = "Company Name" })
                                                                                <span class="input-group-addon" type=" button" style="cursor:pointer;" onclick="return show_OwnerPopUp(750, 450);">
                                                                                    <i class="fa fa-search"></i>
                                                                                    @Html.HiddenFor(m => m.activity.OwnerID, new { @id = "hdCOwnerId" })
                                                                                </span>
                                                                            </div>

                                                                        </div>
                                                                    </div>




                                                                    <div class="col-sm-3">
                                                                        <div class="form-group no-margin-hr">
                                                                            <label class="control-label">Type :<span style="color:Red">*</span></label>
                                                                            @Html.DropDownListFor(m => m.activity.ActivityTypeID, new SelectList(Model.TypeList, "Aid", "name"), new { @id = "ddlHistoryType", @class = "form-control input-sm", @validate = "dropdown", @data_val_required = "Type" })
                                                                            @*@Html.DropDownListFor(m => m.leadhistoryEntity.HistoryType, new SelectList(Model.leadactivity, "name", "name"), new { @id = "ddlHistoryType", @class = "form-control input-sm", @validate = "dropdown", @data_val_required = "Type" })*@
                                                                            @Html.ValidationMessageFor(m => m.activity.ActivityTypeID, "", new { @class = "text-danger" })

                                                                        </div>

                                                                    </div>
                                                                    <div class="col-sm-3">
                                                                        <div class="form-group no-margin-hr">
                                                                            <label class="control-label">Priority :<span style="color: red">*</span></label>

                                                                            @Html.DropDownListFor(m => m.activity.PriorityID, new SelectList(Model.ListPriority, "ID", "PriorityName"), new { @id = "ddlPriority", @class = "form-control input-sm", @validate = "dropdown", @data_val_required = "Priority" })

                                                                        </div>
                                                                    </div>

                                                                    <div class="col-sm-3">
                                                                        <div class="form-group no-margin-hr">
                                                                            <label class="control-label">Due Date :<span style="color: red">*</span></label>

                                                                            @Html.TextBoxFor(m => m.activity.DueDate, "{0:MM/dd/yyyy}", new { @class = "form-control input-sm", @maxlength = 12, @id = "txtDate", @validate = "Required", @data_val_required = "Due Date" })

                                                                        </div>
                                                                    </div>

                                                                    <div class="col-sm-3">
                                                                        <div class="form-group no-margin-hr">
                                                                            <label class="control-label"> Reminder :<span style="color: red">*</span></label>

                                                                            @Html.TextBoxFor(m => m.activity.RemindDate, new { @class = "form-control input-sm", @id = "txtReminder", @validate = "Required", @data_val_required = "Remind Date" })
                                                                            @*@Html.TextBoxFor(m => m.leadhistoryEntity.RemindDate, new { @class = "form-control input-sm", @id = "txtReminder", @validate = "Required", @data_val_required = "Remind Date" })*@

                                                                        </div>
                                                                    </div>

                                                                    <div class="col-sm-3">
                                                                        <div class="form-group no-margin-hr">
                                                                            <label class="control-label">Opportunity Name:<span style="color: red">*</span></label>

                                                                            <div id="Table1" class="input-group">
                                                                                @Html.TextBoxFor(m => m.activity.AccountName, new { @id = "txtAccountName", @class = "form-control input-sm", @maxlength = "50", @disabled = "disabled", @validate = "Required", @data_val_required = "Company Name" })
                                                                                <span class="input-group-addon" type=" button" style="cursor:pointer;" onclick="return show_NewOpporPopUp(750, 450);">
                                                                                    <i class="fa fa-search"></i>
                                                                                    @Html.HiddenFor(m => m.activity.AccountID, new { @id = "txtParentAccountid" })
                                                                                </span>

                                                                            </div>


                                                                            @*<div id="Table1" runat="server" class="input-group">
                                                                                    @Html.TextBoxFor(m => m.leadhistoryEntity.LeadName, new { @class = "form-control input-sm", @id = "txtOppName", @Placeholder = "Select Opportunity", @maxlength = "100", @readonly = false, @validate = "Required", @data_val_required = "Opportunity Name" })

                                                                                    <span class="input-group-addon" type=" button" style="cursor:pointer;" onclick="return show_NewAccountPopUp(750, 450);">
                                                                                        <i class="fa fa-search"></i>
                                                                                        @Html.HiddenFor(m => m.leadhistoryEntity.Leadid, new { @id = "hdParentLeadId" })
                                                                                    </span>

                                                                                </div>*@
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-sm-3">
                                                                        <div class="form-group no-margin-hr">
                                                                            <label class="control-label">Status :<span style="color: red">*</span></label>

                                                                            @Html.DropDownListFor(m => m.activity.StatusID, new SelectList(Model.StatusList, "ID", "StatusName"), new { @id = "ddlStatus", @class = "form-control input-sm", @validate = "dropdown", @data_val_required = "Status" })

                                                                        </div>
                                                                    </div>

                                                                    <div class="col-sm-3">
                                                                        <div class="form-group no-margin-hr" id="Td12">
                                                                            <label class="control-label" id="lblAssignTo">Assigned to :</label>
                                                                            <div id="Table1" class="input-group">

                                                                                @Html.TextBoxFor(m => m.activity.AssignedName, new { @id = "txtAssignedname", @class = "form-control input-sm", @maxlength = "50", @disabled = "disabled" })
                                                                                <span class="input-group-addon" type=" button" style="cursor:pointer;" onclick="return show_UsersPopUp(750, 450);">
                                                                                    <i class="fa fa-search"></i>
                                                                                    @Html.HiddenFor(m => m.activity.AssignedTo, new { @id = "hdassignedId" })
                                                                                </span>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>






                                                            </div>


                                                            <div class="row">
                                                               
                                                                <div class="col-sm-12">
                                                                    <div class="form-group no-margin-hr">
                                                                        <label class="control-label">Comment :</label>
                                                                        @Html.TextAreaFor(m => m.activity.Notes, new { @id = "txtHistoryDetail", @class = "textEditor" })
                                                                       
                                                                    </div>
                                                                </div>
                                                               

                                                            </div>
                                                            @*<div class="row">
                                                                <div class="col-sm-12 ">
                                                                    <div class="pull-right">Date:&nbsp;@Html.LabelFor(m => m.activity.CreatedDate, new { @id = "lblCreatedDate" })</div>
                                                                </div>
                                                            </div>*@
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                            <!-- / .panel -->
                                        </div>
                                    </div>

                                </div>

                            </div>

                        </div>
                    </div>

                </div>


            </div>
        </div>
    </div>

}
<div class="modal fade" id="myModalOpp">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Opp List</h4>
            </div>
            <div class="modal-body">

                <div class="row">
                    <div style="text-align:left;font-size:12px;padding:5px">Note : Click Opportunity Name To Select Record.</div>
                    <div class="col-sm-12">

                        <div class="table-primary table-striped" id="tblOppList">

                        </div>

                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $(".textEditor").jqte();
    });
    $("#txtDate").datepicker({
        changeMonth: true,
        changeYear: true,
        yearRange: '1900:+15',
        autoclose: true,
        onSelect: function () {
            var Isvalid = true;
            var duedate = $("#txtDate").val();
            var reminderdate = $("#txtReminder").val();
            var startDay = new Date(duedate);
            var endDay = new Date(reminderdate);
            var millisecondsPerDay = 1000 * 60 * 60 * 24;
            var millisBetween = startDay.getTime() - endDay.getTime();
            var days = millisBetween / millisecondsPerDay;
            var diffdate = Math.floor(days);
            // if (startDay < endDay) {
            if (duedate < reminderdate) {
                $.growl.error({ title: "Error", message: "Due Date Must be greater than Reminder date.", size: 'large' });
                $("#txtDate").val('');
                Isvalid = false;
            }
            if (diffdate > 15) {
                $.growl.error({ title: "Error", message: "Due Date should be 15 day Prior to Reminder Date.", size: 'large' });
                $("#txtDate").val('');
                Isvalid = false;
            }
            if (new Date(duedate) <= new Date()) {

                $.growl.error({ title: "Error", message: "DueDate Should be greaterthan the CurrentDate.", size: 'large' });
                $("#txtDate").val('');
                Isvalid = false;
            }
            // if (diffdate == 0) {
            if (duedate == reminderdate) {
                $.growl.error({ title: "Error", message: "Due Date should be 24hours greater Reminder Date.", size: 'large' });
                $("#txtDate").val('');
                Isvalid = false;
            }
            else {
                Isvalid = true;
            }
            return Isvalid;
        }
    });
    $("#txtReminder").datepicker({
        changeMonth: true,
        changeYear: true,
        yearRange: '1900:+15',
        autoclose: true,
        onSelect: function (date) {
            var reminderdate1 = date;
            var Isvalid = true;
            var duedate = $("#txtDate").val();
            var reminderdate = reminderdate1;
            var startDay = new Date(duedate);
            var endDay = new Date(reminderdate);
            var millisecondsPerDay = 1000 * 60 * 60 * 24;
            var millisBetween = startDay.getTime() - endDay.getTime();
            var days = millisBetween / millisecondsPerDay;
            var diffdate = Math.floor(days);
            if (reminderdate > duedate) {
                $.growl.error({ title: "Error", message: "Reminder Date Must be less than Due date.", size: 'large' });
                $("#txtReminder").val('');
                return Isvalid = false;
            }
            if (diffdate <= 0 || diffdate > 15) {
                $.growl.error({ title: "Error", message: "Reminder Date should be 15 day Prior to DueDate.", size: 'large' });
                $("#txtReminder").val('');
                return Isvalid = false;
            }
            else {
                return Isvalid = true;
            }
            return Isvalid;
        }
    });




    function Timecheck(control) {

        var remainderdate = $("#txtReminder").val();
        var duedate = $("#txtDate").val();

        var Isvalid = true;
        //getHour24(control);
        var starttime = ($("#ddlStartTime").val());
        var remaindertime = ($("#ddlReminderTime").val());

        //var time = document.getElementById('txttime').value;
        var hrs = Number(remaindertime.match(/^(\d+)/)[1]);
        var mnts = Number(remaindertime.match(/:(\d+)/)[1]);
        var format = remaindertime.match(/\s(.*)$/)[1];
        if (format == "PM" && hrs < 12) hrs = hrs + 12;
        if (format == "AM" && hrs == 12) hrs = hrs - 12;
        var hours = hrs.toString();
        var minutes = mnts.toString();
        if (hrs < 10) hours = "0" + hours;
        if (mnts < 10) minutes = "0" + minutes;
        if (duedate != "" && remainderdate != "") {
            if (duedate == remainderdate) {

                if (starttime < hours) {
                    alert("Remainder time must be less than start time");
                    $("#ddlReminderTime").focus();
                    return Isvalid = false;
                }
            }
        }
        else {
            return Isvalid = true;
        }
        return Isvalid;
    }
    $("#btnSave").click(function (e) {

        Isvalid = true;
        return Validate(this.form);


    });
    function show_NewOpporPopUp() {


        $.ajax({
            url: "_GetAllOpportunitiesList",
            type: "GET",
            async: false,
            success: function (data) {


                //alert(data);
                if (data != null) {

                    $('#tblOppList').empty();
                    $('#tblOppList').html(data);
                    //$('#tblCompanyList').empty().append(data);
                }
            },
            error: function () {
            }
        });
        $('#myModalOpp').modal("show");
    }

    $("#ddlReminderTime").prop("disabled", true);
    $("#ddlStartTime").prop("disabled", true);


    function show_OwnerPopUp() {
        $.ajax({

            url: "../ManageCompany/GetallOwners",
            type: "GET",
            async: false,
            success: function (data) {

                if (data != null) {

                    $('#tblUserList').empty();
                    $('#tblUserList').empty().append(data);

                }
            },
            error: function () {

            }
        });
        $('#loading').css('display', 'none');
        $('#myUserModal').modal("show");
    }


    function show_UsersPopUp() {
        $.ajax({

            url: "../Leads/GetallUsers",
            type: "GET",
            async: false,
            success: function (data) {

                if (data != null) {

                    $('#tblUserList').empty();
                    $('#tblUserList').empty().append(data);

                }
            },
            error: function () {

            }
        });
        $('#loading').css('display', 'none');
        $('#myUserModal').modal("show");
    }
</script>


<div class="modal fade" id="myUserModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Users List</h4>
            </div>
            <div class="modal-body">

                <div class="row">
                    <div style="text-align:left;font-size:12px;padding:5px">Note : Click User Name To Select Record.</div>
                    <div class="col-sm-12">

                        <div class="table-primary table-striped" id="tblUserList">

                        </div>

                    </div>

                </div>
            </div>
        </div>
    </div>
</div>