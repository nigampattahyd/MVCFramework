//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRMHub.EntityFramework
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DevEntities : DbContext
    {
        public DevEntities()
            : base("name=DevEntities")
        {
        }
        public DevEntities(string Connectionstring)
            : base("name=DevEntities")
        {
        }

    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Custom_DbError> Custom_DbError { get; set; }
        public virtual DbSet<role> roles { get; set; }
        public virtual DbSet<tbl_crm_industry> tbl_crm_industry { get; set; }
        public virtual DbSet<tbl_Menus> tbl_Menus { get; set; }
        public virtual DbSet<usState> usStates { get; set; }
        public virtual DbSet<activityLog> activityLogs { get; set; }
        public virtual DbSet<Custom_DrpChkValues> Custom_DrpChkValues { get; set; }
        public virtual DbSet<Custom_Manage_Master> Custom_Manage_Master { get; set; }
        public virtual DbSet<activity_types> activity_types { get; set; }
        public virtual DbSet<tbl_ShowAllZIPCodes> tbl_ShowAllZIPCodes { get; set; }
        public virtual DbSet<tbl_ZIPCodes> tbl_ZIPCodes { get; set; }
        public virtual DbSet<Branch> Branches { get; set; }
        public virtual DbSet<tbl_AssociateList> tbl_AssociateList { get; set; }
        public virtual DbSet<user> users { get; set; }
        public virtual DbSet<tbl_ProjectDetails> tbl_ProjectDetails { get; set; }
        public virtual DbSet<tbl_ContactType> tbl_ContactType { get; set; }
        public virtual DbSet<tbl_Items> tbl_Items { get; set; }
        public virtual DbSet<tbl_Itemtype> tbl_Itemtype { get; set; }
        public virtual DbSet<tbl_Invoice> tbl_Invoice { get; set; }
        public virtual DbSet<tbl_EstimateInvoice> tbl_EstimateInvoice { get; set; }
        public virtual DbSet<tbl_EstimateInvoiceItem> tbl_EstimateInvoiceItem { get; set; }
        public virtual DbSet<tbl_InvoiceItem> tbl_InvoiceItem { get; set; }
        public virtual DbSet<tbl_Payments> tbl_Payments { get; set; }
        public virtual DbSet<Custom_Value_Master> Custom_Value_Master { get; set; }
        public virtual DbSet<tbl_RoleMenus> tbl_RoleMenus { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<SMSProviderList> SMSProviderLists { get; set; }
        public virtual DbSet<Error_Log> Error_Log { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<Priority> Priorities { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<UserAccessModule> UserAccessModules { get; set; }
        public virtual DbSet<UserAccessSetting> UserAccessSettings { get; set; }
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<VMSStatu> VMSStatus { get; set; }
        public virtual DbSet<MentorType> MentorTypes { get; set; }
        public virtual DbSet<tbl1> tbl1 { get; set; }
        public virtual DbSet<tbl2> tbl2 { get; set; }
        public virtual DbSet<ModuleType> ModuleType { get; set; }
        public virtual DbSet<Activity> Activity { get; set; }
        public virtual DbSet<CalendarEventRequest> CalendarEventRequests { get; set; }
        public virtual DbSet<EventDetail> EventDetails { get; set; }
        public virtual DbSet<MentorAcceptedDateTime> MentorAcceptedDateTimes { get; set; }
        public virtual DbSet<Venture> Ventures { get; set; }
        public virtual DbSet<AdvertisementSource> AdvertisementSources { get; set; }
        public virtual DbSet<CurrentStatu> CurrentStatus { get; set; }
        public virtual DbSet<VMSHelp> VMSHelps { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<VentureDetail> VentureDetails { get; set; }
        public virtual DbSet<Mentor> Mentors { get; set; }
        public virtual DbSet<MentorQuestionary> MentorQuestionaries { get; set; }
        public virtual DbSet<MentorDetail> MentorDetails { get; set; }
    
        [DbFunction("DevEntities", "fn_Split")]
        public virtual IQueryable<fn_Split_Result> fn_Split(string text, string delimiter)
        {
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_Split_Result>("[DevEntities].[fn_Split](@text, @delimiter)", textParameter, delimiterParameter);
        }
    
        [DbFunction("DevEntities", "Function_SplitValues")]
        public virtual IQueryable<Function_SplitValues_Result> Function_SplitValues(string psCSString, string splitSymbol)
        {
            var psCSStringParameter = psCSString != null ?
                new ObjectParameter("psCSString", psCSString) :
                new ObjectParameter("psCSString", typeof(string));
    
            var splitSymbolParameter = splitSymbol != null ?
                new ObjectParameter("SplitSymbol", splitSymbol) :
                new ObjectParameter("SplitSymbol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Function_SplitValues_Result>("[DevEntities].[Function_SplitValues](@psCSString, @SplitSymbol)", psCSStringParameter, splitSymbolParameter);
        }
    
        [DbFunction("DevEntities", "RadiusFunc")]
        public virtual IQueryable<RadiusFunc_Result> RadiusFunc(string zipCode, Nullable<decimal> miles)
        {
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var milesParameter = miles.HasValue ?
                new ObjectParameter("Miles", miles) :
                new ObjectParameter("Miles", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<RadiusFunc_Result>("[DevEntities].[RadiusFunc](@ZipCode, @Miles)", zipCodeParameter, milesParameter);
        }
    
        [DbFunction("DevEntities", "RadiusZip")]
        public virtual IQueryable<RadiusZip_Result> RadiusZip(string zipCode, Nullable<decimal> miles)
        {
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var milesParameter = miles.HasValue ?
                new ObjectParameter("Miles", miles) :
                new ObjectParameter("Miles", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<RadiusZip_Result>("[DevEntities].[RadiusZip](@ZipCode, @Miles)", zipCodeParameter, milesParameter);
        }
    
        [DbFunction("DevEntities", "Split")]
        public virtual IQueryable<Split_Result> Split(string rowData, string splitOn)
        {
            var rowDataParameter = rowData != null ?
                new ObjectParameter("RowData", rowData) :
                new ObjectParameter("RowData", typeof(string));
    
            var splitOnParameter = splitOn != null ?
                new ObjectParameter("SplitOn", splitOn) :
                new ObjectParameter("SplitOn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[DevEntities].[Split](@RowData, @SplitOn)", rowDataParameter, splitOnParameter);
        }
    
        [DbFunction("DevEntities", "test")]
        public virtual IQueryable<test_Result> test()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<test_Result>("[DevEntities].[test]()");
        }
    
        public virtual int CRM_addUpdateCompanySetup(string name, string adminEmail, string logoFileName, string modifiedBy, string uRL, string twitterId, string twitterPWD, string facebookId, string facebookPWD, string linkedInId, string linkedInPWD, string logoImage, string companyURL, string joinNowLogo, string from, Nullable<int> associateBranch, string position, string homeContent, string timeZone, string calculatePTOOn)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var adminEmailParameter = adminEmail != null ?
                new ObjectParameter("adminEmail", adminEmail) :
                new ObjectParameter("adminEmail", typeof(string));
    
            var logoFileNameParameter = logoFileName != null ?
                new ObjectParameter("logoFileName", logoFileName) :
                new ObjectParameter("logoFileName", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("modifiedBy", modifiedBy) :
                new ObjectParameter("modifiedBy", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var twitterIdParameter = twitterId != null ?
                new ObjectParameter("twitterId", twitterId) :
                new ObjectParameter("twitterId", typeof(string));
    
            var twitterPWDParameter = twitterPWD != null ?
                new ObjectParameter("twitterPWD", twitterPWD) :
                new ObjectParameter("twitterPWD", typeof(string));
    
            var facebookIdParameter = facebookId != null ?
                new ObjectParameter("facebookId", facebookId) :
                new ObjectParameter("facebookId", typeof(string));
    
            var facebookPWDParameter = facebookPWD != null ?
                new ObjectParameter("facebookPWD", facebookPWD) :
                new ObjectParameter("facebookPWD", typeof(string));
    
            var linkedInIdParameter = linkedInId != null ?
                new ObjectParameter("linkedInId", linkedInId) :
                new ObjectParameter("linkedInId", typeof(string));
    
            var linkedInPWDParameter = linkedInPWD != null ?
                new ObjectParameter("linkedInPWD", linkedInPWD) :
                new ObjectParameter("linkedInPWD", typeof(string));
    
            var logoImageParameter = logoImage != null ?
                new ObjectParameter("logoImage", logoImage) :
                new ObjectParameter("logoImage", typeof(string));
    
            var companyURLParameter = companyURL != null ?
                new ObjectParameter("CompanyURL", companyURL) :
                new ObjectParameter("CompanyURL", typeof(string));
    
            var joinNowLogoParameter = joinNowLogo != null ?
                new ObjectParameter("JoinNowLogo", joinNowLogo) :
                new ObjectParameter("JoinNowLogo", typeof(string));
    
            var fromParameter = from != null ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(string));
    
            var associateBranchParameter = associateBranch.HasValue ?
                new ObjectParameter("AssociateBranch", associateBranch) :
                new ObjectParameter("AssociateBranch", typeof(int));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var homeContentParameter = homeContent != null ?
                new ObjectParameter("HomeContent", homeContent) :
                new ObjectParameter("HomeContent", typeof(string));
    
            var timeZoneParameter = timeZone != null ?
                new ObjectParameter("TimeZone", timeZone) :
                new ObjectParameter("TimeZone", typeof(string));
    
            var calculatePTOOnParameter = calculatePTOOn != null ?
                new ObjectParameter("CalculatePTOOn", calculatePTOOn) :
                new ObjectParameter("CalculatePTOOn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_addUpdateCompanySetup", nameParameter, adminEmailParameter, logoFileNameParameter, modifiedByParameter, uRLParameter, twitterIdParameter, twitterPWDParameter, facebookIdParameter, facebookPWDParameter, linkedInIdParameter, linkedInPWDParameter, logoImageParameter, companyURLParameter, joinNowLogoParameter, fromParameter, associateBranchParameter, positionParameter, homeContentParameter, timeZoneParameter, calculatePTOOnParameter);
        }
    
        public virtual int CRM_checkUsers(string loginId, ObjectParameter isExists)
        {
            var loginIdParameter = loginId != null ?
                new ObjectParameter("loginId", loginId) :
                new ObjectParameter("loginId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_checkUsers", loginIdParameter, isExists);
        }
    
        public virtual int CRM_Custom_Manage_Dynamic_Fields(Nullable<long> cutomFieldId, Nullable<int> isActive, Nullable<int> flag)
        {
            var cutomFieldIdParameter = cutomFieldId.HasValue ?
                new ObjectParameter("CutomFieldId", cutomFieldId) :
                new ObjectParameter("CutomFieldId", typeof(long));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(int));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_Custom_Manage_Dynamic_Fields", cutomFieldIdParameter, isActiveParameter, flagParameter);
        }
    
        public virtual int CRM_deleteBranchByBranchId(Nullable<int> branchId)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_deleteBranchByBranchId", branchIdParameter);
        }
    
        public virtual int CRM_DeleteSMSProvider(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_DeleteSMSProvider", iDParameter);
        }
    
        public virtual int CRM_DeleteTask(Nullable<decimal> historyId)
        {
            var historyIdParameter = historyId.HasValue ?
                new ObjectParameter("historyId", historyId) :
                new ObjectParameter("historyId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_DeleteTask", historyIdParameter);
        }
    
        public virtual ObjectResult<string> CRM_EmailExistsOrNot(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CRM_EmailExistsOrNot", emailParameter);
        }
    
        public virtual ObjectResult<CRM_GET_ACTIVTY_TYPE_Result> CRM_GET_ACTIVTY_TYPE(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GET_ACTIVTY_TYPE_Result>("CRM_GET_ACTIVTY_TYPE", typeParameter);
        }
    
        public virtual ObjectResult<string> CRM_GET_ContactIdfrmAcntId(Nullable<int> accountId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CRM_GET_ContactIdfrmAcntId", accountIdParameter);
        }
    
        public virtual ObjectResult<CRM_GET_SystemSetup_Result> CRM_GET_SystemSetup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GET_SystemSetup_Result>("CRM_GET_SystemSetup");
        }
    
        public virtual ObjectResult<CRM_GetActivityByType_Result> CRM_GetActivityByType(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetActivityByType_Result>("CRM_GetActivityByType", typeParameter);
        }
    
        public virtual ObjectResult<CRM_getAdmin_Result> CRM_getAdmin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_getAdmin_Result>("CRM_getAdmin");
        }
    
        public virtual ObjectResult<CRM_GetAllBranchList_Result> CRM_GetAllBranchList(string name, string email, string city, string phone, string keyword, string state, string zip, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("zip", zip) :
                new ObjectParameter("zip", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetAllBranchList_Result>("CRM_GetAllBranchList", nameParameter, emailParameter, cityParameter, phoneParameter, keywordParameter, stateParameter, zipParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<CRM_GetCustomFields_Result> CRM_GetCustomFields(Nullable<long> userID, string module, Nullable<int> flag)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetCustomFields_Result>("CRM_GetCustomFields", userIDParameter, moduleParameter, flagParameter);
        }
    
        public virtual ObjectResult<CRM_GetLeadActivityType_Result> CRM_GetLeadActivityType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetLeadActivityType_Result>("CRM_GetLeadActivityType");
        }
    
        public virtual ObjectResult<crm_GetMenubyMenuId_Result> crm_GetMenubyMenuId(Nullable<int> menuID)
        {
            var menuIDParameter = menuID.HasValue ?
                new ObjectParameter("MenuID", menuID) :
                new ObjectParameter("MenuID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crm_GetMenubyMenuId_Result>("crm_GetMenubyMenuId", menuIDParameter);
        }
    
        public virtual ObjectResult<CRM_GetMenusbyMenuId_Result> CRM_GetMenusbyMenuId(Nullable<int> menuID)
        {
            var menuIDParameter = menuID.HasValue ?
                new ObjectParameter("MenuID", menuID) :
                new ObjectParameter("MenuID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetMenusbyMenuId_Result>("CRM_GetMenusbyMenuId", menuIDParameter);
        }
    
        public virtual ObjectResult<CRM_getSalesRepresentative_Result> CRM_getSalesRepresentative(string loginID, string roleID)
        {
            var loginIDParameter = loginID != null ?
                new ObjectParameter("loginID", loginID) :
                new ObjectParameter("loginID", typeof(string));
    
            var roleIDParameter = roleID != null ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_getSalesRepresentative_Result>("CRM_getSalesRepresentative", loginIDParameter, roleIDParameter);
        }
    
        public virtual ObjectResult<CRM_GetSMSProvider_Result> CRM_GetSMSProvider()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetSMSProvider_Result>("CRM_GetSMSProvider");
        }
    
        public virtual ObjectResult<CRM_GetSMSProviderbyID_Result> CRM_GetSMSProviderbyID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetSMSProviderbyID_Result>("CRM_GetSMSProviderbyID", iDParameter);
        }
    
        public virtual ObjectResult<CRM_GetUserBranchList_Result> CRM_GetUserBranchList(string loginID, string roleId)
        {
            var loginIDParameter = loginID != null ?
                new ObjectParameter("loginID", loginID) :
                new ObjectParameter("loginID", typeof(string));
    
            var roleIdParameter = roleId != null ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetUserBranchList_Result>("CRM_GetUserBranchList", loginIDParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<CRM_GetUsersListByRoleId_Result> CRM_GetUsersListByRoleId(string loginId, string roleId)
        {
            var loginIdParameter = loginId != null ?
                new ObjectParameter("loginId", loginId) :
                new ObjectParameter("loginId", typeof(string));
    
            var roleIdParameter = roleId != null ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetUsersListByRoleId_Result>("CRM_GetUsersListByRoleId", loginIdParameter, roleIdParameter);
        }
    
        public virtual int CRM_InsertDashBoardDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_InsertDashBoardDetails");
        }
    
        public virtual int CRM_InsertErrorLog(string errorMessage, string errorPage, Nullable<System.DateTime> createdDate)
        {
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            var errorPageParameter = errorPage != null ?
                new ObjectParameter("ErrorPage", errorPage) :
                new ObjectParameter("ErrorPage", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_InsertErrorLog", errorMessageParameter, errorPageParameter, createdDateParameter);
        }
    
        public virtual int CRM_InsertMenu(string menuDescription, string navigateURL, Nullable<int> parentMenuId)
        {
            var menuDescriptionParameter = menuDescription != null ?
                new ObjectParameter("MenuDescription", menuDescription) :
                new ObjectParameter("MenuDescription", typeof(string));
    
            var navigateURLParameter = navigateURL != null ?
                new ObjectParameter("NavigateURL", navigateURL) :
                new ObjectParameter("NavigateURL", typeof(string));
    
            var parentMenuIdParameter = parentMenuId.HasValue ?
                new ObjectParameter("ParentMenuId", parentMenuId) :
                new ObjectParameter("ParentMenuId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_InsertMenu", menuDescriptionParameter, navigateURLParameter, parentMenuIdParameter);
        }
    
        public virtual int CRM_InsertSMSProvider(string providerName, string providerURL)
        {
            var providerNameParameter = providerName != null ?
                new ObjectParameter("providerName", providerName) :
                new ObjectParameter("providerName", typeof(string));
    
            var providerURLParameter = providerURL != null ?
                new ObjectParameter("providerURL", providerURL) :
                new ObjectParameter("providerURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_InsertSMSProvider", providerNameParameter, providerURLParameter);
        }
    
        public virtual ObjectResult<CRM_IsCompanyExists_Result> CRM_IsCompanyExists(string companyname)
        {
            var companynameParameter = companyname != null ?
                new ObjectParameter("companyname", companyname) :
                new ObjectParameter("companyname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_IsCompanyExists_Result>("CRM_IsCompanyExists", companynameParameter);
        }
    
        public virtual ObjectResult<CRM_LoadCustomFields_Result> CRM_LoadCustomFields(string filterExpression, string module, Nullable<long> logInId, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var filterExpressionParameter = filterExpression != null ?
                new ObjectParameter("FilterExpression", filterExpression) :
                new ObjectParameter("FilterExpression", typeof(string));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var logInIdParameter = logInId.HasValue ?
                new ObjectParameter("logInId", logInId) :
                new ObjectParameter("logInId", typeof(long));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_LoadCustomFields_Result>("CRM_LoadCustomFields", filterExpressionParameter, moduleParameter, logInIdParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<CRM_LoadSMSProvidersList_Result> CRM_LoadSMSProvidersList(Nullable<long> logInId, Nullable<int> roleId, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var logInIdParameter = logInId.HasValue ?
                new ObjectParameter("logInId", logInId) :
                new ObjectParameter("logInId", typeof(long));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_LoadSMSProvidersList_Result>("CRM_LoadSMSProvidersList", logInIdParameter, roleIdParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<Nullable<int>> CRM_UpdateAdminSMTPDetail(Nullable<int> userId, Nullable<bool> isSMS, string smsEmail, string smsPwd, string smsSMTP, string smsPort)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var isSMSParameter = isSMS.HasValue ?
                new ObjectParameter("isSMS", isSMS) :
                new ObjectParameter("isSMS", typeof(bool));
    
            var smsEmailParameter = smsEmail != null ?
                new ObjectParameter("smsEmail", smsEmail) :
                new ObjectParameter("smsEmail", typeof(string));
    
            var smsPwdParameter = smsPwd != null ?
                new ObjectParameter("smsPwd", smsPwd) :
                new ObjectParameter("smsPwd", typeof(string));
    
            var smsSMTPParameter = smsSMTP != null ?
                new ObjectParameter("smsSMTP", smsSMTP) :
                new ObjectParameter("smsSMTP", typeof(string));
    
            var smsPortParameter = smsPort != null ?
                new ObjectParameter("smsPort", smsPort) :
                new ObjectParameter("smsPort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CRM_UpdateAdminSMTPDetail", userIdParameter, isSMSParameter, smsEmailParameter, smsPwdParameter, smsSMTPParameter, smsPortParameter);
        }
    
        public virtual int CRM_UpdateContactsPersonal(Nullable<int> contactId, string initial, string fname, string phone, string fax, string email, string title, string source, string mobile, string accountId, string homephone, string otherphone, string asstphone, string assistant, string emailOptOut, string description, string reportTo, Nullable<System.DateTime> birthdate, string department, string mailingstreet, string otherstreet, string mailingcity, string othercity, string mailingstate, string otherstate, string mailingzip, string otherzip, string mailingcountry, string othercountry, string suspect_prospect, string salesMgr1, string salesMgr2, string contact_office, string mailingAdd, string billingAdd, Nullable<bool> isCorporate, Nullable<bool> isAllowSMS, string providerId, string contact_type, string facebookUserName, string twitterUserName, string linkedInUserName, string googlePlusUserName, string pInterestUserName, string skypeUsername, string loginId, string password, string nickName)
        {
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("ContactId", contactId) :
                new ObjectParameter("ContactId", typeof(int));
    
            var initialParameter = initial != null ?
                new ObjectParameter("Initial", initial) :
                new ObjectParameter("Initial", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var accountIdParameter = accountId != null ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(string));
    
            var homephoneParameter = homephone != null ?
                new ObjectParameter("homephone", homephone) :
                new ObjectParameter("homephone", typeof(string));
    
            var otherphoneParameter = otherphone != null ?
                new ObjectParameter("otherphone", otherphone) :
                new ObjectParameter("otherphone", typeof(string));
    
            var asstphoneParameter = asstphone != null ?
                new ObjectParameter("Asstphone", asstphone) :
                new ObjectParameter("Asstphone", typeof(string));
    
            var assistantParameter = assistant != null ?
                new ObjectParameter("assistant", assistant) :
                new ObjectParameter("assistant", typeof(string));
    
            var emailOptOutParameter = emailOptOut != null ?
                new ObjectParameter("EmailOptOut", emailOptOut) :
                new ObjectParameter("EmailOptOut", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var reportToParameter = reportTo != null ?
                new ObjectParameter("ReportTo", reportTo) :
                new ObjectParameter("ReportTo", typeof(string));
    
            var birthdateParameter = birthdate.HasValue ?
                new ObjectParameter("birthdate", birthdate) :
                new ObjectParameter("birthdate", typeof(System.DateTime));
    
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            var mailingstreetParameter = mailingstreet != null ?
                new ObjectParameter("mailingstreet", mailingstreet) :
                new ObjectParameter("mailingstreet", typeof(string));
    
            var otherstreetParameter = otherstreet != null ?
                new ObjectParameter("otherstreet", otherstreet) :
                new ObjectParameter("otherstreet", typeof(string));
    
            var mailingcityParameter = mailingcity != null ?
                new ObjectParameter("mailingcity", mailingcity) :
                new ObjectParameter("mailingcity", typeof(string));
    
            var othercityParameter = othercity != null ?
                new ObjectParameter("othercity", othercity) :
                new ObjectParameter("othercity", typeof(string));
    
            var mailingstateParameter = mailingstate != null ?
                new ObjectParameter("mailingstate", mailingstate) :
                new ObjectParameter("mailingstate", typeof(string));
    
            var otherstateParameter = otherstate != null ?
                new ObjectParameter("otherstate", otherstate) :
                new ObjectParameter("otherstate", typeof(string));
    
            var mailingzipParameter = mailingzip != null ?
                new ObjectParameter("mailingzip", mailingzip) :
                new ObjectParameter("mailingzip", typeof(string));
    
            var otherzipParameter = otherzip != null ?
                new ObjectParameter("otherzip", otherzip) :
                new ObjectParameter("otherzip", typeof(string));
    
            var mailingcountryParameter = mailingcountry != null ?
                new ObjectParameter("mailingcountry", mailingcountry) :
                new ObjectParameter("mailingcountry", typeof(string));
    
            var othercountryParameter = othercountry != null ?
                new ObjectParameter("othercountry", othercountry) :
                new ObjectParameter("othercountry", typeof(string));
    
            var suspect_prospectParameter = suspect_prospect != null ?
                new ObjectParameter("suspect_prospect", suspect_prospect) :
                new ObjectParameter("suspect_prospect", typeof(string));
    
            var salesMgr1Parameter = salesMgr1 != null ?
                new ObjectParameter("salesMgr1", salesMgr1) :
                new ObjectParameter("salesMgr1", typeof(string));
    
            var salesMgr2Parameter = salesMgr2 != null ?
                new ObjectParameter("salesMgr2", salesMgr2) :
                new ObjectParameter("salesMgr2", typeof(string));
    
            var contact_officeParameter = contact_office != null ?
                new ObjectParameter("contact_office", contact_office) :
                new ObjectParameter("contact_office", typeof(string));
    
            var mailingAddParameter = mailingAdd != null ?
                new ObjectParameter("mailingAdd", mailingAdd) :
                new ObjectParameter("mailingAdd", typeof(string));
    
            var billingAddParameter = billingAdd != null ?
                new ObjectParameter("billingAdd", billingAdd) :
                new ObjectParameter("billingAdd", typeof(string));
    
            var isCorporateParameter = isCorporate.HasValue ?
                new ObjectParameter("isCorporate", isCorporate) :
                new ObjectParameter("isCorporate", typeof(bool));
    
            var isAllowSMSParameter = isAllowSMS.HasValue ?
                new ObjectParameter("isAllowSMS", isAllowSMS) :
                new ObjectParameter("isAllowSMS", typeof(bool));
    
            var providerIdParameter = providerId != null ?
                new ObjectParameter("ProviderId", providerId) :
                new ObjectParameter("ProviderId", typeof(string));
    
            var contact_typeParameter = contact_type != null ?
                new ObjectParameter("contact_type", contact_type) :
                new ObjectParameter("contact_type", typeof(string));
    
            var facebookUserNameParameter = facebookUserName != null ?
                new ObjectParameter("FacebookUserName", facebookUserName) :
                new ObjectParameter("FacebookUserName", typeof(string));
    
            var twitterUserNameParameter = twitterUserName != null ?
                new ObjectParameter("TwitterUserName", twitterUserName) :
                new ObjectParameter("TwitterUserName", typeof(string));
    
            var linkedInUserNameParameter = linkedInUserName != null ?
                new ObjectParameter("LinkedInUserName", linkedInUserName) :
                new ObjectParameter("LinkedInUserName", typeof(string));
    
            var googlePlusUserNameParameter = googlePlusUserName != null ?
                new ObjectParameter("GooglePlusUserName", googlePlusUserName) :
                new ObjectParameter("GooglePlusUserName", typeof(string));
    
            var pInterestUserNameParameter = pInterestUserName != null ?
                new ObjectParameter("PInterestUserName", pInterestUserName) :
                new ObjectParameter("PInterestUserName", typeof(string));
    
            var skypeUsernameParameter = skypeUsername != null ?
                new ObjectParameter("SkypeUsername", skypeUsername) :
                new ObjectParameter("SkypeUsername", typeof(string));
    
            var loginIdParameter = loginId != null ?
                new ObjectParameter("loginId", loginId) :
                new ObjectParameter("loginId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var nickNameParameter = nickName != null ?
                new ObjectParameter("NickName", nickName) :
                new ObjectParameter("NickName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_UpdateContactsPersonal", contactIdParameter, initialParameter, fnameParameter, phoneParameter, faxParameter, emailParameter, titleParameter, sourceParameter, mobileParameter, accountIdParameter, homephoneParameter, otherphoneParameter, asstphoneParameter, assistantParameter, emailOptOutParameter, descriptionParameter, reportToParameter, birthdateParameter, departmentParameter, mailingstreetParameter, otherstreetParameter, mailingcityParameter, othercityParameter, mailingstateParameter, otherstateParameter, mailingzipParameter, otherzipParameter, mailingcountryParameter, othercountryParameter, suspect_prospectParameter, salesMgr1Parameter, salesMgr2Parameter, contact_officeParameter, mailingAddParameter, billingAddParameter, isCorporateParameter, isAllowSMSParameter, providerIdParameter, contact_typeParameter, facebookUserNameParameter, twitterUserNameParameter, linkedInUserNameParameter, googlePlusUserNameParameter, pInterestUserNameParameter, skypeUsernameParameter, loginIdParameter, passwordParameter, nickNameParameter);
        }
    
        public virtual int CRM_UpdatedashBoard(Nullable<int> moduleId, string moduleName, string moduleHeading, string moduleHover, Nullable<int> isShow)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var moduleNameParameter = moduleName != null ?
                new ObjectParameter("ModuleName", moduleName) :
                new ObjectParameter("ModuleName", typeof(string));
    
            var moduleHeadingParameter = moduleHeading != null ?
                new ObjectParameter("ModuleHeading", moduleHeading) :
                new ObjectParameter("ModuleHeading", typeof(string));
    
            var moduleHoverParameter = moduleHover != null ?
                new ObjectParameter("ModuleHover", moduleHover) :
                new ObjectParameter("ModuleHover", typeof(string));
    
            var isShowParameter = isShow.HasValue ?
                new ObjectParameter("IsShow", isShow) :
                new ObjectParameter("IsShow", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_UpdatedashBoard", moduleIdParameter, moduleNameParameter, moduleHeadingParameter, moduleHoverParameter, isShowParameter);
        }
    
        public virtual int CRM_UpdateSMSProvider(string iD, string providerName, string url)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var providerNameParameter = providerName != null ?
                new ObjectParameter("ProviderName", providerName) :
                new ObjectParameter("ProviderName", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_UpdateSMSProvider", iDParameter, providerNameParameter, urlParameter);
        }
    
        public virtual ObjectResult<CRM_Usp_DashBoard_Manage_DashBoardModules_Result> CRM_Usp_DashBoard_Manage_DashBoardModules(Nullable<int> moduleId, string moduleName, string moduleHeading, string moduleHover, Nullable<int> isShow, string preferencesOrder, Nullable<decimal> userId, Nullable<int> flag)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var moduleNameParameter = moduleName != null ?
                new ObjectParameter("ModuleName", moduleName) :
                new ObjectParameter("ModuleName", typeof(string));
    
            var moduleHeadingParameter = moduleHeading != null ?
                new ObjectParameter("ModuleHeading", moduleHeading) :
                new ObjectParameter("ModuleHeading", typeof(string));
    
            var moduleHoverParameter = moduleHover != null ?
                new ObjectParameter("ModuleHover", moduleHover) :
                new ObjectParameter("ModuleHover", typeof(string));
    
            var isShowParameter = isShow.HasValue ?
                new ObjectParameter("IsShow", isShow) :
                new ObjectParameter("IsShow", typeof(int));
    
            var preferencesOrderParameter = preferencesOrder != null ?
                new ObjectParameter("PreferencesOrder", preferencesOrder) :
                new ObjectParameter("PreferencesOrder", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(decimal));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_Usp_DashBoard_Manage_DashBoardModules_Result>("CRM_Usp_DashBoard_Manage_DashBoardModules", moduleIdParameter, moduleNameParameter, moduleHeadingParameter, moduleHoverParameter, isShowParameter, preferencesOrderParameter, userIdParameter, flagParameter);
        }
    
        public virtual ObjectResult<CRM_USP_GET_ACTIVTY_TYPE_Result> CRM_USP_GET_ACTIVTY_TYPE(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_USP_GET_ACTIVTY_TYPE_Result>("CRM_USP_GET_ACTIVTY_TYPE", typeParameter);
        }
    
        public virtual ObjectResult<getCRMIndustry_Result> getCRMIndustry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCRMIndustry_Result>("getCRMIndustry");
        }
    
        public virtual ObjectResult<getParentMenu_Result> getParentMenu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getParentMenu_Result>("getParentMenu");
        }
    
        public virtual int procCreateAdmin(string firstName, string middleInitial, string lastName, string addressLine1, string addressLine2, string city, string stateCode, string postalCode, string mobile, string phoneExt, string fax, string email, string comment, Nullable<decimal> level, string branch, string cellno, Nullable<bool> isCorporate, Nullable<bool> isSMS, string smsEmail, string smsPwd, string smsSMTP, string smsPort, string loginId, string password)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleInitialParameter = middleInitial != null ?
                new ObjectParameter("middleInitial", middleInitial) :
                new ObjectParameter("middleInitial", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var addressLine1Parameter = addressLine1 != null ?
                new ObjectParameter("addressLine1", addressLine1) :
                new ObjectParameter("addressLine1", typeof(string));
    
            var addressLine2Parameter = addressLine2 != null ?
                new ObjectParameter("addressLine2", addressLine2) :
                new ObjectParameter("addressLine2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("postalCode", postalCode) :
                new ObjectParameter("postalCode", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var phoneExtParameter = phoneExt != null ?
                new ObjectParameter("phoneExt", phoneExt) :
                new ObjectParameter("phoneExt", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(decimal));
    
            var branchParameter = branch != null ?
                new ObjectParameter("branch", branch) :
                new ObjectParameter("branch", typeof(string));
    
            var cellnoParameter = cellno != null ?
                new ObjectParameter("cellno", cellno) :
                new ObjectParameter("cellno", typeof(string));
    
            var isCorporateParameter = isCorporate.HasValue ?
                new ObjectParameter("isCorporate", isCorporate) :
                new ObjectParameter("isCorporate", typeof(bool));
    
            var isSMSParameter = isSMS.HasValue ?
                new ObjectParameter("isSMS", isSMS) :
                new ObjectParameter("isSMS", typeof(bool));
    
            var smsEmailParameter = smsEmail != null ?
                new ObjectParameter("smsEmail", smsEmail) :
                new ObjectParameter("smsEmail", typeof(string));
    
            var smsPwdParameter = smsPwd != null ?
                new ObjectParameter("smsPwd", smsPwd) :
                new ObjectParameter("smsPwd", typeof(string));
    
            var smsSMTPParameter = smsSMTP != null ?
                new ObjectParameter("smsSMTP", smsSMTP) :
                new ObjectParameter("smsSMTP", typeof(string));
    
            var smsPortParameter = smsPort != null ?
                new ObjectParameter("smsPort", smsPort) :
                new ObjectParameter("smsPort", typeof(string));
    
            var loginIdParameter = loginId != null ?
                new ObjectParameter("loginId", loginId) :
                new ObjectParameter("loginId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procCreateAdmin", firstNameParameter, middleInitialParameter, lastNameParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateCodeParameter, postalCodeParameter, mobileParameter, phoneExtParameter, faxParameter, emailParameter, commentParameter, levelParameter, branchParameter, cellnoParameter, isCorporateParameter, isSMSParameter, smsEmailParameter, smsPwdParameter, smsSMTPParameter, smsPortParameter, loginIdParameter, passwordParameter);
        }
    
        public virtual int SearchAdminList(string loginId, string roleId)
        {
            var loginIdParameter = loginId != null ?
                new ObjectParameter("loginId", loginId) :
                new ObjectParameter("loginId", typeof(string));
    
            var roleIdParameter = roleId != null ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchAdminList", loginIdParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<uSp_BindData_Result> uSp_BindData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uSp_BindData_Result>("uSp_BindData");
        }
    
        public virtual ObjectResult<USP_GET_ACTIVTY_TYPE_Result> USP_GET_ACTIVTY_TYPE(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_ACTIVTY_TYPE_Result>("USP_GET_ACTIVTY_TYPE", typeParameter);
        }
    
        public virtual int USP_GetUsersByRoleInOfficeLevel(string roleId, string logInId, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var roleIdParameter = roleId != null ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(string));
    
            var logInIdParameter = logInId != null ?
                new ObjectParameter("logInId", logInId) :
                new ObjectParameter("logInId", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GetUsersByRoleInOfficeLevel", roleIdParameter, logInIdParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<CRM_MenusBinding_Result> CRM_MenusBinding()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_MenusBinding_Result>("CRM_MenusBinding");
        }
    
        public virtual int CRM_DeleteMenu(Nullable<long> menuID)
        {
            var menuIDParameter = menuID.HasValue ?
                new ObjectParameter("MenuID", menuID) :
                new ObjectParameter("MenuID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_DeleteMenu", menuIDParameter);
        }
    
        public virtual int CRM_UpdateMenuByMenuId(Nullable<int> menuID, string menuDescription, string navigateURL)
        {
            var menuIDParameter = menuID.HasValue ?
                new ObjectParameter("MenuID", menuID) :
                new ObjectParameter("MenuID", typeof(int));
    
            var menuDescriptionParameter = menuDescription != null ?
                new ObjectParameter("MenuDescription", menuDescription) :
                new ObjectParameter("MenuDescription", typeof(string));
    
            var navigateURLParameter = navigateURL != null ?
                new ObjectParameter("NavigateURL", navigateURL) :
                new ObjectParameter("NavigateURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_UpdateMenuByMenuId", menuIDParameter, menuDescriptionParameter, navigateURLParameter);
        }
    
        public virtual ObjectResult<CRM_GetAdminDetail_Result> CRM_GetAdminDetail(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetAdminDetail_Result>("CRM_GetAdminDetail", userIdParameter);
        }
    
        public virtual int CRM_DeleteCandidate(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_DeleteCandidate", useridParameter);
        }
    
        public virtual ObjectResult<CRM_GetUsersByRole_Result> CRM_GetUsersByRole(string name, string email, string roleId, string logInId, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var roleIdParameter = roleId != null ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(string));
    
            var logInIdParameter = logInId != null ?
                new ObjectParameter("logInId", logInId) :
                new ObjectParameter("logInId", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetUsersByRole_Result>("CRM_GetUsersByRole", nameParameter, emailParameter, roleIdParameter, logInIdParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<CRM_GetContactActivityType_Result> CRM_GetContactActivityType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetContactActivityType_Result>("CRM_GetContactActivityType");
        }
    
        public virtual ObjectResult<CRM_GETCONTACTMAILS_Result> CRM_GETCONTACTMAILS(string type, string sender, string subject, string body, string loginid, string userid, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var senderParameter = sender != null ?
                new ObjectParameter("sender", sender) :
                new ObjectParameter("sender", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("body", body) :
                new ObjectParameter("body", typeof(string));
    
            var loginidParameter = loginid != null ?
                new ObjectParameter("loginid", loginid) :
                new ObjectParameter("loginid", typeof(string));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GETCONTACTMAILS_Result>("CRM_GETCONTACTMAILS", typeParameter, senderParameter, subjectParameter, bodyParameter, loginidParameter, useridParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<CRM_LeadsColumnChart_Result> CRM_LeadsColumnChart()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_LeadsColumnChart_Result>("CRM_LeadsColumnChart");
        }
    
        public virtual ObjectResult<CRM_OpportunityChart_Result> CRM_OpportunityChart()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_OpportunityChart_Result>("CRM_OpportunityChart");
        }
    
        public virtual ObjectResult<CRM_PieChart_Result> CRM_PieChart()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_PieChart_Result>("CRM_PieChart");
        }
    
        public virtual ObjectResult<Nullable<int>> GetTotalCntContact()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetTotalCntContact");
        }
    
        public virtual ObjectResult<Nullable<int>> GetTotalCntLead()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetTotalCntLead");
        }
    
        public virtual ObjectResult<Nullable<int>> GetTotalCntOpportunity()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetTotalCntOpportunity");
        }
    
        public virtual ObjectResult<Nullable<int>> GetTotalCntSales()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetTotalCntSales");
        }
    
        public virtual int CRM_AddEditCustomFields(Nullable<long> fieldId, Nullable<long> userID, string module, Nullable<int> column_Id, string actualColumnName, string column_Label, string column_Description, string hoverText, string column_Type, string inputDataType, string defaultValue, Nullable<int> maxLength, Nullable<bool> requiredField, Nullable<bool> isActive, Nullable<int> flag)
        {
            var fieldIdParameter = fieldId.HasValue ?
                new ObjectParameter("FieldId", fieldId) :
                new ObjectParameter("FieldId", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var column_IdParameter = column_Id.HasValue ?
                new ObjectParameter("Column_Id", column_Id) :
                new ObjectParameter("Column_Id", typeof(int));
    
            var actualColumnNameParameter = actualColumnName != null ?
                new ObjectParameter("ActualColumnName", actualColumnName) :
                new ObjectParameter("ActualColumnName", typeof(string));
    
            var column_LabelParameter = column_Label != null ?
                new ObjectParameter("Column_Label", column_Label) :
                new ObjectParameter("Column_Label", typeof(string));
    
            var column_DescriptionParameter = column_Description != null ?
                new ObjectParameter("Column_Description", column_Description) :
                new ObjectParameter("Column_Description", typeof(string));
    
            var hoverTextParameter = hoverText != null ?
                new ObjectParameter("HoverText", hoverText) :
                new ObjectParameter("HoverText", typeof(string));
    
            var column_TypeParameter = column_Type != null ?
                new ObjectParameter("Column_Type", column_Type) :
                new ObjectParameter("Column_Type", typeof(string));
    
            var inputDataTypeParameter = inputDataType != null ?
                new ObjectParameter("InputDataType", inputDataType) :
                new ObjectParameter("InputDataType", typeof(string));
    
            var defaultValueParameter = defaultValue != null ?
                new ObjectParameter("DefaultValue", defaultValue) :
                new ObjectParameter("DefaultValue", typeof(string));
    
            var maxLengthParameter = maxLength.HasValue ?
                new ObjectParameter("MaxLength", maxLength) :
                new ObjectParameter("MaxLength", typeof(int));
    
            var requiredFieldParameter = requiredField.HasValue ?
                new ObjectParameter("RequiredField", requiredField) :
                new ObjectParameter("RequiredField", typeof(bool));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_AddEditCustomFields", fieldIdParameter, userIDParameter, moduleParameter, column_IdParameter, actualColumnNameParameter, column_LabelParameter, column_DescriptionParameter, hoverTextParameter, column_TypeParameter, inputDataTypeParameter, defaultValueParameter, maxLengthParameter, requiredFieldParameter, isActiveParameter, flagParameter);
        }
    
        public virtual ObjectResult<CRM_GetMenus_Result> CRM_GetMenus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetMenus_Result>("CRM_GetMenus");
        }
    
        public virtual ObjectResult<CRM_ExportCompaniesDate_Result> CRM_ExportCompaniesDate(string account_office)
        {
            var account_officeParameter = account_office != null ?
                new ObjectParameter("Account_office", account_office) :
                new ObjectParameter("Account_office", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_ExportCompaniesDate_Result>("CRM_ExportCompaniesDate", account_officeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetTotalCntCompanies()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetTotalCntCompanies");
        }
    
        public virtual int CRM_InsertMenuForRole()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_InsertMenuForRole");
        }
    
        public virtual int CRM_GetAccountIdFromCompanyName(string companyName, ObjectParameter outCompanyId)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_GetAccountIdFromCompanyName", companyNameParameter, outCompanyId);
        }
    
        [DbFunction("DevEntities", "func_ConvertCommaSeparatedValues_to_Integers")]
        public virtual IQueryable<func_ConvertCommaSeparatedValues_to_Integers_Result> func_ConvertCommaSeparatedValues_to_Integers(string list)
        {
            var listParameter = list != null ?
                new ObjectParameter("list", list) :
                new ObjectParameter("list", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_ConvertCommaSeparatedValues_to_Integers_Result>("[DevEntities].[func_ConvertCommaSeparatedValues_to_Integers](@list)", listParameter);
        }
    
        public virtual ObjectResult<CRM_IsContactExists_Result> CRM_IsContactExists(string contactname)
        {
            var contactnameParameter = contactname != null ?
                new ObjectParameter("contactname", contactname) :
                new ObjectParameter("contactname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_IsContactExists_Result>("CRM_IsContactExists", contactnameParameter);
        }
    
        public virtual ObjectResult<CRM_Dashboard_ChartStatusCount_Result> CRM_Dashboard_ChartStatusCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_Dashboard_ChartStatusCount_Result>("CRM_Dashboard_ChartStatusCount");
        }
    
        public virtual ObjectResult<CRM_AcivityDashboard_StatusCount_Result> CRM_AcivityDashboard_StatusCount(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_AcivityDashboard_StatusCount_Result>("CRM_AcivityDashboard_StatusCount", fromDateParameter, toDateParameter);
        }
    
        public virtual int CRM_GET_DASHBOARD_ACTIVTESBYIDcopy(string loginId, Nullable<long> roleid, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<long> officeId, Nullable<long> employeeId, string keyword, Nullable<int> startIndex, Nullable<int> pageSize, string sorting)
        {
            var loginIdParameter = loginId != null ?
                new ObjectParameter("loginId", loginId) :
                new ObjectParameter("loginId", typeof(string));
    
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("roleid", roleid) :
                new ObjectParameter("roleid", typeof(long));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            var officeIdParameter = officeId.HasValue ?
                new ObjectParameter("officeId", officeId) :
                new ObjectParameter("officeId", typeof(long));
    
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("employeeId", employeeId) :
                new ObjectParameter("employeeId", typeof(long));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_GET_DASHBOARD_ACTIVTESBYIDcopy", loginIdParameter, roleidParameter, dateFromParameter, dateToParameter, officeIdParameter, employeeIdParameter, keywordParameter, startIndexParameter, pageSizeParameter, sortingParameter);
        }
    
        public virtual ObjectResult<CRM_GetState_Result> CRM_GetState()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetState_Result>("CRM_GetState");
        }
    
        public virtual ObjectResult<CRM_GetStatecode_Result> CRM_GetStatecode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetStatecode_Result>("CRM_GetStatecode");
        }
    
        public virtual ObjectResult<CRM_getUsers_Result> CRM_getUsers(Nullable<int> branchId)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_getUsers_Result>("CRM_getUsers", branchIdParameter);
        }
    
        public virtual ObjectResult<CRM_GetUserBranchbyBranchId_Result> CRM_GetUserBranchbyBranchId(string loginID, string roleID)
        {
            var loginIDParameter = loginID != null ?
                new ObjectParameter("loginID", loginID) :
                new ObjectParameter("loginID", typeof(string));
    
            var roleIDParameter = roleID != null ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetUserBranchbyBranchId_Result>("CRM_GetUserBranchbyBranchId", loginIDParameter, roleIDParameter);
        }
    
        public virtual int CRM_AddEditCustomFieldsNew(Nullable<long> fieldId, Nullable<long> userID, string module, Nullable<int> column_Id, string actualColumnName, string column_Label, string column_Description, string hoverText, string column_Type, string inputDataType, string defaultValue, Nullable<int> maxLength, Nullable<bool> requiredField, Nullable<bool> isActive, Nullable<int> flag, ObjectParameter newFieldId)
        {
            var fieldIdParameter = fieldId.HasValue ?
                new ObjectParameter("FieldId", fieldId) :
                new ObjectParameter("FieldId", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var column_IdParameter = column_Id.HasValue ?
                new ObjectParameter("Column_Id", column_Id) :
                new ObjectParameter("Column_Id", typeof(int));
    
            var actualColumnNameParameter = actualColumnName != null ?
                new ObjectParameter("ActualColumnName", actualColumnName) :
                new ObjectParameter("ActualColumnName", typeof(string));
    
            var column_LabelParameter = column_Label != null ?
                new ObjectParameter("Column_Label", column_Label) :
                new ObjectParameter("Column_Label", typeof(string));
    
            var column_DescriptionParameter = column_Description != null ?
                new ObjectParameter("Column_Description", column_Description) :
                new ObjectParameter("Column_Description", typeof(string));
    
            var hoverTextParameter = hoverText != null ?
                new ObjectParameter("HoverText", hoverText) :
                new ObjectParameter("HoverText", typeof(string));
    
            var column_TypeParameter = column_Type != null ?
                new ObjectParameter("Column_Type", column_Type) :
                new ObjectParameter("Column_Type", typeof(string));
    
            var inputDataTypeParameter = inputDataType != null ?
                new ObjectParameter("InputDataType", inputDataType) :
                new ObjectParameter("InputDataType", typeof(string));
    
            var defaultValueParameter = defaultValue != null ?
                new ObjectParameter("DefaultValue", defaultValue) :
                new ObjectParameter("DefaultValue", typeof(string));
    
            var maxLengthParameter = maxLength.HasValue ?
                new ObjectParameter("MaxLength", maxLength) :
                new ObjectParameter("MaxLength", typeof(int));
    
            var requiredFieldParameter = requiredField.HasValue ?
                new ObjectParameter("RequiredField", requiredField) :
                new ObjectParameter("RequiredField", typeof(bool));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_AddEditCustomFieldsNew", fieldIdParameter, userIDParameter, moduleParameter, column_IdParameter, actualColumnNameParameter, column_LabelParameter, column_DescriptionParameter, hoverTextParameter, column_TypeParameter, inputDataTypeParameter, defaultValueParameter, maxLengthParameter, requiredFieldParameter, isActiveParameter, flagParameter, newFieldId);
        }
    
        public virtual ObjectResult<CRM_IscolumnlabelExists_Result> CRM_IscolumnlabelExists(string columnlabel)
        {
            var columnlabelParameter = columnlabel != null ?
                new ObjectParameter("columnlabel", columnlabel) :
                new ObjectParameter("columnlabel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_IscolumnlabelExists_Result>("CRM_IscolumnlabelExists", columnlabelParameter);
        }
    
        public virtual ObjectResult<string> CRM_CheckifStandardColumnExists(string columnName)
        {
            var columnNameParameter = columnName != null ?
                new ObjectParameter("ColumnName", columnName) :
                new ObjectParameter("ColumnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CRM_CheckifStandardColumnExists", columnNameParameter);
        }
    
        public virtual ObjectResult<string> CRM_IscolumnlabelExists_New(string columnName)
        {
            var columnNameParameter = columnName != null ?
                new ObjectParameter("ColumnName", columnName) :
                new ObjectParameter("ColumnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CRM_IscolumnlabelExists_New", columnNameParameter);
        }
    
        public virtual ObjectResult<CRM_IscolumnlabelExistsForModule_Result> CRM_IscolumnlabelExistsForModule(string columnlabel, string modulename)
        {
            var columnlabelParameter = columnlabel != null ?
                new ObjectParameter("columnlabel", columnlabel) :
                new ObjectParameter("columnlabel", typeof(string));
    
            var modulenameParameter = modulename != null ?
                new ObjectParameter("modulename", modulename) :
                new ObjectParameter("modulename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_IscolumnlabelExistsForModule_Result>("CRM_IscolumnlabelExistsForModule", columnlabelParameter, modulenameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CRM_GetContactIdfrmFName(string fname)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CRM_GetContactIdfrmFName", fnameParameter);
        }
    
        public virtual ObjectResult<Usp_GetZipCode_AroundSpecificZipCode_Result> Usp_GetZipCode_AroundSpecificZipCode(string specifiedZip, Nullable<decimal> dist)
        {
            var specifiedZipParameter = specifiedZip != null ?
                new ObjectParameter("SpecifiedZip", specifiedZip) :
                new ObjectParameter("SpecifiedZip", typeof(string));
    
            var distParameter = dist.HasValue ?
                new ObjectParameter("Dist", dist) :
                new ObjectParameter("Dist", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetZipCode_AroundSpecificZipCode_Result>("Usp_GetZipCode_AroundSpecificZipCode", specifiedZipParameter, distParameter);
        }
    
        public virtual ObjectResult<CRM_DashBoard_GetData_ActivityDashBoard_Result> CRM_DashBoard_GetData_ActivityDashBoard(string userId, string roleId, string officeId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> flag)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var roleIdParameter = roleId != null ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(string));
    
            var officeIdParameter = officeId != null ?
                new ObjectParameter("OfficeId", officeId) :
                new ObjectParameter("OfficeId", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_DashBoard_GetData_ActivityDashBoard_Result>("CRM_DashBoard_GetData_ActivityDashBoard", userIdParameter, roleIdParameter, officeIdParameter, fromDateParameter, toDateParameter, flagParameter);
        }
    
        public virtual ObjectResult<CRM_GET_ALL_Opportunity_Count_Result> CRM_GET_ALL_Opportunity_Count(string office, string roleId, string loginID, string fromDate, string toDate)
        {
            var officeParameter = office != null ?
                new ObjectParameter("office", office) :
                new ObjectParameter("office", typeof(string));
    
            var roleIdParameter = roleId != null ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(string));
    
            var loginIDParameter = loginID != null ?
                new ObjectParameter("loginID", loginID) :
                new ObjectParameter("loginID", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GET_ALL_Opportunity_Count_Result>("CRM_GET_ALL_Opportunity_Count", officeParameter, roleIdParameter, loginIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int CRM_ExportCompaniesDatawithCustomField(string office, string roleID, string logInId)
        {
            var officeParameter = office != null ?
                new ObjectParameter("office", office) :
                new ObjectParameter("office", typeof(string));
    
            var roleIDParameter = roleID != null ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(string));
    
            var logInIdParameter = logInId != null ?
                new ObjectParameter("logInId", logInId) :
                new ObjectParameter("logInId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_ExportCompaniesDatawithCustomField", officeParameter, roleIDParameter, logInIdParameter);
        }
    
        public virtual int CRM_DeleteCustomfields(Nullable<long> fieldId)
        {
            var fieldIdParameter = fieldId.HasValue ?
                new ObjectParameter("FieldId", fieldId) :
                new ObjectParameter("FieldId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_DeleteCustomfields", fieldIdParameter);
        }
    
        public virtual ObjectResult<CRM_SearchContactListForExport_Result> CRM_SearchContactListForExport(string keyword, string office, string type, string roleId, string loginID, string salesRep, string filterExpression, string funnelSuspects, string skillSerachOption, string skillId, Nullable<int> startIndex, Nullable<int> pageSize, string sorting)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var officeParameter = office != null ?
                new ObjectParameter("office", office) :
                new ObjectParameter("office", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var roleIdParameter = roleId != null ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(string));
    
            var loginIDParameter = loginID != null ?
                new ObjectParameter("loginID", loginID) :
                new ObjectParameter("loginID", typeof(string));
    
            var salesRepParameter = salesRep != null ?
                new ObjectParameter("salesRep", salesRep) :
                new ObjectParameter("salesRep", typeof(string));
    
            var filterExpressionParameter = filterExpression != null ?
                new ObjectParameter("FilterExpression", filterExpression) :
                new ObjectParameter("FilterExpression", typeof(string));
    
            var funnelSuspectsParameter = funnelSuspects != null ?
                new ObjectParameter("funnelSuspects", funnelSuspects) :
                new ObjectParameter("funnelSuspects", typeof(string));
    
            var skillSerachOptionParameter = skillSerachOption != null ?
                new ObjectParameter("SkillSerachOption", skillSerachOption) :
                new ObjectParameter("SkillSerachOption", typeof(string));
    
            var skillIdParameter = skillId != null ?
                new ObjectParameter("SkillId", skillId) :
                new ObjectParameter("SkillId", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_SearchContactListForExport_Result>("CRM_SearchContactListForExport", keywordParameter, officeParameter, typeParameter, roleIdParameter, loginIDParameter, salesRepParameter, filterExpressionParameter, funnelSuspectsParameter, skillSerachOptionParameter, skillIdParameter, startIndexParameter, pageSizeParameter, sortingParameter);
        }
    
        public virtual int CRM_CreateBranch(string branchName, string addressLine1, string addressLine2, string city, string stateCode, string postalCode, string mobile, string phoneExt, string fax, string email, string comment, string otherState, string routingEmail, string branchType)
        {
            var branchNameParameter = branchName != null ?
                new ObjectParameter("branchName", branchName) :
                new ObjectParameter("branchName", typeof(string));
    
            var addressLine1Parameter = addressLine1 != null ?
                new ObjectParameter("addressLine1", addressLine1) :
                new ObjectParameter("addressLine1", typeof(string));
    
            var addressLine2Parameter = addressLine2 != null ?
                new ObjectParameter("addressLine2", addressLine2) :
                new ObjectParameter("addressLine2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("postalCode", postalCode) :
                new ObjectParameter("postalCode", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var phoneExtParameter = phoneExt != null ?
                new ObjectParameter("phoneExt", phoneExt) :
                new ObjectParameter("phoneExt", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            var otherStateParameter = otherState != null ?
                new ObjectParameter("otherState", otherState) :
                new ObjectParameter("otherState", typeof(string));
    
            var routingEmailParameter = routingEmail != null ?
                new ObjectParameter("routingEmail", routingEmail) :
                new ObjectParameter("routingEmail", typeof(string));
    
            var branchTypeParameter = branchType != null ?
                new ObjectParameter("BranchType", branchType) :
                new ObjectParameter("BranchType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_CreateBranch", branchNameParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateCodeParameter, postalCodeParameter, mobileParameter, phoneExtParameter, faxParameter, emailParameter, commentParameter, otherStateParameter, routingEmailParameter, branchTypeParameter);
        }
    
        public virtual ObjectResult<CRM_getBranchDetailByBranchId_Result> CRM_getBranchDetailByBranchId(Nullable<int> branchId)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_getBranchDetailByBranchId_Result>("CRM_getBranchDetailByBranchId", branchIdParameter);
        }
    
        public virtual ObjectResult<CRM_GetUserBranch_Result> CRM_GetUserBranch(string loginID, string roleID)
        {
            var loginIDParameter = loginID != null ?
                new ObjectParameter("loginID", loginID) :
                new ObjectParameter("loginID", typeof(string));
    
            var roleIDParameter = roleID != null ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetUserBranch_Result>("CRM_GetUserBranch", loginIDParameter, roleIDParameter);
        }
    
        public virtual int CRM_UpdateBranchDetailByBranchId(Nullable<int> branchId, string name, string addressLine1, string addressLine2, string city, string stateCode, string postalCode, string mobile, string phoneExt, string fax, string email, string comment, string otherState, string routingEmail, string branchType)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressLine1Parameter = addressLine1 != null ?
                new ObjectParameter("addressLine1", addressLine1) :
                new ObjectParameter("addressLine1", typeof(string));
    
            var addressLine2Parameter = addressLine2 != null ?
                new ObjectParameter("addressLine2", addressLine2) :
                new ObjectParameter("addressLine2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("postalCode", postalCode) :
                new ObjectParameter("postalCode", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var phoneExtParameter = phoneExt != null ?
                new ObjectParameter("phoneExt", phoneExt) :
                new ObjectParameter("phoneExt", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            var otherStateParameter = otherState != null ?
                new ObjectParameter("otherState", otherState) :
                new ObjectParameter("otherState", typeof(string));
    
            var routingEmailParameter = routingEmail != null ?
                new ObjectParameter("routingEmail", routingEmail) :
                new ObjectParameter("routingEmail", typeof(string));
    
            var branchTypeParameter = branchType != null ?
                new ObjectParameter("BranchType", branchType) :
                new ObjectParameter("BranchType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_UpdateBranchDetailByBranchId", branchIdParameter, nameParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateCodeParameter, postalCodeParameter, mobileParameter, phoneExtParameter, faxParameter, emailParameter, commentParameter, otherStateParameter, routingEmailParameter, branchTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CRM_procCreateAdmin(string firstName, string middleInitial, string lastName, string addressLine1, string addressLine2, string city, string stateCode, string postalCode, string mobile, string phoneExt, string fax, string email, string comment, string outlookEmail, Nullable<decimal> level, string branch, string cellno, Nullable<bool> isCorporate, Nullable<bool> isSMS, string smsEmail, string smsPwd, string smsSMTP, string smsPort, string loginId, string password)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleInitialParameter = middleInitial != null ?
                new ObjectParameter("middleInitial", middleInitial) :
                new ObjectParameter("middleInitial", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var addressLine1Parameter = addressLine1 != null ?
                new ObjectParameter("addressLine1", addressLine1) :
                new ObjectParameter("addressLine1", typeof(string));
    
            var addressLine2Parameter = addressLine2 != null ?
                new ObjectParameter("addressLine2", addressLine2) :
                new ObjectParameter("addressLine2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("postalCode", postalCode) :
                new ObjectParameter("postalCode", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var phoneExtParameter = phoneExt != null ?
                new ObjectParameter("phoneExt", phoneExt) :
                new ObjectParameter("phoneExt", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            var outlookEmailParameter = outlookEmail != null ?
                new ObjectParameter("OutlookEmail", outlookEmail) :
                new ObjectParameter("OutlookEmail", typeof(string));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(decimal));
    
            var branchParameter = branch != null ?
                new ObjectParameter("branch", branch) :
                new ObjectParameter("branch", typeof(string));
    
            var cellnoParameter = cellno != null ?
                new ObjectParameter("cellno", cellno) :
                new ObjectParameter("cellno", typeof(string));
    
            var isCorporateParameter = isCorporate.HasValue ?
                new ObjectParameter("isCorporate", isCorporate) :
                new ObjectParameter("isCorporate", typeof(bool));
    
            var isSMSParameter = isSMS.HasValue ?
                new ObjectParameter("isSMS", isSMS) :
                new ObjectParameter("isSMS", typeof(bool));
    
            var smsEmailParameter = smsEmail != null ?
                new ObjectParameter("smsEmail", smsEmail) :
                new ObjectParameter("smsEmail", typeof(string));
    
            var smsPwdParameter = smsPwd != null ?
                new ObjectParameter("smsPwd", smsPwd) :
                new ObjectParameter("smsPwd", typeof(string));
    
            var smsSMTPParameter = smsSMTP != null ?
                new ObjectParameter("smsSMTP", smsSMTP) :
                new ObjectParameter("smsSMTP", typeof(string));
    
            var smsPortParameter = smsPort != null ?
                new ObjectParameter("smsPort", smsPort) :
                new ObjectParameter("smsPort", typeof(string));
    
            var loginIdParameter = loginId != null ?
                new ObjectParameter("loginId", loginId) :
                new ObjectParameter("loginId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CRM_procCreateAdmin", firstNameParameter, middleInitialParameter, lastNameParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateCodeParameter, postalCodeParameter, mobileParameter, phoneExtParameter, faxParameter, emailParameter, commentParameter, outlookEmailParameter, levelParameter, branchParameter, cellnoParameter, isCorporateParameter, isSMSParameter, smsEmailParameter, smsPwdParameter, smsSMTPParameter, smsPortParameter, loginIdParameter, passwordParameter);
        }
    
        public virtual ObjectResult<CRM_SearchAdminList_Result> CRM_SearchAdminList(string name, string email, string city, string phone, string keyword, string state, string zip, string level, string branch, string loginId, Nullable<long> roleId, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("zip", zip) :
                new ObjectParameter("zip", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("branch", branch) :
                new ObjectParameter("branch", typeof(string));
    
            var loginIdParameter = loginId != null ?
                new ObjectParameter("loginId", loginId) :
                new ObjectParameter("loginId", typeof(string));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(long));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_SearchAdminList_Result>("CRM_SearchAdminList", nameParameter, emailParameter, cityParameter, phoneParameter, keywordParameter, stateParameter, zipParameter, levelParameter, branchParameter, loginIdParameter, roleIdParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual int CRM_InsertOpportunityDetail(string lead_Name, string title, string phone, string fax, string email, string mobile, string preferTime, string preferMode, string emailOptOut, string accountId, string accountName, string webSite, string ownership, string employees, string industry, string annualRevenue, string rating, string leadStatus, string currentApplication, string mailingAddress, string mailingstreet, string mailingcity, string mailingstate, string mailingzip, string mailingcountry, string salesMgr1, string salesMgr2, string office, Nullable<long> createdBy, Nullable<long> modifiedBy, string description, string source, Nullable<long> leadAssigned, string leadStage, string facebookUserName, string twitterUserName, string linkedInUserName, string googlePlusUserName, string pInterestUserName, string skypeUsername, Nullable<System.DateTime> estimatedCloseDate, string nextStep, string probability, string businessType)
        {
            var lead_NameParameter = lead_Name != null ?
                new ObjectParameter("Lead_Name", lead_Name) :
                new ObjectParameter("Lead_Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var preferTimeParameter = preferTime != null ?
                new ObjectParameter("PreferTime", preferTime) :
                new ObjectParameter("PreferTime", typeof(string));
    
            var preferModeParameter = preferMode != null ?
                new ObjectParameter("PreferMode", preferMode) :
                new ObjectParameter("PreferMode", typeof(string));
    
            var emailOptOutParameter = emailOptOut != null ?
                new ObjectParameter("EmailOptOut", emailOptOut) :
                new ObjectParameter("EmailOptOut", typeof(string));
    
            var accountIdParameter = accountId != null ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(string));
    
            var accountNameParameter = accountName != null ?
                new ObjectParameter("AccountName", accountName) :
                new ObjectParameter("AccountName", typeof(string));
    
            var webSiteParameter = webSite != null ?
                new ObjectParameter("webSite", webSite) :
                new ObjectParameter("webSite", typeof(string));
    
            var ownershipParameter = ownership != null ?
                new ObjectParameter("Ownership", ownership) :
                new ObjectParameter("Ownership", typeof(string));
    
            var employeesParameter = employees != null ?
                new ObjectParameter("Employees", employees) :
                new ObjectParameter("Employees", typeof(string));
    
            var industryParameter = industry != null ?
                new ObjectParameter("Industry", industry) :
                new ObjectParameter("Industry", typeof(string));
    
            var annualRevenueParameter = annualRevenue != null ?
                new ObjectParameter("AnnualRevenue", annualRevenue) :
                new ObjectParameter("AnnualRevenue", typeof(string));
    
            var ratingParameter = rating != null ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(string));
    
            var leadStatusParameter = leadStatus != null ?
                new ObjectParameter("LeadStatus", leadStatus) :
                new ObjectParameter("LeadStatus", typeof(string));
    
            var currentApplicationParameter = currentApplication != null ?
                new ObjectParameter("CurrentApplication", currentApplication) :
                new ObjectParameter("CurrentApplication", typeof(string));
    
            var mailingAddressParameter = mailingAddress != null ?
                new ObjectParameter("mailingAddress", mailingAddress) :
                new ObjectParameter("mailingAddress", typeof(string));
    
            var mailingstreetParameter = mailingstreet != null ?
                new ObjectParameter("mailingstreet", mailingstreet) :
                new ObjectParameter("mailingstreet", typeof(string));
    
            var mailingcityParameter = mailingcity != null ?
                new ObjectParameter("mailingcity", mailingcity) :
                new ObjectParameter("mailingcity", typeof(string));
    
            var mailingstateParameter = mailingstate != null ?
                new ObjectParameter("mailingstate", mailingstate) :
                new ObjectParameter("mailingstate", typeof(string));
    
            var mailingzipParameter = mailingzip != null ?
                new ObjectParameter("mailingzip", mailingzip) :
                new ObjectParameter("mailingzip", typeof(string));
    
            var mailingcountryParameter = mailingcountry != null ?
                new ObjectParameter("mailingcountry", mailingcountry) :
                new ObjectParameter("mailingcountry", typeof(string));
    
            var salesMgr1Parameter = salesMgr1 != null ?
                new ObjectParameter("salesMgr1", salesMgr1) :
                new ObjectParameter("salesMgr1", typeof(string));
    
            var salesMgr2Parameter = salesMgr2 != null ?
                new ObjectParameter("salesMgr2", salesMgr2) :
                new ObjectParameter("salesMgr2", typeof(string));
    
            var officeParameter = office != null ?
                new ObjectParameter("office", office) :
                new ObjectParameter("office", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var leadAssignedParameter = leadAssigned.HasValue ?
                new ObjectParameter("LeadAssigned", leadAssigned) :
                new ObjectParameter("LeadAssigned", typeof(long));
    
            var leadStageParameter = leadStage != null ?
                new ObjectParameter("LeadStage", leadStage) :
                new ObjectParameter("LeadStage", typeof(string));
    
            var facebookUserNameParameter = facebookUserName != null ?
                new ObjectParameter("FacebookUserName", facebookUserName) :
                new ObjectParameter("FacebookUserName", typeof(string));
    
            var twitterUserNameParameter = twitterUserName != null ?
                new ObjectParameter("TwitterUserName", twitterUserName) :
                new ObjectParameter("TwitterUserName", typeof(string));
    
            var linkedInUserNameParameter = linkedInUserName != null ?
                new ObjectParameter("LinkedInUserName", linkedInUserName) :
                new ObjectParameter("LinkedInUserName", typeof(string));
    
            var googlePlusUserNameParameter = googlePlusUserName != null ?
                new ObjectParameter("GooglePlusUserName", googlePlusUserName) :
                new ObjectParameter("GooglePlusUserName", typeof(string));
    
            var pInterestUserNameParameter = pInterestUserName != null ?
                new ObjectParameter("PInterestUserName", pInterestUserName) :
                new ObjectParameter("PInterestUserName", typeof(string));
    
            var skypeUsernameParameter = skypeUsername != null ?
                new ObjectParameter("SkypeUsername", skypeUsername) :
                new ObjectParameter("SkypeUsername", typeof(string));
    
            var estimatedCloseDateParameter = estimatedCloseDate.HasValue ?
                new ObjectParameter("EstimatedCloseDate", estimatedCloseDate) :
                new ObjectParameter("EstimatedCloseDate", typeof(System.DateTime));
    
            var nextStepParameter = nextStep != null ?
                new ObjectParameter("NextStep", nextStep) :
                new ObjectParameter("NextStep", typeof(string));
    
            var probabilityParameter = probability != null ?
                new ObjectParameter("Probability", probability) :
                new ObjectParameter("Probability", typeof(string));
    
            var businessTypeParameter = businessType != null ?
                new ObjectParameter("BusinessType", businessType) :
                new ObjectParameter("BusinessType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_InsertOpportunityDetail", lead_NameParameter, titleParameter, phoneParameter, faxParameter, emailParameter, mobileParameter, preferTimeParameter, preferModeParameter, emailOptOutParameter, accountIdParameter, accountNameParameter, webSiteParameter, ownershipParameter, employeesParameter, industryParameter, annualRevenueParameter, ratingParameter, leadStatusParameter, currentApplicationParameter, mailingAddressParameter, mailingstreetParameter, mailingcityParameter, mailingstateParameter, mailingzipParameter, mailingcountryParameter, salesMgr1Parameter, salesMgr2Parameter, officeParameter, createdByParameter, modifiedByParameter, descriptionParameter, sourceParameter, leadAssignedParameter, leadStageParameter, facebookUserNameParameter, twitterUserNameParameter, linkedInUserNameParameter, googlePlusUserNameParameter, pInterestUserNameParameter, skypeUsernameParameter, estimatedCloseDateParameter, nextStepParameter, probabilityParameter, businessTypeParameter);
        }
    
        public virtual int CRM_UpdateAdminDetail(Nullable<decimal> userId, string firstName, string middleInitial, string lastName, string addressLine1, string addressLine2, string city, string stateCode, string postalCode, string mobile, string phoneExt, string fax, string email, string comment, string outlookEmail, Nullable<decimal> level, string branch, string cellno, string loginId, string password, Nullable<bool> isAllowsedingSMS, string smsEmail, string smsPwd, string smsSMTP, string smsPort)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(decimal));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleInitialParameter = middleInitial != null ?
                new ObjectParameter("middleInitial", middleInitial) :
                new ObjectParameter("middleInitial", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var addressLine1Parameter = addressLine1 != null ?
                new ObjectParameter("addressLine1", addressLine1) :
                new ObjectParameter("addressLine1", typeof(string));
    
            var addressLine2Parameter = addressLine2 != null ?
                new ObjectParameter("addressLine2", addressLine2) :
                new ObjectParameter("addressLine2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("postalCode", postalCode) :
                new ObjectParameter("postalCode", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var phoneExtParameter = phoneExt != null ?
                new ObjectParameter("phoneExt", phoneExt) :
                new ObjectParameter("phoneExt", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            var outlookEmailParameter = outlookEmail != null ?
                new ObjectParameter("OutlookEmail", outlookEmail) :
                new ObjectParameter("OutlookEmail", typeof(string));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(decimal));
    
            var branchParameter = branch != null ?
                new ObjectParameter("branch", branch) :
                new ObjectParameter("branch", typeof(string));
    
            var cellnoParameter = cellno != null ?
                new ObjectParameter("cellno", cellno) :
                new ObjectParameter("cellno", typeof(string));
    
            var loginIdParameter = loginId != null ?
                new ObjectParameter("loginId", loginId) :
                new ObjectParameter("loginId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var isAllowsedingSMSParameter = isAllowsedingSMS.HasValue ?
                new ObjectParameter("IsAllowsedingSMS", isAllowsedingSMS) :
                new ObjectParameter("IsAllowsedingSMS", typeof(bool));
    
            var smsEmailParameter = smsEmail != null ?
                new ObjectParameter("smsEmail", smsEmail) :
                new ObjectParameter("smsEmail", typeof(string));
    
            var smsPwdParameter = smsPwd != null ?
                new ObjectParameter("smsPwd", smsPwd) :
                new ObjectParameter("smsPwd", typeof(string));
    
            var smsSMTPParameter = smsSMTP != null ?
                new ObjectParameter("smsSMTP", smsSMTP) :
                new ObjectParameter("smsSMTP", typeof(string));
    
            var smsPortParameter = smsPort != null ?
                new ObjectParameter("smsPort", smsPort) :
                new ObjectParameter("smsPort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_UpdateAdminDetail", userIdParameter, firstNameParameter, middleInitialParameter, lastNameParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateCodeParameter, postalCodeParameter, mobileParameter, phoneExtParameter, faxParameter, emailParameter, commentParameter, outlookEmailParameter, levelParameter, branchParameter, cellnoParameter, loginIdParameter, passwordParameter, isAllowsedingSMSParameter, smsEmailParameter, smsPwdParameter, smsSMTPParameter, smsPortParameter);
        }
    
        public virtual ObjectResult<CRM_GetBranchListAll_Result> CRM_GetBranchListAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetBranchListAll_Result>("CRM_GetBranchListAll");
        }
    
        public virtual ObjectResult<CRM_GetCustomFieldsbyFieldId_Result> CRM_GetCustomFieldsbyFieldId(Nullable<long> fieldId)
        {
            var fieldIdParameter = fieldId.HasValue ?
                new ObjectParameter("FieldId", fieldId) :
                new ObjectParameter("FieldId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetCustomFieldsbyFieldId_Result>("CRM_GetCustomFieldsbyFieldId", fieldIdParameter);
        }
    
        public virtual ObjectResult<CRM_Get_Activity_Notifications_Result> CRM_Get_Activity_Notifications(string loginId, string roleid, string fromDate, string toDate, string officeId, string employeeId, string keyword, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, string status)
        {
            var loginIdParameter = loginId != null ?
                new ObjectParameter("loginId", loginId) :
                new ObjectParameter("loginId", typeof(string));
    
            var roleidParameter = roleid != null ?
                new ObjectParameter("roleid", roleid) :
                new ObjectParameter("roleid", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var officeIdParameter = officeId != null ?
                new ObjectParameter("officeId", officeId) :
                new ObjectParameter("officeId", typeof(string));
    
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("employeeId", employeeId) :
                new ObjectParameter("employeeId", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_Get_Activity_Notifications_Result>("CRM_Get_Activity_Notifications", loginIdParameter, roleidParameter, fromDateParameter, toDateParameter, officeIdParameter, employeeIdParameter, keywordParameter, startIndexParameter, pageSizeParameter, sortingParameter, statusParameter);
        }
    
        public virtual int CRM_deleteProjectByProjectId(Nullable<int> projectId)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("projectId", projectId) :
                new ObjectParameter("projectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_deleteProjectByProjectId", projectIdParameter);
        }
    
        public virtual ObjectResult<CRM_GETALL_Projectslist_Result> CRM_GETALL_Projectslist(string projectname, string status, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var projectnameParameter = projectname != null ?
                new ObjectParameter("Projectname", projectname) :
                new ObjectParameter("Projectname", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GETALL_Projectslist_Result>("CRM_GETALL_Projectslist", projectnameParameter, statusParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<CRM_getprojectById_Result> CRM_getprojectById(Nullable<int> projectId)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_getprojectById_Result>("CRM_getprojectById", projectIdParameter);
        }
    
        public virtual ObjectResult<CRM_GETProjectDetailsByProjectID_Result> CRM_GETProjectDetailsByProjectID(Nullable<int> projectId)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GETProjectDetailsByProjectID_Result>("CRM_GETProjectDetailsByProjectID", projectIdParameter);
        }
    
        public virtual int CRM_UpdateProjectDetailsByProjectId(Nullable<int> projectId, string projectname, Nullable<int> contact, string status, string uRL, Nullable<System.DateTime> dateCreated, string description)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var projectnameParameter = projectname != null ?
                new ObjectParameter("Projectname", projectname) :
                new ObjectParameter("Projectname", typeof(string));
    
            var contactParameter = contact.HasValue ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_UpdateProjectDetailsByProjectId", projectIdParameter, projectnameParameter, contactParameter, statusParameter, uRLParameter, dateCreatedParameter, descriptionParameter);
        }
    
        public virtual int CRM_Addproject(string projectname, Nullable<int> contact, string status, string uRL, Nullable<System.DateTime> dateCreated, string description)
        {
            var projectnameParameter = projectname != null ?
                new ObjectParameter("Projectname", projectname) :
                new ObjectParameter("Projectname", typeof(string));
    
            var contactParameter = contact.HasValue ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_Addproject", projectnameParameter, contactParameter, statusParameter, uRLParameter, dateCreatedParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<CRM_GET_Projectslist_Result> CRM_GET_Projectslist(string projectname, string status, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var projectnameParameter = projectname != null ?
                new ObjectParameter("Projectname", projectname) :
                new ObjectParameter("Projectname", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GET_Projectslist_Result>("CRM_GET_Projectslist", projectnameParameter, statusParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual int CRM_Add_ContactType(string contacttype, Nullable<bool> status, string description)
        {
            var contacttypeParameter = contacttype != null ?
                new ObjectParameter("contacttype", contacttype) :
                new ObjectParameter("contacttype", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_Add_ContactType", contacttypeParameter, statusParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<CRM_GET_AllContactTypes_Result> CRM_GET_AllContactTypes(string contacttype, string status, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var contacttypeParameter = contacttype != null ?
                new ObjectParameter("Contacttype", contacttype) :
                new ObjectParameter("Contacttype", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GET_AllContactTypes_Result>("CRM_GET_AllContactTypes", contacttypeParameter, statusParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual int CRM_AddItem(Nullable<int> itemTypeID, Nullable<int> measureID, Nullable<int> itemLocID, string itemCode, string itemName, string description, Nullable<int> primaryVendorID, Nullable<int> alternateVendorID, string accountNO, Nullable<decimal> rateperUnit, Nullable<decimal> saleprice, Nullable<decimal> minimumQty, Nullable<decimal> reorderQty, Nullable<decimal> qtyonHand, string itemLocation, string itemUnits, string warranty, Nullable<bool> active, Nullable<System.DateTime> createdDate, Nullable<System.DateTime> modifiedDate, string updatedby, string partNumber, Nullable<int> companyID, Nullable<bool> isDeleted, Nullable<bool> nonStock, Nullable<decimal> qtyCommitted, Nullable<decimal> qtyOnOrder, Nullable<bool> @checked, Nullable<int> manufacturerID)
        {
            var itemTypeIDParameter = itemTypeID.HasValue ?
                new ObjectParameter("ItemTypeID", itemTypeID) :
                new ObjectParameter("ItemTypeID", typeof(int));
    
            var measureIDParameter = measureID.HasValue ?
                new ObjectParameter("MeasureID", measureID) :
                new ObjectParameter("MeasureID", typeof(int));
    
            var itemLocIDParameter = itemLocID.HasValue ?
                new ObjectParameter("ItemLocID", itemLocID) :
                new ObjectParameter("ItemLocID", typeof(int));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var primaryVendorIDParameter = primaryVendorID.HasValue ?
                new ObjectParameter("PrimaryVendorID", primaryVendorID) :
                new ObjectParameter("PrimaryVendorID", typeof(int));
    
            var alternateVendorIDParameter = alternateVendorID.HasValue ?
                new ObjectParameter("AlternateVendorID", alternateVendorID) :
                new ObjectParameter("AlternateVendorID", typeof(int));
    
            var accountNOParameter = accountNO != null ?
                new ObjectParameter("AccountNO", accountNO) :
                new ObjectParameter("AccountNO", typeof(string));
    
            var rateperUnitParameter = rateperUnit.HasValue ?
                new ObjectParameter("RateperUnit", rateperUnit) :
                new ObjectParameter("RateperUnit", typeof(decimal));
    
            var salepriceParameter = saleprice.HasValue ?
                new ObjectParameter("Saleprice", saleprice) :
                new ObjectParameter("Saleprice", typeof(decimal));
    
            var minimumQtyParameter = minimumQty.HasValue ?
                new ObjectParameter("MinimumQty", minimumQty) :
                new ObjectParameter("MinimumQty", typeof(decimal));
    
            var reorderQtyParameter = reorderQty.HasValue ?
                new ObjectParameter("ReorderQty", reorderQty) :
                new ObjectParameter("ReorderQty", typeof(decimal));
    
            var qtyonHandParameter = qtyonHand.HasValue ?
                new ObjectParameter("QtyonHand", qtyonHand) :
                new ObjectParameter("QtyonHand", typeof(decimal));
    
            var itemLocationParameter = itemLocation != null ?
                new ObjectParameter("ItemLocation", itemLocation) :
                new ObjectParameter("ItemLocation", typeof(string));
    
            var itemUnitsParameter = itemUnits != null ?
                new ObjectParameter("ItemUnits", itemUnits) :
                new ObjectParameter("ItemUnits", typeof(string));
    
            var warrantyParameter = warranty != null ?
                new ObjectParameter("Warranty", warranty) :
                new ObjectParameter("Warranty", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("modifiedDate", modifiedDate) :
                new ObjectParameter("modifiedDate", typeof(System.DateTime));
    
            var updatedbyParameter = updatedby != null ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var nonStockParameter = nonStock.HasValue ?
                new ObjectParameter("NonStock", nonStock) :
                new ObjectParameter("NonStock", typeof(bool));
    
            var qtyCommittedParameter = qtyCommitted.HasValue ?
                new ObjectParameter("QtyCommitted", qtyCommitted) :
                new ObjectParameter("QtyCommitted", typeof(decimal));
    
            var qtyOnOrderParameter = qtyOnOrder.HasValue ?
                new ObjectParameter("QtyOnOrder", qtyOnOrder) :
                new ObjectParameter("QtyOnOrder", typeof(decimal));
    
            var checkedParameter = @checked.HasValue ?
                new ObjectParameter("Checked", @checked) :
                new ObjectParameter("Checked", typeof(bool));
    
            var manufacturerIDParameter = manufacturerID.HasValue ?
                new ObjectParameter("ManufacturerID", manufacturerID) :
                new ObjectParameter("ManufacturerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_AddItem", itemTypeIDParameter, measureIDParameter, itemLocIDParameter, itemCodeParameter, itemNameParameter, descriptionParameter, primaryVendorIDParameter, alternateVendorIDParameter, accountNOParameter, rateperUnitParameter, salepriceParameter, minimumQtyParameter, reorderQtyParameter, qtyonHandParameter, itemLocationParameter, itemUnitsParameter, warrantyParameter, activeParameter, createdDateParameter, modifiedDateParameter, updatedbyParameter, partNumberParameter, companyIDParameter, isDeletedParameter, nonStockParameter, qtyCommittedParameter, qtyOnOrderParameter, checkedParameter, manufacturerIDParameter);
        }
    
        public virtual int CRM_deleteItemByItemId(Nullable<int> itemID)
        {
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_deleteItemByItemId", itemIDParameter);
        }
    
        public virtual ObjectResult<CRM_GETItemByItemID_Result> CRM_GETItemByItemID(Nullable<int> itemID)
        {
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GETItemByItemID_Result>("CRM_GETItemByItemID", itemIDParameter);
        }
    
        public virtual int CRM_UpdateItemDetailsByItemId(Nullable<int> itemID, Nullable<int> itemTypeID, Nullable<int> measureID, Nullable<int> itemLocID, string itemCode, string itemName, string description, Nullable<int> primaryVendorID, Nullable<int> alternateVendorID, string accountNO, Nullable<decimal> rateperUnit, Nullable<decimal> saleprice, Nullable<decimal> minimumQty, Nullable<decimal> reorderQty, Nullable<decimal> qtyonHand, string itemLocation, string itemUnits, string warranty, Nullable<bool> active, Nullable<System.DateTime> createdDate, Nullable<System.DateTime> modifiedDate, string updatedby, string partNumber, Nullable<int> companyID, Nullable<bool> isDeleted, Nullable<bool> nonStock, Nullable<decimal> qtyCommitted, Nullable<decimal> qtyOnOrder, Nullable<bool> @checked, Nullable<int> manufacturerID)
        {
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var itemTypeIDParameter = itemTypeID.HasValue ?
                new ObjectParameter("ItemTypeID", itemTypeID) :
                new ObjectParameter("ItemTypeID", typeof(int));
    
            var measureIDParameter = measureID.HasValue ?
                new ObjectParameter("MeasureID", measureID) :
                new ObjectParameter("MeasureID", typeof(int));
    
            var itemLocIDParameter = itemLocID.HasValue ?
                new ObjectParameter("ItemLocID", itemLocID) :
                new ObjectParameter("ItemLocID", typeof(int));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var primaryVendorIDParameter = primaryVendorID.HasValue ?
                new ObjectParameter("PrimaryVendorID", primaryVendorID) :
                new ObjectParameter("PrimaryVendorID", typeof(int));
    
            var alternateVendorIDParameter = alternateVendorID.HasValue ?
                new ObjectParameter("AlternateVendorID", alternateVendorID) :
                new ObjectParameter("AlternateVendorID", typeof(int));
    
            var accountNOParameter = accountNO != null ?
                new ObjectParameter("AccountNO", accountNO) :
                new ObjectParameter("AccountNO", typeof(string));
    
            var rateperUnitParameter = rateperUnit.HasValue ?
                new ObjectParameter("RateperUnit", rateperUnit) :
                new ObjectParameter("RateperUnit", typeof(decimal));
    
            var salepriceParameter = saleprice.HasValue ?
                new ObjectParameter("Saleprice", saleprice) :
                new ObjectParameter("Saleprice", typeof(decimal));
    
            var minimumQtyParameter = minimumQty.HasValue ?
                new ObjectParameter("MinimumQty", minimumQty) :
                new ObjectParameter("MinimumQty", typeof(decimal));
    
            var reorderQtyParameter = reorderQty.HasValue ?
                new ObjectParameter("ReorderQty", reorderQty) :
                new ObjectParameter("ReorderQty", typeof(decimal));
    
            var qtyonHandParameter = qtyonHand.HasValue ?
                new ObjectParameter("QtyonHand", qtyonHand) :
                new ObjectParameter("QtyonHand", typeof(decimal));
    
            var itemLocationParameter = itemLocation != null ?
                new ObjectParameter("ItemLocation", itemLocation) :
                new ObjectParameter("ItemLocation", typeof(string));
    
            var itemUnitsParameter = itemUnits != null ?
                new ObjectParameter("ItemUnits", itemUnits) :
                new ObjectParameter("ItemUnits", typeof(string));
    
            var warrantyParameter = warranty != null ?
                new ObjectParameter("Warranty", warranty) :
                new ObjectParameter("Warranty", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("modifiedDate", modifiedDate) :
                new ObjectParameter("modifiedDate", typeof(System.DateTime));
    
            var updatedbyParameter = updatedby != null ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var nonStockParameter = nonStock.HasValue ?
                new ObjectParameter("NonStock", nonStock) :
                new ObjectParameter("NonStock", typeof(bool));
    
            var qtyCommittedParameter = qtyCommitted.HasValue ?
                new ObjectParameter("QtyCommitted", qtyCommitted) :
                new ObjectParameter("QtyCommitted", typeof(decimal));
    
            var qtyOnOrderParameter = qtyOnOrder.HasValue ?
                new ObjectParameter("QtyOnOrder", qtyOnOrder) :
                new ObjectParameter("QtyOnOrder", typeof(decimal));
    
            var checkedParameter = @checked.HasValue ?
                new ObjectParameter("Checked", @checked) :
                new ObjectParameter("Checked", typeof(bool));
    
            var manufacturerIDParameter = manufacturerID.HasValue ?
                new ObjectParameter("ManufacturerID", manufacturerID) :
                new ObjectParameter("ManufacturerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_UpdateItemDetailsByItemId", itemIDParameter, itemTypeIDParameter, measureIDParameter, itemLocIDParameter, itemCodeParameter, itemNameParameter, descriptionParameter, primaryVendorIDParameter, alternateVendorIDParameter, accountNOParameter, rateperUnitParameter, salepriceParameter, minimumQtyParameter, reorderQtyParameter, qtyonHandParameter, itemLocationParameter, itemUnitsParameter, warrantyParameter, activeParameter, createdDateParameter, modifiedDateParameter, updatedbyParameter, partNumberParameter, companyIDParameter, isDeletedParameter, nonStockParameter, qtyCommittedParameter, qtyOnOrderParameter, checkedParameter, manufacturerIDParameter);
        }
    
        public virtual int CRM_INSERT_UPDATE_LEAD_ACTIVITY(Nullable<long> leadhistoryId, string historyType, string startTime, string endtime, string status, string details, string createdBy, string eventType, Nullable<long> leadid, Nullable<System.DateTime> startDate, string priority, string remindDate, string remindTime, Nullable<System.DateTime> completedDate, string assignedTo, string accountId, string accountName, Nullable<bool> notificationFlag, string activityAttachment, string createdDate, ObjectParameter leadHisId)
        {
            var leadhistoryIdParameter = leadhistoryId.HasValue ?
                new ObjectParameter("LeadhistoryId", leadhistoryId) :
                new ObjectParameter("LeadhistoryId", typeof(long));
    
            var historyTypeParameter = historyType != null ?
                new ObjectParameter("HistoryType", historyType) :
                new ObjectParameter("HistoryType", typeof(string));
    
            var startTimeParameter = startTime != null ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(string));
    
            var endtimeParameter = endtime != null ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var detailsParameter = details != null ?
                new ObjectParameter("details", details) :
                new ObjectParameter("details", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var eventTypeParameter = eventType != null ?
                new ObjectParameter("eventType", eventType) :
                new ObjectParameter("eventType", typeof(string));
    
            var leadidParameter = leadid.HasValue ?
                new ObjectParameter("Leadid", leadid) :
                new ObjectParameter("Leadid", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var priorityParameter = priority != null ?
                new ObjectParameter("priority", priority) :
                new ObjectParameter("priority", typeof(string));
    
            var remindDateParameter = remindDate != null ?
                new ObjectParameter("remindDate", remindDate) :
                new ObjectParameter("remindDate", typeof(string));
    
            var remindTimeParameter = remindTime != null ?
                new ObjectParameter("remindTime", remindTime) :
                new ObjectParameter("remindTime", typeof(string));
    
            var completedDateParameter = completedDate.HasValue ?
                new ObjectParameter("completedDate", completedDate) :
                new ObjectParameter("completedDate", typeof(System.DateTime));
    
            var assignedToParameter = assignedTo != null ?
                new ObjectParameter("assignedTo", assignedTo) :
                new ObjectParameter("assignedTo", typeof(string));
    
            var accountIdParameter = accountId != null ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(string));
    
            var accountNameParameter = accountName != null ?
                new ObjectParameter("AccountName", accountName) :
                new ObjectParameter("AccountName", typeof(string));
    
            var notificationFlagParameter = notificationFlag.HasValue ?
                new ObjectParameter("NotificationFlag", notificationFlag) :
                new ObjectParameter("NotificationFlag", typeof(bool));
    
            var activityAttachmentParameter = activityAttachment != null ?
                new ObjectParameter("ActivityAttachment", activityAttachment) :
                new ObjectParameter("ActivityAttachment", typeof(string));
    
            var createdDateParameter = createdDate != null ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_INSERT_UPDATE_LEAD_ACTIVITY", leadhistoryIdParameter, historyTypeParameter, startTimeParameter, endtimeParameter, statusParameter, detailsParameter, createdByParameter, eventTypeParameter, leadidParameter, startDateParameter, priorityParameter, remindDateParameter, remindTimeParameter, completedDateParameter, assignedToParameter, accountIdParameter, accountNameParameter, notificationFlagParameter, activityAttachmentParameter, createdDateParameter, leadHisId);
        }
    
        public virtual ObjectResult<CRM_InvoicePayment_ChartStatusCount_Result> CRM_InvoicePayment_ChartStatusCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_InvoicePayment_ChartStatusCount_Result>("CRM_InvoicePayment_ChartStatusCount");
        }
    
        public virtual ObjectResult<CRM_Dashboard_PaymentsDetails_Result> CRM_Dashboard_PaymentsDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_Dashboard_PaymentsDetails_Result>("CRM_Dashboard_PaymentsDetails");
        }
    
        public virtual ObjectResult<CRM_WeeklyPayment_ChartDetails_Result> CRM_WeeklyPayment_ChartDetails(string fromDate, string toDate)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_WeeklyPayment_ChartDetails_Result>("CRM_WeeklyPayment_ChartDetails", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<CRM_GetMenuByRoleId_Result> CRM_GetMenuByRoleId(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetMenuByRoleId_Result>("CRM_GetMenuByRoleId", roleIdParameter);
        }
    
        public virtual ObjectResult<CRM_OpportunityDetailsByID_Result> CRM_OpportunityDetailsByID(Nullable<int> opprId)
        {
            var opprIdParameter = opprId.HasValue ?
                new ObjectParameter("OpprId", opprId) :
                new ObjectParameter("OpprId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_OpportunityDetailsByID_Result>("CRM_OpportunityDetailsByID", opprIdParameter);
        }
    
        public virtual ObjectResult<CRM_GetAllOpportunitiesList_Result> CRM_GetAllOpportunitiesList(Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetAllOpportunitiesList_Result>("CRM_GetAllOpportunitiesList", startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<CRM_GetAllInvoicesList_Result> CRM_GetAllInvoicesList(string queryType, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecords)
        {
            var queryTypeParameter = queryType != null ?
                new ObjectParameter("QueryType", queryType) :
                new ObjectParameter("QueryType", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetAllInvoicesList_Result>("CRM_GetAllInvoicesList", queryTypeParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecords);
        }
    
        public virtual ObjectResult<CRM_GETINVOICEDETAILSBYINVID_Result> CRM_GETINVOICEDETAILSBYINVID(Nullable<int> invoiceId)
        {
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GETINVOICEDETAILSBYINVID_Result>("CRM_GETINVOICEDETAILSBYINVID", invoiceIdParameter);
        }
    
        public virtual ObjectResult<CRM_GetAllEstimateInvoicesList_Result> CRM_GetAllEstimateInvoicesList(Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecords)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetAllEstimateInvoicesList_Result>("CRM_GetAllEstimateInvoicesList", startIndexParameter, pageSizeParameter, sortingParameter, totalRecords);
        }
    
        public virtual ObjectResult<CRM_GET_ESTIMATEINVOICEDETAILSBY_ID_Result> CRM_GET_ESTIMATEINVOICEDETAILSBY_ID(Nullable<int> estInvoiceId)
        {
            var estInvoiceIdParameter = estInvoiceId.HasValue ?
                new ObjectParameter("EstInvoiceId", estInvoiceId) :
                new ObjectParameter("EstInvoiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GET_ESTIMATEINVOICEDETAILSBY_ID_Result>("CRM_GET_ESTIMATEINVOICEDETAILSBY_ID", estInvoiceIdParameter);
        }
    
        public virtual ObjectResult<CRM_GetAllPaymentsbyinvoiceId_Result> CRM_GetAllPaymentsbyinvoiceId(string invoiceid, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecords)
        {
            var invoiceidParameter = invoiceid != null ?
                new ObjectParameter("invoiceid", invoiceid) :
                new ObjectParameter("invoiceid", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetAllPaymentsbyinvoiceId_Result>("CRM_GetAllPaymentsbyinvoiceId", invoiceidParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecords);
        }
    
        public virtual ObjectResult<CRM_GET_INVOICELIST_BYCUSID_Result> CRM_GET_INVOICELIST_BYCUSID(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GET_INVOICELIST_BYCUSID_Result>("CRM_GET_INVOICELIST_BYCUSID", customerIdParameter);
        }
    
        public virtual ObjectResult<CRM_Dshbord_ActivitymoduleCount_Result> CRM_Dshbord_ActivitymoduleCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_Dshbord_ActivitymoduleCount_Result>("CRM_Dshbord_ActivitymoduleCount");
        }
    
        public virtual ObjectResult<CRM_GETCONTACTSFORCOMPANY_Result> CRM_GETCONTACTSFORCOMPANY(Nullable<long> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GETCONTACTSFORCOMPANY_Result>("CRM_GETCONTACTSFORCOMPANY", companyIdParameter);
        }
    
        public virtual ObjectResult<CRM_Dashboard_ModulesCountdetails_Result> CRM_Dashboard_ModulesCountdetails(string loginID, string roleId)
        {
            var loginIDParameter = loginID != null ?
                new ObjectParameter("loginID", loginID) :
                new ObjectParameter("loginID", typeof(string));
    
            var roleIdParameter = roleId != null ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_Dashboard_ModulesCountdetails_Result>("CRM_Dashboard_ModulesCountdetails", loginIDParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<CRM_AccountOpportunityDetailsByID_Result> CRM_AccountOpportunityDetailsByID(Nullable<int> opprId)
        {
            var opprIdParameter = opprId.HasValue ?
                new ObjectParameter("OpprId", opprId) :
                new ObjectParameter("OpprId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_AccountOpportunityDetailsByID_Result>("CRM_AccountOpportunityDetailsByID", opprIdParameter);
        }
    
        public virtual ObjectResult<CRM_AccountContactDetailsByID_Result> CRM_AccountContactDetailsByID(Nullable<int> opprId)
        {
            var opprIdParameter = opprId.HasValue ?
                new ObjectParameter("OpprId", opprId) :
                new ObjectParameter("OpprId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_AccountContactDetailsByID_Result>("CRM_AccountContactDetailsByID", opprIdParameter);
        }
    
        public virtual int CRM_GetUSERIdFromUSERName(string userName, ObjectParameter outUserId)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_GetUSERIdFromUSERName", userNameParameter, outUserId);
        }
    
        public virtual ObjectResult<CRM_GetAllCompanies_Result> CRM_GetAllCompanies(string keyword, Nullable<int> ownerID, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var ownerIDParameter = ownerID.HasValue ?
                new ObjectParameter("OwnerID", ownerID) :
                new ObjectParameter("OwnerID", typeof(int));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetAllCompanies_Result>("CRM_GetAllCompanies", keywordParameter, ownerIDParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<CRM_GetAllAccountOpportunities_Result> CRM_GetAllAccountOpportunities(string keyword, Nullable<int> companyID, Nullable<int> ownerID, Nullable<int> stageID, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var ownerIDParameter = ownerID.HasValue ?
                new ObjectParameter("OwnerID", ownerID) :
                new ObjectParameter("OwnerID", typeof(int));
    
            var stageIDParameter = stageID.HasValue ?
                new ObjectParameter("StageID", stageID) :
                new ObjectParameter("StageID", typeof(int));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetAllAccountOpportunities_Result>("CRM_GetAllAccountOpportunities", keywordParameter, companyIDParameter, ownerIDParameter, stageIDParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<CRM_GetAllAccountLeads_Result> CRM_GetAllAccountLeads(string keyword, Nullable<int> ownerID, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var ownerIDParameter = ownerID.HasValue ?
                new ObjectParameter("OwnerID", ownerID) :
                new ObjectParameter("OwnerID", typeof(int));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetAllAccountLeads_Result>("CRM_GetAllAccountLeads", keywordParameter, ownerIDParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<string> CRM_Get_Username(string firstname, string lastname)
        {
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CRM_Get_Username", firstnameParameter, lastnameParameter);
        }
    
        public virtual int CRM_Add_UserRoles(string roleName, string status, string description)
        {
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_Add_UserRoles", roleNameParameter, statusParameter, descriptionParameter);
        }
    
        public virtual int CRM_GetCountryIdFromCountryName(string countryName, ObjectParameter outCountryId)
        {
            var countryNameParameter = countryName != null ?
                new ObjectParameter("CountryName", countryName) :
                new ObjectParameter("CountryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_GetCountryIdFromCountryName", countryNameParameter, outCountryId);
        }
    
        public virtual int CRM_GetStateIdFromStateName(string stateName, ObjectParameter outStateId)
        {
            var stateNameParameter = stateName != null ?
                new ObjectParameter("StateName", stateName) :
                new ObjectParameter("StateName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_GetStateIdFromStateName", stateNameParameter, outStateId);
        }
    
        public virtual ObjectResult<CRM_GetLevels_Result> CRM_GetLevels()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetLevels_Result>("CRM_GetLevels");
        }
    
        public virtual ObjectResult<CRM_GetAllCompanyContacts_Result> CRM_GetAllCompanyContacts(Nullable<int> companyID, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetAllCompanyContacts_Result>("CRM_GetAllCompanyContacts", companyIDParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<CRM_GetCompanyInvoicesList_Result> CRM_GetCompanyInvoicesList(Nullable<int> companyId, string queryType, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecords)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("companyId", companyId) :
                new ObjectParameter("companyId", typeof(int));
    
            var queryTypeParameter = queryType != null ?
                new ObjectParameter("QueryType", queryType) :
                new ObjectParameter("QueryType", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetCompanyInvoicesList_Result>("CRM_GetCompanyInvoicesList", companyIdParameter, queryTypeParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecords);
        }
    
        public virtual ObjectResult<CRM_GetActivitiesListByCompanyID_Result> CRM_GetActivitiesListByCompanyID(Nullable<int> iD, Nullable<int> accountType, string module, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var accountTypeParameter = accountType.HasValue ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(int));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetActivitiesListByCompanyID_Result>("CRM_GetActivitiesListByCompanyID", iDParameter, accountTypeParameter, moduleParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<CRM_GetAllAccountContacts_Result> CRM_GetAllAccountContacts(Nullable<int> createdby, string keyword, Nullable<int> companyID, Nullable<int> ownerID, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("Createdby", createdby) :
                new ObjectParameter("Createdby", typeof(int));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var ownerIDParameter = ownerID.HasValue ?
                new ObjectParameter("OwnerID", ownerID) :
                new ObjectParameter("OwnerID", typeof(int));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetAllAccountContacts_Result>("CRM_GetAllAccountContacts", createdbyParameter, keywordParameter, companyIDParameter, ownerIDParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<Venture_GetVMSStatus_Result> Venture_GetVMSStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Venture_GetVMSStatus_Result>("Venture_GetVMSStatus");
        }
    
        public virtual ObjectResult<Venture_IsVentureExists_Result1> Venture_IsVentureExists(string ventureName)
        {
            var ventureNameParameter = ventureName != null ?
                new ObjectParameter("VentureName", ventureName) :
                new ObjectParameter("VentureName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Venture_IsVentureExists_Result1>("Venture_IsVentureExists", ventureNameParameter);
        }
    
        public virtual ObjectResult<CRM_GETALL_Activities_Result> CRM_GETALL_Activities(string keyword, string type, string priority, string status, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var priorityParameter = priority != null ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GETALL_Activities_Result>("CRM_GETALL_Activities", keywordParameter, typeParameter, priorityParameter, statusParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<CRM_GETEMPLOYEENotification_Result> CRM_GETEMPLOYEENotification(string employeeId, string status, string sorting)
        {
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("employeeId", employeeId) :
                new ObjectParameter("employeeId", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GETEMPLOYEENotification_Result>("CRM_GETEMPLOYEENotification", employeeIdParameter, statusParameter, sortingParameter);
        }
    
        public virtual ObjectResult<CRM_GETALLNotification_Result> CRM_GETALLNotification(Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GETALLNotification_Result>("CRM_GETALLNotification", startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<CRM_GetNotificationsList_Result> CRM_GetNotificationsList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetNotificationsList_Result>("CRM_GetNotificationsList");
        }
    
        public virtual int CRM_UpdateUserDetails(Nullable<decimal> userId, string firstName, string lastName, string addressLine1, string addressLine2, string city, string stateCode, string postalCode, string mobile, string phoneExt, string fax, string comment, string cellno, Nullable<System.DateTime> dateofbirth, string gender)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(decimal));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var addressLine1Parameter = addressLine1 != null ?
                new ObjectParameter("addressLine1", addressLine1) :
                new ObjectParameter("addressLine1", typeof(string));
    
            var addressLine2Parameter = addressLine2 != null ?
                new ObjectParameter("addressLine2", addressLine2) :
                new ObjectParameter("addressLine2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("postalCode", postalCode) :
                new ObjectParameter("postalCode", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var phoneExtParameter = phoneExt != null ?
                new ObjectParameter("phoneExt", phoneExt) :
                new ObjectParameter("phoneExt", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            var cellnoParameter = cellno != null ?
                new ObjectParameter("cellno", cellno) :
                new ObjectParameter("cellno", typeof(string));
    
            var dateofbirthParameter = dateofbirth.HasValue ?
                new ObjectParameter("dateofbirth", dateofbirth) :
                new ObjectParameter("dateofbirth", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_UpdateUserDetails", userIdParameter, firstNameParameter, lastNameParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateCodeParameter, postalCodeParameter, mobileParameter, phoneExtParameter, faxParameter, commentParameter, cellnoParameter, dateofbirthParameter, genderParameter);
        }
    
        public virtual int CRM_UpdatePassword(Nullable<decimal> userid, string password)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(decimal));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_UpdatePassword", useridParameter, passwordParameter);
        }
    
        public virtual ObjectResult<CRM_GetDynamicMenuByRoleId_Result> CRM_GetDynamicMenuByRoleId(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetDynamicMenuByRoleId_Result>("CRM_GetDynamicMenuByRoleId", roleIdParameter);
        }
    
        public virtual int Mentor_CreateUserDetails(string firstName, string middleInitial, string lastName, string addressLine1, string addressLine2, string city, string stateCode, string postalCode, string mobile, string phoneExt, string fax, string email, string comment, string outlookEmail, Nullable<decimal> level, string branch, string cellno, Nullable<System.DateTime> dateofbirth, Nullable<bool> isCorporate, Nullable<bool> isSMS, string smsEmail, string smsPwd, string smsSMTP, string smsPort, string loginId, string password)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleInitialParameter = middleInitial != null ?
                new ObjectParameter("middleInitial", middleInitial) :
                new ObjectParameter("middleInitial", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var addressLine1Parameter = addressLine1 != null ?
                new ObjectParameter("addressLine1", addressLine1) :
                new ObjectParameter("addressLine1", typeof(string));
    
            var addressLine2Parameter = addressLine2 != null ?
                new ObjectParameter("addressLine2", addressLine2) :
                new ObjectParameter("addressLine2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("postalCode", postalCode) :
                new ObjectParameter("postalCode", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var phoneExtParameter = phoneExt != null ?
                new ObjectParameter("phoneExt", phoneExt) :
                new ObjectParameter("phoneExt", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            var outlookEmailParameter = outlookEmail != null ?
                new ObjectParameter("OutlookEmail", outlookEmail) :
                new ObjectParameter("OutlookEmail", typeof(string));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(decimal));
    
            var branchParameter = branch != null ?
                new ObjectParameter("branch", branch) :
                new ObjectParameter("branch", typeof(string));
    
            var cellnoParameter = cellno != null ?
                new ObjectParameter("cellno", cellno) :
                new ObjectParameter("cellno", typeof(string));
    
            var dateofbirthParameter = dateofbirth.HasValue ?
                new ObjectParameter("dateofbirth", dateofbirth) :
                new ObjectParameter("dateofbirth", typeof(System.DateTime));
    
            var isCorporateParameter = isCorporate.HasValue ?
                new ObjectParameter("isCorporate", isCorporate) :
                new ObjectParameter("isCorporate", typeof(bool));
    
            var isSMSParameter = isSMS.HasValue ?
                new ObjectParameter("isSMS", isSMS) :
                new ObjectParameter("isSMS", typeof(bool));
    
            var smsEmailParameter = smsEmail != null ?
                new ObjectParameter("smsEmail", smsEmail) :
                new ObjectParameter("smsEmail", typeof(string));
    
            var smsPwdParameter = smsPwd != null ?
                new ObjectParameter("smsPwd", smsPwd) :
                new ObjectParameter("smsPwd", typeof(string));
    
            var smsSMTPParameter = smsSMTP != null ?
                new ObjectParameter("smsSMTP", smsSMTP) :
                new ObjectParameter("smsSMTP", typeof(string));
    
            var smsPortParameter = smsPort != null ?
                new ObjectParameter("smsPort", smsPort) :
                new ObjectParameter("smsPort", typeof(string));
    
            var loginIdParameter = loginId != null ?
                new ObjectParameter("loginId", loginId) :
                new ObjectParameter("loginId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Mentor_CreateUserDetails", firstNameParameter, middleInitialParameter, lastNameParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateCodeParameter, postalCodeParameter, mobileParameter, phoneExtParameter, faxParameter, emailParameter, commentParameter, outlookEmailParameter, levelParameter, branchParameter, cellnoParameter, dateofbirthParameter, isCorporateParameter, isSMSParameter, smsEmailParameter, smsPwdParameter, smsSMTPParameter, smsPortParameter, loginIdParameter, passwordParameter);
        }
    
        public virtual ObjectResult<CRM_SecureLogin_Result> CRM_SecureLogin(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_SecureLogin_Result>("CRM_SecureLogin", userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<User_GetAllUsers_Result> User_GetAllUsers(string keyword, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User_GetAllUsers_Result>("User_GetAllUsers", keywordParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<Roles_GetAllRoles_Result> Roles_GetAllRoles(string keyword, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Roles_GetAllRoles_Result>("Roles_GetAllRoles", keywordParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<CRM_ActivityDetailsByID_Result> CRM_ActivityDetailsByID(Nullable<int> activityId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("ActivityId", activityId) :
                new ObjectParameter("ActivityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_ActivityDetailsByID_Result>("CRM_ActivityDetailsByID", activityIdParameter);
        }
    
        public virtual ObjectResult<GET_Events_Result> GET_Events(Nullable<int> pageSize, Nullable<int> startIndex, ObjectParameter totalRecordsCount)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_Events_Result>("GET_Events", pageSizeParameter, startIndexParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<CRM_GETALLMentoringNotifications_Result> CRM_GETALLMentoringNotifications(string keyword, Nullable<int> id, Nullable<int> roleid, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("roleid", roleid) :
                new ObjectParameter("roleid", typeof(int));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GETALLMentoringNotifications_Result>("CRM_GETALLMentoringNotifications", keywordParameter, idParameter, roleidParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<CRM_GetAllActivitiesList_Result> CRM_GetAllActivitiesList(string keyword, Nullable<int> userid, Nullable<int> roleid, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("roleid", roleid) :
                new ObjectParameter("roleid", typeof(int));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_GetAllActivitiesList_Result>("CRM_GetAllActivitiesList", keywordParameter, useridParameter, roleidParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount);
        }
    
        public virtual ObjectResult<Mentor_GetAllMentors_Result> Mentor_GetAllMentors(string keyword, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount, Nullable<int> id, string roleid, string isfrom, string alphanumericsort)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var roleidParameter = roleid != null ?
                new ObjectParameter("roleid", roleid) :
                new ObjectParameter("roleid", typeof(string));
    
            var isfromParameter = isfrom != null ?
                new ObjectParameter("Isfrom", isfrom) :
                new ObjectParameter("Isfrom", typeof(string));
    
            var alphanumericsortParameter = alphanumericsort != null ?
                new ObjectParameter("Alphanumericsort", alphanumericsort) :
                new ObjectParameter("Alphanumericsort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Mentor_GetAllMentors_Result>("Mentor_GetAllMentors", keywordParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount, idParameter, roleidParameter, isfromParameter, alphanumericsortParameter);
        }
    
        public virtual ObjectResult<Appointments_GetAllAppointmentsbyMentorId_Result> Appointments_GetAllAppointmentsbyMentorId(string keyword, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount, Nullable<long> id, Nullable<int> isMentor, Nullable<int> isdashborad, Nullable<int> roleid)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var isMentorParameter = isMentor.HasValue ?
                new ObjectParameter("IsMentor", isMentor) :
                new ObjectParameter("IsMentor", typeof(int));
    
            var isdashboradParameter = isdashborad.HasValue ?
                new ObjectParameter("Isdashborad", isdashborad) :
                new ObjectParameter("Isdashborad", typeof(int));
    
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("roleid", roleid) :
                new ObjectParameter("roleid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Appointments_GetAllAppointmentsbyMentorId_Result>("Appointments_GetAllAppointmentsbyMentorId", keywordParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount, idParameter, isMentorParameter, isdashboradParameter, roleidParameter);
        }
    
        public virtual ObjectResult<Scheduler_GetAllMeetings_Result> Scheduler_GetAllMeetings(string role, Nullable<long> id, string keyword)
        {
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Scheduler_GetAllMeetings_Result>("Scheduler_GetAllMeetings", roleParameter, idParameter, keywordParameter);
        }
    
        public virtual int Venture_CreateVenture(string email, string userName, string password, string venturename, string leadmentor, Nullable<int> vmsStatusId, string primaryContact, string primaryEmail, string secondaryContact, string secondaryEmail, string dropBox, string dropBoxFolder, string description, string publicDesc, string contactInfo, string vmsMailList, string signUpReturned, string address, string address1, string phone, string fax, string cellular, string webSite, string mITLink, Nullable<bool> studentIdeaBasedOnResearch, Nullable<bool> researchIdeaDisclosedToTLO, Nullable<bool> legalEntityAtEnrollment, string refferedBy, string firstMentorMeeting, string comments, string intakeNotes, string intakeNoteSummary, string secondContact, Nullable<bool> introduced, string seachIndex, Nullable<System.DateTime> createdDate, Nullable<int> createdBY, Nullable<System.DateTime> modifiedDate)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var venturenameParameter = venturename != null ?
                new ObjectParameter("Venturename", venturename) :
                new ObjectParameter("Venturename", typeof(string));
    
            var leadmentorParameter = leadmentor != null ?
                new ObjectParameter("Leadmentor", leadmentor) :
                new ObjectParameter("Leadmentor", typeof(string));
    
            var vmsStatusIdParameter = vmsStatusId.HasValue ?
                new ObjectParameter("VmsStatusId", vmsStatusId) :
                new ObjectParameter("VmsStatusId", typeof(int));
    
            var primaryContactParameter = primaryContact != null ?
                new ObjectParameter("PrimaryContact", primaryContact) :
                new ObjectParameter("PrimaryContact", typeof(string));
    
            var primaryEmailParameter = primaryEmail != null ?
                new ObjectParameter("PrimaryEmail", primaryEmail) :
                new ObjectParameter("PrimaryEmail", typeof(string));
    
            var secondaryContactParameter = secondaryContact != null ?
                new ObjectParameter("SecondaryContact", secondaryContact) :
                new ObjectParameter("SecondaryContact", typeof(string));
    
            var secondaryEmailParameter = secondaryEmail != null ?
                new ObjectParameter("SecondaryEmail", secondaryEmail) :
                new ObjectParameter("SecondaryEmail", typeof(string));
    
            var dropBoxParameter = dropBox != null ?
                new ObjectParameter("DropBox", dropBox) :
                new ObjectParameter("DropBox", typeof(string));
    
            var dropBoxFolderParameter = dropBoxFolder != null ?
                new ObjectParameter("DropBoxFolder", dropBoxFolder) :
                new ObjectParameter("DropBoxFolder", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var publicDescParameter = publicDesc != null ?
                new ObjectParameter("PublicDesc", publicDesc) :
                new ObjectParameter("PublicDesc", typeof(string));
    
            var contactInfoParameter = contactInfo != null ?
                new ObjectParameter("ContactInfo", contactInfo) :
                new ObjectParameter("ContactInfo", typeof(string));
    
            var vmsMailListParameter = vmsMailList != null ?
                new ObjectParameter("VmsMailList", vmsMailList) :
                new ObjectParameter("VmsMailList", typeof(string));
    
            var signUpReturnedParameter = signUpReturned != null ?
                new ObjectParameter("SignUpReturned", signUpReturned) :
                new ObjectParameter("SignUpReturned", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var cellularParameter = cellular != null ?
                new ObjectParameter("Cellular", cellular) :
                new ObjectParameter("Cellular", typeof(string));
    
            var webSiteParameter = webSite != null ?
                new ObjectParameter("WebSite", webSite) :
                new ObjectParameter("WebSite", typeof(string));
    
            var mITLinkParameter = mITLink != null ?
                new ObjectParameter("MITLink", mITLink) :
                new ObjectParameter("MITLink", typeof(string));
    
            var studentIdeaBasedOnResearchParameter = studentIdeaBasedOnResearch.HasValue ?
                new ObjectParameter("StudentIdeaBasedOnResearch", studentIdeaBasedOnResearch) :
                new ObjectParameter("StudentIdeaBasedOnResearch", typeof(bool));
    
            var researchIdeaDisclosedToTLOParameter = researchIdeaDisclosedToTLO.HasValue ?
                new ObjectParameter("ResearchIdeaDisclosedToTLO", researchIdeaDisclosedToTLO) :
                new ObjectParameter("ResearchIdeaDisclosedToTLO", typeof(bool));
    
            var legalEntityAtEnrollmentParameter = legalEntityAtEnrollment.HasValue ?
                new ObjectParameter("LegalEntityAtEnrollment", legalEntityAtEnrollment) :
                new ObjectParameter("LegalEntityAtEnrollment", typeof(bool));
    
            var refferedByParameter = refferedBy != null ?
                new ObjectParameter("RefferedBy", refferedBy) :
                new ObjectParameter("RefferedBy", typeof(string));
    
            var firstMentorMeetingParameter = firstMentorMeeting != null ?
                new ObjectParameter("FirstMentorMeeting", firstMentorMeeting) :
                new ObjectParameter("FirstMentorMeeting", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var intakeNotesParameter = intakeNotes != null ?
                new ObjectParameter("IntakeNotes", intakeNotes) :
                new ObjectParameter("IntakeNotes", typeof(string));
    
            var intakeNoteSummaryParameter = intakeNoteSummary != null ?
                new ObjectParameter("IntakeNoteSummary", intakeNoteSummary) :
                new ObjectParameter("IntakeNoteSummary", typeof(string));
    
            var secondContactParameter = secondContact != null ?
                new ObjectParameter("SecondContact", secondContact) :
                new ObjectParameter("SecondContact", typeof(string));
    
            var introducedParameter = introduced.HasValue ?
                new ObjectParameter("Introduced", introduced) :
                new ObjectParameter("Introduced", typeof(bool));
    
            var seachIndexParameter = seachIndex != null ?
                new ObjectParameter("SeachIndex", seachIndex) :
                new ObjectParameter("SeachIndex", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var createdBYParameter = createdBY.HasValue ?
                new ObjectParameter("CreatedBY", createdBY) :
                new ObjectParameter("CreatedBY", typeof(int));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Venture_CreateVenture", emailParameter, userNameParameter, passwordParameter, venturenameParameter, leadmentorParameter, vmsStatusIdParameter, primaryContactParameter, primaryEmailParameter, secondaryContactParameter, secondaryEmailParameter, dropBoxParameter, dropBoxFolderParameter, descriptionParameter, publicDescParameter, contactInfoParameter, vmsMailListParameter, signUpReturnedParameter, addressParameter, address1Parameter, phoneParameter, faxParameter, cellularParameter, webSiteParameter, mITLinkParameter, studentIdeaBasedOnResearchParameter, researchIdeaDisclosedToTLOParameter, legalEntityAtEnrollmentParameter, refferedByParameter, firstMentorMeetingParameter, commentsParameter, intakeNotesParameter, intakeNoteSummaryParameter, secondContactParameter, introducedParameter, seachIndexParameter, createdDateParameter, createdBYParameter, modifiedDateParameter);
        }
    
        public virtual ObjectResult<GetAllMentorsAcceptedDateTime_Result> GetAllMentorsAcceptedDateTime(string keyword, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, ObjectParameter totalRecordsCount, Nullable<long> id)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllMentorsAcceptedDateTime_Result>("GetAllMentorsAcceptedDateTime", keywordParameter, startIndexParameter, pageSizeParameter, sortingParameter, totalRecordsCount, idParameter);
        }
    
        public virtual int Venture_CreateVentureDetails(string ventureName, Nullable<int> vmsStatusId, string primaryContact, string primaryEmail, string secondaryContact, string secondaryEmail, Nullable<bool> legalEntityAtEnrollment, Nullable<System.DateTime> createdDate, string comments, string street, string city, string state, string zIP, string industryCategoryName, string categoryOthers, string primaryPhoneNo, string primaryRoleInVenture, string primaryColaborationAffiliation, string secondaryPhoneNo, string secondaryRoleInVenture, string scondaryColaborationAffiliation, string advertisement, string wouldLikeToElaborateSpecifics, string whatDoYouDo, string whatIsTheProblem, string whoHasIt, string howWillUSolveTheProblem, string howWillUMakeMoney, string whtIsTheSecretSauce, string isThereIP, string whatIsYourCurrentStatus, string whatTypeOfVMSHelpStartUpNeeds, string userName, string password)
        {
            var ventureNameParameter = ventureName != null ?
                new ObjectParameter("VentureName", ventureName) :
                new ObjectParameter("VentureName", typeof(string));
    
            var vmsStatusIdParameter = vmsStatusId.HasValue ?
                new ObjectParameter("VmsStatusId", vmsStatusId) :
                new ObjectParameter("VmsStatusId", typeof(int));
    
            var primaryContactParameter = primaryContact != null ?
                new ObjectParameter("PrimaryContact", primaryContact) :
                new ObjectParameter("PrimaryContact", typeof(string));
    
            var primaryEmailParameter = primaryEmail != null ?
                new ObjectParameter("PrimaryEmail", primaryEmail) :
                new ObjectParameter("PrimaryEmail", typeof(string));
    
            var secondaryContactParameter = secondaryContact != null ?
                new ObjectParameter("SecondaryContact", secondaryContact) :
                new ObjectParameter("SecondaryContact", typeof(string));
    
            var secondaryEmailParameter = secondaryEmail != null ?
                new ObjectParameter("SecondaryEmail", secondaryEmail) :
                new ObjectParameter("SecondaryEmail", typeof(string));
    
            var legalEntityAtEnrollmentParameter = legalEntityAtEnrollment.HasValue ?
                new ObjectParameter("LegalEntityAtEnrollment", legalEntityAtEnrollment) :
                new ObjectParameter("LegalEntityAtEnrollment", typeof(bool));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zIPParameter = zIP != null ?
                new ObjectParameter("ZIP", zIP) :
                new ObjectParameter("ZIP", typeof(string));
    
            var industryCategoryNameParameter = industryCategoryName != null ?
                new ObjectParameter("IndustryCategoryName", industryCategoryName) :
                new ObjectParameter("IndustryCategoryName", typeof(string));
    
            var categoryOthersParameter = categoryOthers != null ?
                new ObjectParameter("CategoryOthers", categoryOthers) :
                new ObjectParameter("CategoryOthers", typeof(string));
    
            var primaryPhoneNoParameter = primaryPhoneNo != null ?
                new ObjectParameter("PrimaryPhoneNo", primaryPhoneNo) :
                new ObjectParameter("PrimaryPhoneNo", typeof(string));
    
            var primaryRoleInVentureParameter = primaryRoleInVenture != null ?
                new ObjectParameter("PrimaryRoleInVenture", primaryRoleInVenture) :
                new ObjectParameter("PrimaryRoleInVenture", typeof(string));
    
            var primaryColaborationAffiliationParameter = primaryColaborationAffiliation != null ?
                new ObjectParameter("PrimaryColaborationAffiliation", primaryColaborationAffiliation) :
                new ObjectParameter("PrimaryColaborationAffiliation", typeof(string));
    
            var secondaryPhoneNoParameter = secondaryPhoneNo != null ?
                new ObjectParameter("SecondaryPhoneNo", secondaryPhoneNo) :
                new ObjectParameter("SecondaryPhoneNo", typeof(string));
    
            var secondaryRoleInVentureParameter = secondaryRoleInVenture != null ?
                new ObjectParameter("SecondaryRoleInVenture", secondaryRoleInVenture) :
                new ObjectParameter("SecondaryRoleInVenture", typeof(string));
    
            var scondaryColaborationAffiliationParameter = scondaryColaborationAffiliation != null ?
                new ObjectParameter("ScondaryColaborationAffiliation", scondaryColaborationAffiliation) :
                new ObjectParameter("ScondaryColaborationAffiliation", typeof(string));
    
            var advertisementParameter = advertisement != null ?
                new ObjectParameter("Advertisement", advertisement) :
                new ObjectParameter("Advertisement", typeof(string));
    
            var wouldLikeToElaborateSpecificsParameter = wouldLikeToElaborateSpecifics != null ?
                new ObjectParameter("WouldLikeToElaborateSpecifics", wouldLikeToElaborateSpecifics) :
                new ObjectParameter("WouldLikeToElaborateSpecifics", typeof(string));
    
            var whatDoYouDoParameter = whatDoYouDo != null ?
                new ObjectParameter("WhatDoYouDo", whatDoYouDo) :
                new ObjectParameter("WhatDoYouDo", typeof(string));
    
            var whatIsTheProblemParameter = whatIsTheProblem != null ?
                new ObjectParameter("WhatIsTheProblem", whatIsTheProblem) :
                new ObjectParameter("WhatIsTheProblem", typeof(string));
    
            var whoHasItParameter = whoHasIt != null ?
                new ObjectParameter("WhoHasIt", whoHasIt) :
                new ObjectParameter("WhoHasIt", typeof(string));
    
            var howWillUSolveTheProblemParameter = howWillUSolveTheProblem != null ?
                new ObjectParameter("HowWillUSolveTheProblem", howWillUSolveTheProblem) :
                new ObjectParameter("HowWillUSolveTheProblem", typeof(string));
    
            var howWillUMakeMoneyParameter = howWillUMakeMoney != null ?
                new ObjectParameter("HowWillUMakeMoney", howWillUMakeMoney) :
                new ObjectParameter("HowWillUMakeMoney", typeof(string));
    
            var whtIsTheSecretSauceParameter = whtIsTheSecretSauce != null ?
                new ObjectParameter("WhtIsTheSecretSauce", whtIsTheSecretSauce) :
                new ObjectParameter("WhtIsTheSecretSauce", typeof(string));
    
            var isThereIPParameter = isThereIP != null ?
                new ObjectParameter("IsThereIP", isThereIP) :
                new ObjectParameter("IsThereIP", typeof(string));
    
            var whatIsYourCurrentStatusParameter = whatIsYourCurrentStatus != null ?
                new ObjectParameter("WhatIsYourCurrentStatus", whatIsYourCurrentStatus) :
                new ObjectParameter("WhatIsYourCurrentStatus", typeof(string));
    
            var whatTypeOfVMSHelpStartUpNeedsParameter = whatTypeOfVMSHelpStartUpNeeds != null ?
                new ObjectParameter("WhatTypeOfVMSHelpStartUpNeeds", whatTypeOfVMSHelpStartUpNeeds) :
                new ObjectParameter("WhatTypeOfVMSHelpStartUpNeeds", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Venture_CreateVentureDetails", ventureNameParameter, vmsStatusIdParameter, primaryContactParameter, primaryEmailParameter, secondaryContactParameter, secondaryEmailParameter, legalEntityAtEnrollmentParameter, createdDateParameter, commentsParameter, streetParameter, cityParameter, stateParameter, zIPParameter, industryCategoryNameParameter, categoryOthersParameter, primaryPhoneNoParameter, primaryRoleInVentureParameter, primaryColaborationAffiliationParameter, secondaryPhoneNoParameter, secondaryRoleInVentureParameter, scondaryColaborationAffiliationParameter, advertisementParameter, wouldLikeToElaborateSpecificsParameter, whatDoYouDoParameter, whatIsTheProblemParameter, whoHasItParameter, howWillUSolveTheProblemParameter, howWillUMakeMoneyParameter, whtIsTheSecretSauceParameter, isThereIPParameter, whatIsYourCurrentStatusParameter, whatTypeOfVMSHelpStartUpNeedsParameter, userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Venture_GetPendingVentureDetails_Result> Venture_GetPendingVentureDetails(Nullable<long> strventureid)
        {
            var strventureidParameter = strventureid.HasValue ?
                new ObjectParameter("strventureid", strventureid) :
                new ObjectParameter("strventureid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Venture_GetPendingVentureDetails_Result>("Venture_GetPendingVentureDetails", strventureidParameter);
        }
    
        public virtual ObjectResult<Venture_GetVentureDetails_Result> Venture_GetVentureDetails(Nullable<long> strventureid)
        {
            var strventureidParameter = strventureid.HasValue ?
                new ObjectParameter("strventureid", strventureid) :
                new ObjectParameter("strventureid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Venture_GetVentureDetails_Result>("Venture_GetVentureDetails", strventureidParameter);
        }
    
        public virtual ObjectResult<Venture_GetAllVentures_Result> Venture_GetAllVentures(Nullable<int> ventureid, string keyword, Nullable<int> startIndex, Nullable<int> pageSize, string sorting, string alphanumericsort, ObjectParameter totalRecordsCount)
        {
            var ventureidParameter = ventureid.HasValue ?
                new ObjectParameter("ventureid", ventureid) :
                new ObjectParameter("ventureid", typeof(int));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingParameter = sorting != null ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(string));
    
            var alphanumericsortParameter = alphanumericsort != null ?
                new ObjectParameter("Alphanumericsort", alphanumericsort) :
                new ObjectParameter("Alphanumericsort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Venture_GetAllVentures_Result>("Venture_GetAllVentures", ventureidParameter, keywordParameter, startIndexParameter, pageSizeParameter, sortingParameter, alphanumericsortParameter, totalRecordsCount);
        }
    
        public virtual int Mentor_CreateMentorDetails(string firstName, string lastName, string organization, string title, string street1, string addressLine1, string city1, string stateProvinceRegion1, string zIP1, string telephone1, string telephone2, string primaryEmail, string linkedIn, string resume, string userName, string password, Nullable<System.DateTime> createdDate, ObjectParameter outID)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var organizationParameter = organization != null ?
                new ObjectParameter("Organization", organization) :
                new ObjectParameter("Organization", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var street1Parameter = street1 != null ?
                new ObjectParameter("Street1", street1) :
                new ObjectParameter("Street1", typeof(string));
    
            var addressLine1Parameter = addressLine1 != null ?
                new ObjectParameter("AddressLine1", addressLine1) :
                new ObjectParameter("AddressLine1", typeof(string));
    
            var city1Parameter = city1 != null ?
                new ObjectParameter("City1", city1) :
                new ObjectParameter("City1", typeof(string));
    
            var stateProvinceRegion1Parameter = stateProvinceRegion1 != null ?
                new ObjectParameter("StateProvinceRegion1", stateProvinceRegion1) :
                new ObjectParameter("StateProvinceRegion1", typeof(string));
    
            var zIP1Parameter = zIP1 != null ?
                new ObjectParameter("ZIP1", zIP1) :
                new ObjectParameter("ZIP1", typeof(string));
    
            var telephone1Parameter = telephone1 != null ?
                new ObjectParameter("Telephone1", telephone1) :
                new ObjectParameter("Telephone1", typeof(string));
    
            var telephone2Parameter = telephone2 != null ?
                new ObjectParameter("Telephone2", telephone2) :
                new ObjectParameter("Telephone2", typeof(string));
    
            var primaryEmailParameter = primaryEmail != null ?
                new ObjectParameter("PrimaryEmail", primaryEmail) :
                new ObjectParameter("PrimaryEmail", typeof(string));
    
            var linkedInParameter = linkedIn != null ?
                new ObjectParameter("LinkedIn", linkedIn) :
                new ObjectParameter("LinkedIn", typeof(string));
    
            var resumeParameter = resume != null ?
                new ObjectParameter("Resume", resume) :
                new ObjectParameter("Resume", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Mentor_CreateMentorDetails", firstNameParameter, lastNameParameter, organizationParameter, titleParameter, street1Parameter, addressLine1Parameter, city1Parameter, stateProvinceRegion1Parameter, zIP1Parameter, telephone1Parameter, telephone2Parameter, primaryEmailParameter, linkedInParameter, resumeParameter, userNameParameter, passwordParameter, createdDateParameter, outID);
        }
    
        public virtual int Mentor_Questionnaries(string prefix, string firstName, string middleName, string lastName, string suffix, string nickName, string organization, string title, string street1, string addressLine1, string city1, string stateProvinceRegion1, string zIP1, string country1, string street2, string addressLine2, string city2, string stateProvinceRegion2, string zIP2, string country2, string primaryEmail, string secondaryEmail, string skypeAddress, string twitterAddress, string linkedIn, string telephone1, string telephone2, string telephone3, string publicProfile, string startups, string businessModel, string funding, string others1, string software, string lifeSciences, string industryOther, string others2, string functionalAreas, string others3, string userName, string password, Nullable<long> mentorId)
        {
            var prefixParameter = prefix != null ?
                new ObjectParameter("Prefix", prefix) :
                new ObjectParameter("Prefix", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("Suffix", suffix) :
                new ObjectParameter("Suffix", typeof(string));
    
            var nickNameParameter = nickName != null ?
                new ObjectParameter("NickName", nickName) :
                new ObjectParameter("NickName", typeof(string));
    
            var organizationParameter = organization != null ?
                new ObjectParameter("Organization", organization) :
                new ObjectParameter("Organization", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var street1Parameter = street1 != null ?
                new ObjectParameter("Street1", street1) :
                new ObjectParameter("Street1", typeof(string));
    
            var addressLine1Parameter = addressLine1 != null ?
                new ObjectParameter("AddressLine1", addressLine1) :
                new ObjectParameter("AddressLine1", typeof(string));
    
            var city1Parameter = city1 != null ?
                new ObjectParameter("City1", city1) :
                new ObjectParameter("City1", typeof(string));
    
            var stateProvinceRegion1Parameter = stateProvinceRegion1 != null ?
                new ObjectParameter("StateProvinceRegion1", stateProvinceRegion1) :
                new ObjectParameter("StateProvinceRegion1", typeof(string));
    
            var zIP1Parameter = zIP1 != null ?
                new ObjectParameter("ZIP1", zIP1) :
                new ObjectParameter("ZIP1", typeof(string));
    
            var country1Parameter = country1 != null ?
                new ObjectParameter("Country1", country1) :
                new ObjectParameter("Country1", typeof(string));
    
            var street2Parameter = street2 != null ?
                new ObjectParameter("Street2", street2) :
                new ObjectParameter("Street2", typeof(string));
    
            var addressLine2Parameter = addressLine2 != null ?
                new ObjectParameter("AddressLine2", addressLine2) :
                new ObjectParameter("AddressLine2", typeof(string));
    
            var city2Parameter = city2 != null ?
                new ObjectParameter("City2", city2) :
                new ObjectParameter("City2", typeof(string));
    
            var stateProvinceRegion2Parameter = stateProvinceRegion2 != null ?
                new ObjectParameter("StateProvinceRegion2", stateProvinceRegion2) :
                new ObjectParameter("StateProvinceRegion2", typeof(string));
    
            var zIP2Parameter = zIP2 != null ?
                new ObjectParameter("ZIP2", zIP2) :
                new ObjectParameter("ZIP2", typeof(string));
    
            var country2Parameter = country2 != null ?
                new ObjectParameter("Country2", country2) :
                new ObjectParameter("Country2", typeof(string));
    
            var primaryEmailParameter = primaryEmail != null ?
                new ObjectParameter("PrimaryEmail", primaryEmail) :
                new ObjectParameter("PrimaryEmail", typeof(string));
    
            var secondaryEmailParameter = secondaryEmail != null ?
                new ObjectParameter("SecondaryEmail", secondaryEmail) :
                new ObjectParameter("SecondaryEmail", typeof(string));
    
            var skypeAddressParameter = skypeAddress != null ?
                new ObjectParameter("SkypeAddress", skypeAddress) :
                new ObjectParameter("SkypeAddress", typeof(string));
    
            var twitterAddressParameter = twitterAddress != null ?
                new ObjectParameter("TwitterAddress", twitterAddress) :
                new ObjectParameter("TwitterAddress", typeof(string));
    
            var linkedInParameter = linkedIn != null ?
                new ObjectParameter("LinkedIn", linkedIn) :
                new ObjectParameter("LinkedIn", typeof(string));
    
            var telephone1Parameter = telephone1 != null ?
                new ObjectParameter("Telephone1", telephone1) :
                new ObjectParameter("Telephone1", typeof(string));
    
            var telephone2Parameter = telephone2 != null ?
                new ObjectParameter("Telephone2", telephone2) :
                new ObjectParameter("Telephone2", typeof(string));
    
            var telephone3Parameter = telephone3 != null ?
                new ObjectParameter("Telephone3", telephone3) :
                new ObjectParameter("Telephone3", typeof(string));
    
            var publicProfileParameter = publicProfile != null ?
                new ObjectParameter("PublicProfile", publicProfile) :
                new ObjectParameter("PublicProfile", typeof(string));
    
            var startupsParameter = startups != null ?
                new ObjectParameter("Startups", startups) :
                new ObjectParameter("Startups", typeof(string));
    
            var businessModelParameter = businessModel != null ?
                new ObjectParameter("BusinessModel", businessModel) :
                new ObjectParameter("BusinessModel", typeof(string));
    
            var fundingParameter = funding != null ?
                new ObjectParameter("Funding", funding) :
                new ObjectParameter("Funding", typeof(string));
    
            var others1Parameter = others1 != null ?
                new ObjectParameter("Others1", others1) :
                new ObjectParameter("Others1", typeof(string));
    
            var softwareParameter = software != null ?
                new ObjectParameter("Software", software) :
                new ObjectParameter("Software", typeof(string));
    
            var lifeSciencesParameter = lifeSciences != null ?
                new ObjectParameter("LifeSciences", lifeSciences) :
                new ObjectParameter("LifeSciences", typeof(string));
    
            var industryOtherParameter = industryOther != null ?
                new ObjectParameter("IndustryOther", industryOther) :
                new ObjectParameter("IndustryOther", typeof(string));
    
            var others2Parameter = others2 != null ?
                new ObjectParameter("Others2", others2) :
                new ObjectParameter("Others2", typeof(string));
    
            var functionalAreasParameter = functionalAreas != null ?
                new ObjectParameter("FunctionalAreas", functionalAreas) :
                new ObjectParameter("FunctionalAreas", typeof(string));
    
            var others3Parameter = others3 != null ?
                new ObjectParameter("Others3", others3) :
                new ObjectParameter("Others3", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var mentorIdParameter = mentorId.HasValue ?
                new ObjectParameter("MentorId", mentorId) :
                new ObjectParameter("MentorId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Mentor_Questionnaries", prefixParameter, firstNameParameter, middleNameParameter, lastNameParameter, suffixParameter, nickNameParameter, organizationParameter, titleParameter, street1Parameter, addressLine1Parameter, city1Parameter, stateProvinceRegion1Parameter, zIP1Parameter, country1Parameter, street2Parameter, addressLine2Parameter, city2Parameter, stateProvinceRegion2Parameter, zIP2Parameter, country2Parameter, primaryEmailParameter, secondaryEmailParameter, skypeAddressParameter, twitterAddressParameter, linkedInParameter, telephone1Parameter, telephone2Parameter, telephone3Parameter, publicProfileParameter, startupsParameter, businessModelParameter, fundingParameter, others1Parameter, softwareParameter, lifeSciencesParameter, industryOtherParameter, others2Parameter, functionalAreasParameter, others3Parameter, userNameParameter, passwordParameter, mentorIdParameter);
        }
    
        public virtual int Mentor_CreateMentor(string email, string userName, string password, string name, Nullable<long> ventureId, Nullable<int> mentorTypeId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<bool> haverelevantExp, Nullable<bool> willhelpifNeeded, Nullable<bool> recruited, Nullable<bool> interested, Nullable<bool> conflictFinancialInterest, string comment, Nullable<System.DateTime> createdDate, Nullable<int> createdBy, Nullable<int> vmsstatus)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var ventureIdParameter = ventureId.HasValue ?
                new ObjectParameter("VentureId", ventureId) :
                new ObjectParameter("VentureId", typeof(long));
    
            var mentorTypeIdParameter = mentorTypeId.HasValue ?
                new ObjectParameter("MentorTypeId", mentorTypeId) :
                new ObjectParameter("MentorTypeId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var haverelevantExpParameter = haverelevantExp.HasValue ?
                new ObjectParameter("HaverelevantExp", haverelevantExp) :
                new ObjectParameter("HaverelevantExp", typeof(bool));
    
            var willhelpifNeededParameter = willhelpifNeeded.HasValue ?
                new ObjectParameter("WillhelpifNeeded", willhelpifNeeded) :
                new ObjectParameter("WillhelpifNeeded", typeof(bool));
    
            var recruitedParameter = recruited.HasValue ?
                new ObjectParameter("Recruited", recruited) :
                new ObjectParameter("Recruited", typeof(bool));
    
            var interestedParameter = interested.HasValue ?
                new ObjectParameter("Interested", interested) :
                new ObjectParameter("Interested", typeof(bool));
    
            var conflictFinancialInterestParameter = conflictFinancialInterest.HasValue ?
                new ObjectParameter("ConflictFinancialInterest", conflictFinancialInterest) :
                new ObjectParameter("ConflictFinancialInterest", typeof(bool));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var vmsstatusParameter = vmsstatus.HasValue ?
                new ObjectParameter("Vmsstatus", vmsstatus) :
                new ObjectParameter("Vmsstatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Mentor_CreateMentor", emailParameter, userNameParameter, passwordParameter, nameParameter, ventureIdParameter, mentorTypeIdParameter, startDateParameter, endDateParameter, haverelevantExpParameter, willhelpifNeededParameter, recruitedParameter, interestedParameter, conflictFinancialInterestParameter, commentParameter, createdDateParameter, createdByParameter, vmsstatusParameter);
        }
    }
}
